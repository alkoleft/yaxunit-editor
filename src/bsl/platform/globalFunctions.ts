import { SymbolType } from "../../scope/Scope"
import GlobalScope from "../../scope/globalScope"

const definition = [
    {
        "name": "ACos",
        "name_en": "ACos",
        "description": "Вычисляет арккосинус от аргумента Число.",
        "returns": "Тип: Число. Результат вычисления арккосинуса в радианах.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Аргумент функции. Определен в диапазоне -1 ... 1."
                }
            }
        }
    },
    {
        "name": "ASin",
        "name_en": "ASin",
        "description": "Вычисляет арксинус от аргумента Число.",
        "returns": "Тип: Число. Результат вычисления арксинуса в радианах.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Аргумент функции. Определен в диапазоне -1 ... 1."
                }
            }
        }
    },
    {
        "name": "ATan",
        "name_en": "ATan",
        "description": "Вычисляет арктангенс от аргумента Число.",
        "returns": "Тип: Число. Результат вычисления арктангенса в радианах.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Аргумент функции."
                }
            }
        }
    },
    {
        "name": "Base64Значение",
        "name_en": "Base64Value",
        "description": "Получает из строки закодированной по алгоритму base64 двоичные данные.",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): ДвоичныеДанные",
                "Параметры": {
                    "Строка": "Строка, закодированная по алгоритму base64."
                }
            }
        }
    },
    {
        "name": "Base64Строка",
        "name_en": "Base64String",
        "description": "Получает строку, закодированную по алгоритму base64.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: ДвоичныеДанные): Строка",
                "Параметры": {
                    "Значение": "Двоичные данные, которые необходимо закодировать по алгоритму base64."
                }
            }
        }
    },
    {
        "name": "Cos",
        "name_en": "Cos",
        "description": "Вычисляет косинус от аргумента Угол, заданного в радианах.",
        "returns": "Тип: Число. Результат вычисления косинуса.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Угол: Число): Число",
                "Параметры": {
                    "Угол": "Аргумент функции."
                }
            }
        }
    },
    {
        "name": "Exp",
        "name_en": "Exp",
        "description": "Вычисляет результат возведения основания натурального логарифма (числа e) в степень Число.",
        "returns": "Тип: Число. Результат возведения в степень.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Аргумент функции."
                }
            }
        }
    },
    {
        "name": "Log",
        "name_en": "Log",
        "description": "Вычисляет натуральный логарифм параметра Число.",
        "returns": "Тип: Число. Значение результата вычисления логарифма.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Исходное число, больше 0."
                }
            }
        }
    },
    {
        "name": "Log10",
        "name_en": "Log10",
        "description": "Вычисляет десятичный логарифм параметра Число.",
        "returns": "Тип: Число. Значение результата вычисления логарифма.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Исходное число, больше 0."
                }
            }
        }
    },
    {
        "name": "Pow",
        "name_en": "Pow",
        "description": "Возводит число X в степень Y.",
        "returns": "Тип: Число. Результат возведения в степень.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Основание: Число, Показатель: Число): Число",
                "Параметры": {
                    "Основание": "Основание операции возведения в степень.",
                    "Показатель": "Показатель степени."
                }
            }
        }
    },
    {
        "name": "Sin",
        "name_en": "Sin",
        "description": "Вычисляет синус от аргумента Угол, заданного в радианах.",
        "returns": "Тип: Число. Результат вычисления синуса.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Угол: Число): Число",
                "Параметры": {
                    "Угол": "Аргумент функции."
                }
            }
        }
    },
    {
        "name": "Sqrt",
        "name_en": "Sqrt",
        "description": "Вычисляет квадратный корень параметра Число.",
        "returns": "Тип: Число. Результат вычисления квадратного корня.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Аргумент функции. Неотрицательное число."
                }
            }
        }
    },
    {
        "name": "Tan",
        "name_en": "Tan",
        "description": "Вычисляет тангенс от аргумента Угол, заданного в радианах.",
        "returns": "Тип: Число. Результат вычисления тангенса.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Угол: Число): Число",
                "Параметры": {
                    "Угол": "Аргумент функции."
                }
            }
        }
    },
    {
        "name": "XMLЗначение",
        "name_en": "XMLValue",
        "description": "Выполняет преобразование из строки, полученной из текста элемента или значения атрибута XML, в значение в соответствии с указанным типом. Выполняет действие обратное действию метода",
        "returns": "Тип: Null, Булево, Число, Строка, Дата, УникальныйИдентификатор, ДвоичныеДанные, ХранилищеЗначения, ВидСчета, ВидДвиженияБухгалтерии, ВидДвиженияНакопления, ДопустимыйЗнак, ДопустимаяДлина, ЧастиДаты, Неопределено. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Тип: Тип, СтрокаXML: Строка): Null",
                "Параметры": {
                    "Тип": "Тип, значение которого надо получить при преобразовании из строкового представления XML.",
                    "СтрокаXML": "Строка, содержащая строковое представление значения, полученное из XML."
                }
            }
        }
    },
    {
        "name": "XMLСтрока",
        "name_en": "XMLString",
        "description": "Получает XML представление значения для помещения в текст элемента или значение атрибута XML.  - Строка - как есть;  - Булево: Истина - как \"true\", Ложь - как \"false\";  - Дата - XML представление соответствует представлению типа dateTime схемы XML (см. http://www.w3.org/TR/xmlschema-2/#dateTime);  - Число - XML представление соответствует представлению типа decimal схемы XML (см. http://www.w3.org/TR/xmlschema-2/#decimal);  - Значение системного перечисления (для перечислений, поддерживающих XML сериализацию) - как имя значения перечисления;  - УникальныйИдентификатор - как строковое представление уникального идентификатора;  - Ссылки - как XML представление уникального идентификатора ссылки;  - ХранилищеЗначения и ДвоичныеДанные - как строка в формате base64.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Неопределено): Строка",
                "Параметры": {
                    "Значение": "Значение, для которого должно быть получено строковое представление, которое может быть использовано как текст элемента или значение атрибута XML."
                }
            }
        }
    },
    {
        "name": "XMLТип",
        "name_en": "XMLType",
        "description": "Получает тип данных XML, соответствующий переданному в качестве параметра типу.",
        "returns": "Тип: ТипДанныхXML. Неопределено, если никакой тип данных XML не соответствует указанному типу.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Тип: Тип): ТипДанныхXML",
                "Параметры": {
                    "Тип": "Тип значения, для которого необходимо определить соответствующий XML тип."
                }
            }
        }
    },
    {
        "name": "XMLТипЗнч",
        "name_en": "XMLTypeOf",
        "description": "Получает тип данных XML, соответствующий типу переданного в качестве параметра значения.",
        "returns": "Тип: ТипДанныхXML, Неопределено. Если тип данных XML, соответствующий типу переданного в качестве параметра значения определен, то метод возвращает тип данных XML. Если не определен, то метод возвращает Неопределено.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный): ТипДанныхXML",
                "Параметры": {
                    "Значение": "Значение, для типа которого нужно получить соответствующий тип данных XML."
                }
            }
        }
    },
    {
        "name": "АктивноеОкно",
        "name_en": "ActiveWindow",
        "description": "Получает текущее активное окно.",
        "returns": "Тип: ОкноКлиентскогоПриложения, Неопределено. "
    },
    {
        "name": "БезопасныйРежим",
        "name_en": "SafeMode",
        "description": "Получает текущее значение безопасного режима.",
        "returns": "Тип: Булево, Строка. Строка, если установлен безопасный режим с указанием имени профиля безопасности. Истина, если установлен безопасный режим. Ложь, если безопасный режим не установлен."
    },
    {
        "name": "БезопасныйРежимРазделенияДанных",
        "name_en": "DataSeparationSafeMode",
        "description": "Показывает, установлен ли безопасный режим разделения данных по данному разделителю. Учитывает установку режима безопасного сеанса, определяемого установкой атрибута safe=”true” элемента zone файла default.vrd.",
        "returns": "Тип: Булево. Истина - безопасный режим разделения данных по данному разделителю включен.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбщийРеквизит: Строка): Булево",
                "Параметры": {
                    "ОбщийРеквизит": "Имя общего реквизита со значением \"Использовать\" свойства \"Разделение данных\", для которого должен быть получен безопасный режим разделения данных."
                }
            }
        }
    },
    {
        "name": "Булево",
        "name_en": "Boolean",
        "description": "Преобразует полученный параметр в значение типа   - 0 преобразуется в Ложь;  - остальные значения преобразуются в Истина.",
        "returns": "Тип: Булево. Полученное значение.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Число): Булево",
                "Параметры": {
                    "Значение": "Исходное значение."
                }
            }
        }
    },
    {
        "name": "ВвестиДату",
        "name_en": "InputDate",
        "description": "Вызывает диалог для ввода даты.",
        "returns": "Тип: Булево. Истина - дата введена; Ложь - пользователь отказался от ввода даты.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата, Подсказка?: Строка, ЧастьДаты?: ЧастиДаты): Булево",
                "Параметры": {
                    "Дата": "Имя доступной в модуле переменной. В эту переменную будет помещено введенное значение даты. Начальное значение переменной будет использовано в качестве начального значения в диалоге.",
                    "Подсказка": "Текст заголовка окна диалога ввода даты. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "ЧастьДаты": "Вводимая в диалоге часть (или части) даты. Значение по умолчанию: ДатаВремя."
                }
            }
        }
    },
    {
        "name": "ВвестиЗначение",
        "name_en": "InputValue",
        "description": "Вызывает диалог для ввода значения заданного типа. Если тип переменной не определен и Тип представляет собой составной тип данных, то в поле ввода появляется кнопка выбора типа.",
        "returns": "Тип: Булево. Истина - в диалоге было введено значение; Ложь - пользователь отказался от ввода значения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный, Подсказка?: Строка, Тип?: Тип): Булево",
                "Параметры": {
                    "Значение": "Имя доступной в модуле переменной. В эту переменную будет помещено введенное значение. Если параметр <Тип> не задан или имеет значение Неопределено, тип данной переменной используется в качестве типа вводимого в диалоге данного. Начальное значение переменной будет использовано в качестве начального значения в диалоге.",
                    "Подсказка": "Текст заголовка окна диалога ввода значения. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "Тип": "Тип вводимого значения. Если параметр не указан, используется тип параметра <Значение>."
                }
            }
        }
    },
    {
        "name": "ВвестиСтроку",
        "name_en": "InputString",
        "description": "Вызывает диалог для ввода строки.",
        "returns": "Тип: Булево. Истина - строка введена; Ложь - пользователь отказался от ввода строки.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, Подсказка?: Строка, Длина?: Число, Многострочность?: Булево): Булево",
                "Параметры": {
                    "Строка": "Доступная в модуле переменная. В эту переменную будет помещена введенная в диалоге строка. Начальное значение переменной будет использовано в качестве начального значения в диалоге.",
                    "Подсказка": "Текст заголовка окна диалога ввода строки. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "Длина": "Длина вводимой строки. Если параметр не указан, то строка неограниченной длины. Значение по умолчанию: 0.",
                    "Многострочность": "Определяет режим ввода многострочного текста: Истина - ввод многострочного текста с разделителями строк; Ложь - ввод простой строки. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ВвестиЧисло",
        "name_en": "InputNumber",
        "description": "Вызывает диалог для ввода числа.",
        "returns": "Тип: Булево. Истина - число введено; Ложь - пользователь отказался от ввода.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, Подсказка?: Строка, Длина?: Число, Точность?: Число): Булево",
                "Параметры": {
                    "Число": "Имя доступной в модуле переменной. В эту переменную будет помещено введенное число. Начальное значение переменной будет использовано в качестве начального значения в диалоге.",
                    "Подсказка": "Текст заголовка окна диалога ввода числа. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "Длина": "Длина вводимого числа включая дробную часть (символы разделителей не учитываются). Значение по умолчанию: 0.",
                    "Точность": "Количество знаков в дробной части вводимого числа. Значение по умолчанию: 0."
                }
            }
        }
    },
    {
        "name": "ВозможностьЧтенияXML",
        "name_en": "CanReadXML",
        "description": "Производит проверку возможности чтения из XML значения указанного типа.",
        "returns": "Тип: Булево. Истина - тип 1С:Предприятия существует; Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧтениеXML: ЧтениеXML): Булево",
                "Параметры": {
                    "ЧтениеXML": "Объект, через который производится чтение XML."
                }
            }
        }
    },
    {
        "name": "Вопрос",
        "name_en": "DoQueryBox",
        "description": "Выводит на экран окно вопроса.",
        "returns": "Тип: Произвольный. В зависимости от реакции пользователя возвращается значение системного перечисления или значение, связанное с нажатой кнопкой. В случае закрытия диалога по истечении времени ожидания возвращается значение Таймаут.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТекстВопроса: Строка, Кнопки: РежимДиалогаВопрос, Таймаут?: Число, КнопкаПоУмолчанию?: Произвольный, Заголовок?: Строка, КнопкаТаймаута?: Произвольный): Произвольный",
                "Параметры": {
                    "ТекстВопроса": "Текст задаваемого вопроса.",
                    "Кнопки": "Задает состав и текст кнопок диалога, а также, связанные с кнопками значения. При использовании типа СписокЗначений:  - Значение – содержит значение, связанное с кнопкой. Это значение является возвращаемым значением при выборе кнопки. В качестве значения может использоваться значение перечисления КодВозвратаДиалога, а также другие значения;  - Представление – задает текст кнопки. Если представление не задано и в качестве значения используется значение перечисления КодВозвратаДиалога, то используется стандартное представление;  - Картинка – не используется (должна быть пустой);  - Пометка – не используется (должна быть пустой). При использовании типа СписокЗначений список не должен быть пустым.",
                    "Таймаут": "Интервал времени в секундах, в течение которого система будет ожидать ответа пользователя. По истечении интервала окно вопроса будет закрыто. Если параметр не указан, то время ожидания не ограничено. Если параметр имеет отрицательное значение, будет сгенерировано исключение. Значение по умолчанию: 0.",
                    "КнопкаПоУмолчанию": "Определяет кнопку по умолчанию по типу кнопки или по связанному с ней значению.",
                    "Заголовок": "Содержит заголовок окна вопроса. Если не установлен, то у диалога заголовок не отображается.",
                    "КнопкаТаймаута": "Определяет кнопку (по типу кнопки или по связанному с ней значению), на которой отображается количество секунд, оставшихся до истечения таймаута."
                }
            }
        }
    },
    {
        "name": "ВосстановитьЗначение",
        "name_en": "RestoreValue",
        "description": "Получает значение, сохраненное ранее с помощью метода",
        "returns": "Тип: Произвольный. Восстановленное значение. Если восстановить не удалось, возвращает Неопределено.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Имя: Строка): Произвольный",
                "Параметры": {
                    "Имя": "Имя сохраненного значения."
                }
            }
        }
    },
    {
        "name": "ВРег",
        "name_en": "Upper",
        "description": "Преобразует все символы строки в верхний регистр.",
        "returns": "Тип: Строка. Строка, полученная в результате преобразования.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Строка",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "ВыгрузитьЖурналРегистрации",
        "name_en": "UnloadEventLog",
        "description": "Выгружает журнал регистрации. Существует возможность установить отбор, задаваемый структурой специального формата, указывающий, какие записи журнала регистрации выгружать, а также указать колонки, которые необходимо выгружать. Если указано имя входного файла, то происходит выгрузка из указанного файла.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Приемник: Строка, Отбор?: Структура, Колонки?: Строка, ИмяВходногоФайла?: Строка, МаксимальноеКоличество?: Число)",
                "Параметры": {
                    "Приемник": "Строка, содержащая имя выходного XML файла, либо таблица значений, в которую будут выгружены выбранные в соответствии с отбором записи журнала регистрации. В случае выгрузки в таблицу значений, она содержит колонки, в соответствии с параметром <Колонки>:  - Уровень (Level) - тип УровеньЖурналаРегистрации;  - Дата (Date) - тип Дата;  - Пользователь (User) - идентификатор пользователя, тип УникальныйИдентификатор;  - Компьютер (Computer) - имя компьютера, тип Строка;  - ИмяПриложения (ApplicationName) - имя приложения, тип Строка;  - Событие (Event ) - имя события, тип Строка;  - Комментарий (Comment) - комментарий, тип Строка;  - Метаданные (Metadata) - имя объекта метаданных, тип Строка; для событий \"Доступ. Доступ\" и \"Доступ. Отказ в доступе\" в этой колонке может содержаться массив имен объектов метаданных, тип Массив;  - Данные (Data) - данные, произвольного типа, в зависимости от события;  - ПредставлениеДанных (DataPresentation) - представление данных, тип Строка;  - ИмяПользователя (UserName) - имя пользователя, тип Строка;  - ПредставлениеПриложения (ApplicationPresentation) - представление имени приложения, тип Строка;  - ПредставлениеСобытия (EventPresentation) - представление события, тип Строка;  - ПредставлениеМетаданных (MetadataPresentation) - представление объекта метаданных; тип Строка; для событий \"Доступ. Доступ\" и \"Доступ. Отказ в доступе\" в этой колонке может содержаться массив представлений объектов метаданных, тип Массив;  - СтатусТранзакции (TransactionStatus) - статус транзакции, тип СтатусТранзакцииЗаписиЖурналаРегистрации;  - Транзакция (TransactionID) - представление транзакции, тип Строка;  - Сеанс (Session) - номер сеанса, тип Число;  - Соединение (Connection) - номер соединения, тип Число;  - РабочийСервер (ServerName) - имя рабочего сервера, тип Строка;  - ОсновнойIPПорт (Port) - номер основного IP-порта, тип Число;  - ВспомогательныйIPПорт (SyncPort) - номер вспомогательного IP-порта, тип Строка;  - РазделениеДанныхСеанса (SessionDataSeparation) - Структура с элементами, имена которых соответствуют именам общих реквизитов, разделяющих данные, а значения - значениям этих общих реквизитов;  - ПредставлениеРазделенияДанныхСеанса (SessionDataSeparationPresentation) - Массив строк вида: <представление общего реквизита>: <представление значения общего реквизита>.",
                    "Отбор": "Структура отбора журнала регистрации:  - ДатаНачала (StartDate) - Дата; значение по умолчанию Неопределено;  - ДатаОкончания (EndDate) - Дата; значение по умолчанию Неопределено;  - Уровень (Level) - перечисление или массив перечислений; значение по умолчанию Неопределено;  - ИмяПриложения (ApplicationName) - Строка или массив строк; значение по умолчанию Неопределено;  - Пользователь (User) - ПользовательИнформационнойБазы или массив таких объектов, или Строка. Объект ПользовательИнформационнойБазы и массив таких объектов можно получить из объекта МенеджерПользователейИнформационнойБазы. Также можно задавать пользователя по имени (строкой). Причем пользователей, которые были удалены из информационной базы, можно задавать только таким способом. Пустая строка означает \"пользователя по умолчанию\", который используется, когда в информационной базе нет ни одного пользователя (от имени такого пользователя работают также фоновые задания). Если в отборе задается массив пользователей, то можно перемешивать в нем значения обоих типов - строка и ПользовательИнформационнойБазы. Значение по умолчанию Неопределено;  - Компьютер (Computer) - Строка или массив строк; значение по умолчанию Неопределено;  - Событие (Event) - Строка или массив строк; значение по умолчанию Неопределено. Допустимые системные имена событий:   - _$Access$_.Access - Доступ. Доступ; Записывается при следующих обстоятельствах:   - при регистрации фактов успешного доступа пользователей информационной базы к тем или иным данным,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка.  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) в этом случае имеет следующий состав:   - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались. Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Access$_.AccessDenied - Доступ. Отказ в доступе; Записывается в следующих случаях:   - при регистрации фактов отказа в доступе к тем или иным данным пользователям информационной базы,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка,  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) имеет следующий состав:    - Для ошибки доступа к объекту (не ограничение доступа к данным):    - Право (Right) - имя нарушенного права;  - Для ошибки ограничения доступа к данным:    - Действие (Action) - Действие, которое выполнялось с данными, для объектных таблиц: Чтение (Read), Добавление (Insert), Изменение (Update), Удаление (Delete); для не объектных таблиц, все что не Чтение, то Изменение;  - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались.Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Data$_.Delete - Данные. Удаление;  - _$Data$_.DeletePredefinedData - Данные. Удаление предопределенных данных;  - _$Data$_.DeleteVersions - Данные. Удаление версий;  - _$Data$_.New - Данные. Добавление;  - _$Data$_.NewPredefinedData - Данные. Добавление предопределенных данных;  - _$Data$_.NewVersion - Данные. Добавление версии;  - _$Data$_.Post - Данные. Проведение;  - _$Data$_.PredefinedDataInitialization - Данные. Инициализация предопределенных данных;  - _$Data$_.PredefinedDataInitializationDataNotFound - Данные. Инициализация предопределенных данных. Данные не найдены;  - _$Data$_.SetPredefinedDataInitialization - Данные. Установка инициализации предопределенных данных;  - _$Data$_.SetStandardODataInterfaceContent - Данные. Изменение состава стандартного интерфейса OData;  - _$Data$_.TotalsMaxPeriodUpdate - Данные. Изменение максимального периода рассчитанных итогов;  - _$Data$_.TotalsMinPeriodUpdate - Данные. Изменение минимального периода рассчитанных итогов;  - _$Data$_.Unpost - Данные. Отмена проведения;  - _$Data$_.Update - Данные. Изменение;  - _$Data$_.UpdatePredefinedData - Данные. Изменение предопределенных данных;  - _$Data$_.VersionCommentUpdate - Данные. Изменение комментария версии;  - _$InfoBase$_.ConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.ConfigUpdate - Информационная база. Изменение конфигурации;  - _$InfoBase$_.DBConfigBackgroundUpdateCancel - Информационная база. Отмена фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateFinish - Информационная база. Завершение фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateResume - Информационная база. Продолжение (после приостановки) процесса фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateStart - Информационная база. Запуск фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateSuspend - Информационная база. Приостановка (пауза) процесса фонового обновления;  - _$InfoBase$_.DBConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.DBConfigExtensionUpdateError  - Информационная база. Ошибка изменения расширения конфигурации; Поле Данные заполняется аналогично событию _$InfoBase$_.DBConfigExtensionUpdate (при возможности вывода этих данных);  - _$InfoBase$_.DBConfigUpdate - Информационная база. Изменение конфигурации базы данных;  - _$InfoBase$_.DBConfigUpdateStart - Информационная база. Запуск обновления конфигурации базы данных;  - _$InfoBase$_.DumpError - Информационная база. Ошибка выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpFinish - Информационная база. Окончание выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpStart - Информационная база. Начало выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.EraseData - Информационная база. Удаление данных информационной баз;  - _$InfoBase$_.EventLogReduce - Информационная база. Сокращение журнала регистрации; записываются при сокращении журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Дата (Date) - Дата;  - _$InfoBase$_.EventLogReduceError - Информационная база. Ошибка сокращения журнала регистрации; записываются при ошибках сокращения журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.EventLogReduce (при возможности вывода этих данных);  - _$InfoBase$_.EventLogSettingsUpdate - Информационная база. Изменение параметров журнала регистрации;  - _$InfoBase$_.EventLogSettingsUpdateError - Информационная база. Изменение настроек журнала регистрации; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные (Структура) заполняется структурой со следующим составом свойств:  - При изменении уровня событий и/или периода разделения журнала регистрации(записываются только измененные параметры):  - Уровни (Levels): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При изменении формата журнала регистрации:  - ФорматЖурналаРегистрации (EventLogStructure): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При настройке использования событий журнала регистрации (с помощью метода УстановитьИспользованиеСобытияЖурналаРегистрации):  - ИмяСобытия (EventName) - Строка;   - СобытиеРегистрируется (EventIsLogged) - Булево;  - _$InfoBase$_.InfoBaseAdmParamsUpdate - Информационная база. Изменение параметров информационной базы;  - _$InfoBase$_.InfoBaseAdmParamsUpdateError - Информационная база. Ошибка изменения параметров информационной базы; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.InfoBaseAdmParamsUpdate (при возможности вывода этих данных);  - _$InfoBase$_.IntegrationServiceActiveUpdate - Информационная база. Изменение активности сервиса интеграции;  - _$InfoBase$_.IntegrationServiceSettingsUpdate - Информационная база. Изменение настроек сервиса интеграции;  - _$InfoBase$_.MasterNodeUpdate - Информационная база. Изменение главного узла;  - _$InfoBase$_.PredefinedDataUpdate - Информационная база. Обновление предопределенных данных;  - _$InfoBase$_.RegionalSettingsUpdate - Информационная база. Изменение региональных установок;  - _$InfoBase$_.RestoreError - Информационная база. Ошибка загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreFinish - Информационная база. Окончание загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreStart - Информационная база. Начало загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.SecondFactorAuthTemplateDelete - Информационная база. УдалениеШаблонаВторгоФактораАутентификации; записывается при удалении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateNew - Информационная база. ДобавлениеШаблонаВторгоФактораАутентификации; записывается при создании шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateUpdate - Информационная база. ИзменениеШаблонаВторгоФактораАутентификации; записывается при изменении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SetPredefinedDataUpdate - Информационная база. Установить обновление предопределенных данных;  - _$InfoBase$_.TARImportant - Тестирование и исправление. Ошибка;  - _$InfoBase$_.TARInfo - Тестирование и исправление. Сообщение;  - _$InfoBase$_.TARMess - Тестирование и исправление. Предупреждение;  - _$Job$_.Cancel - Фоновое задание. Отмена;  - _$Job$_.Fail - Фоновое задание. Ошибка выполнения;  - _$Job$_.Start - Фоновое задание. Запуск;  - _$Job$_.Succeed - Фоновое задание. Успешное завершение;  - _$Job$_.Terminate - Фоновое задание. Принудительное завершение;  - _$OpenIDProvider$_.NegativeAssertion - Провайдер OpenID. Отклонено; записывается базой, выступающей в роли провайдера OpenID, при отправке отрицательного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию.  - _$OpenIDProvider$_.PositiveAssertion - Провайдер OpenID. Подтверждено; записывается базой, выступающей в роли провайдера OpenID, при отправке положительного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию;  - _$PerformError$_ - Ошибка выполнения;  - _$Session$_.Authentication - Сеанс. Аутентификация; выполняется только при удачной аутентификации. Для события Аутентификация записываются поля Пользователь и ИмяПользователя. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - КодДополненияИмениПользователя (UserNameAdditionCode)- Строка. Код дополнения имения пользователя. При наличии дополнения имени пользователя при вводе имени пользователя в процессе аутентификации.  - В случае аутентификации при помощи OpenID поле Данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID;  - ИдентификаторПользователяПровайдераOpenID (OpenIDProviderUserID) - идентификатор пользователя на провайдере.  - _$Session$_.AuthenticationError - Сеанс. Ошибка аутентификации; выполняется только при ошибке аутентификации. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - В случае аутентификации при помощи OpenID поле данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID  - _$Session$_.AuthenticationFirstFactor - Сеанс. Аутентификация первый фактор; Записывается только если у пользователя включена двухфакторная аутентифкация. Для события Аутентификация первый фактор поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - _$Session$_.ConfigExtensionApplyError - Сеанс. Ошибка применения расширения конфигурации; записывается, если в процессе применений расширения произошла ошибка. Совпадает с текстом выводимого сообщения при невозможности подключить расширение. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения  - _$Session$_.Finish - Сеанс. Завершение;  - _$Session$_.Start - Сеанс. Начало;  - _$Transaction$_.Begin - Транзакция. Начало;  - _$Transaction$_.Commit - Транзакция. Фиксация;  - _$Transaction$_.Rollback - Транзакция. Отмена;  - _$User$_.AuthenticationLock - Пользователи. Блокировка аутентификации. Поле Данные заполняется структурой со следующим составом свойств:  - - Имя (Name) – Строка. Имя пользователя, аутентификация которого блокируется. ;  - _$User$_.AuthenticationUnlock - Пользователи. Разблокировка аутентификации. Записывается при изменении блокировки аутентификации пользователя  (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структорой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  -   - _$User$_.AuthenticationUnlockError (_$User$_.AuthenticationUnlockError) - Пользователи. Ошибка разблокировки аутентификации; записываются при отказе в ручном изменении блокировки аутентификации пользователя (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  - _$User$_.Delete - Пользователи. Удаление; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя  - _$User$_.DeleteError - Пользователи. Ошибка удаления; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Delete (при возможности вывода этих данных);  - _$User$_.New - Пользователи. Добавление; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево.  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево.  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык.  - _$User$_.NewError - Пользователи. Ошибка добавления; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.New (при возможности вывода этих данных);  - _$User$_.Update - Пользователи. Изменение; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево;  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево;  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык;  - _$User$_.UpdateError - Пользователи. Ошибка изменения; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Update (при возможности вывода этих данных);   - Метаданные (Metadata) - объект описания метаданного или их массив; значение по умолчанию Неопределено;  - Данные (Data) - значение, тип значения – ссылка на объект (СправочикСсылка и т.д.); значение по умолчанию Неопределено;  - ПредставлениеДанных (DataPresentation) - Строка;  - Комментарий (Comment) - Строка;  - СтатусТранзакции (TransactionStatus) - перечисление или массив перечислений; значение по умолчанию Неопределено;  - Транзакция (TransactionID) - идентификатор транзакции; Строка;  - Сеанс (Session) - номер сеанса пользователя. Число или массив чисел; значение по умолчанию Неопределено;  - РабочийСервер (ServerName) - Строка или массив строк; значение по умолчанию Неопределено;  - ОсновнойIPПорт (Port) - номер основного IP-порта рабочего процесса; Число или массив чисел; значение по умолчанию Неопределено;  - ВспомогательныйIPПорт (SyncPort) - номер вспомогательного IP-порта рабочего процесса. Число или массив чисел; значение по умолчанию Неопределено.  - РазделениеДанныхСеанса (SessionDataSeparation) - Структура, имена элементов которой соответствуют именам общих реквизитов. В процессе отбора элементы структуры РазделениеДанныхСеанса объединяются по И: запись журнала попадает в выборку, если в ней есть соответствия для всех общих реквизитов, заданных в отборе. Значение по умолчанию Неопределено.  - Значение элемента структуры, в свою очередь, может быть:   - структурой, задающей единичное значение. Элементы структуры:   - Значение (Value) - значение общего реквизита. Значение по умолчанию - Неопределено;  - Использование (Use) - Булево. Значение по умолчанию - Истина. Задает использование общего реквизита, разделяющего данные. Если Ложь - элемент Значение игнорируется и может быть опущен. Таким образом можно отбирать записи журнала, в которых данный общий реквизит не установлен.   - массивом, который задает набор допустимых значений общего реквизита, разделяющего данные. Массив содержит структуры, каждая из которых задает единичное значение общего реквизита (как описано выше). Элементы массива учитываются по ИЛИ: запись журнала попадает в выборку, если значение общего реквизита в ней равно одному из заданных в массиве.",
                    "Колонки": "Для того чтобы выгрузить определенные колонки журнала регистрации необходимо перечислить их имена, при этом необходимо имя каждой колонки отделять запятой. Доступны следующие колонки:  - Уровень (Level);  - Дата (Date);  - Пользователь (User);  - Компьютер (Computer);  - ИмяПриложения (ApplicationName);  - Событие (Event);  - Комментарий (Comment);  - Метаданные (Metadata);  - Данные (Data);  - ПредставлениеДанных (DataPresentation);  - ИмяПользователя (UserName);  - ПредставлениеПриложения (ApplicationPresentation);  - ПредставлениеСобытия (EventPresentation);  - ПредставлениеМетаданных (MetadataPresentation);  - СтатусТранзакции (TransactionStatus);  - Транзакция (TransactionID);  - Сеанс (Session);  - Соединение (Connection);  - РабочийСервер (ServerName);  - ОсновнойIPПорт (Port);  - ВспомогательныйIPПорт (SyncPort);  - РазделениеДанныхСеанса (SessionDataSeparation);  - ПредставлениеРазделенияДанныхСеанса (SessionDataSeparationPresentation). Если не задан, то будут выгружены значения всех колонок.",
                    "ИмяВходногоФайла": "Строка, содержащая имя входного файла.",
                    "МаксимальноеКоличество": "Ограничивает число считываемых методом событий журнала.  Если параметр не указан или равен 0 - без ограничения. Если указано конечное число, метод считывает последние в хронологическом порядке события с учетом установленного отбора в количестве, не превышающем значения параметра."
                }
            }
        }
    },
    {
        "name": "ВыполнитьОбработкуЗаданий",
        "name_en": "ProcessJobs",
        "description": "Вызывает обработку текущих заданий. Имеет смысл только для файлового варианта.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ВремяОбработки?: Число)",
                "Параметры": {
                    "ВремяОбработки": "Время в секундах обработки очередной порции заданий. Если время не задано, будет выполнен только один цикл обработки."
                }
            }
        }
    },
    {
        "name": "ВыполнитьОбработкуОповещения",
        "name_en": "ExecuteNotifyProcessing",
        "description": "Запускает выполнение процедуры (или функции), описанной в параметре ВыполняемоеОповещение.",
        "returns": "Тип: Произвольный. Неопределено - если в параметре <ВыполняемоеОповещение> передан объект оповещения инициализированный именем процедуры. Произвольное значение (результат выполнения функции), если в описание оповещения передана функция.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ВыполняемоеОповещение: ОписаниеОповещения, Результат?: Произвольный): Произвольный",
                "Параметры": {
                    "ВыполняемоеОповещение": "Содержит описание процедуры, вызов которой будет произведен со следующими параметрами:  - <Результат> - значение результата, переданное вторым параметром при вызове метода,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта оповещения.",
                    "Результат": "Значение, которое будет передано в процедуру, описанную параметром <ВыполняемоеОповещение>. Содержит результат, который мог быть получен при помощи алгоритма с использованием блокирующих методов. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "ВыполнитьПроверкуПравДоступа",
        "name_en": "VerifyAccessRights",
        "description": "Выполняет проверку прав текущего пользователя.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Право: Строка, ОбъектМетаданных: ОбъектМетаданных: Куб, СтандартныйРеквизитСтандартнаяТабличнаяЧасть?: Строка)",
                "Параметры": {
                    "Право": "Проверяемое право.",
                    "ОбъектМетаданных": "Объект метаданных, права на доступ к которому проверяются.",
                    "СтандартныйРеквизитСтандартнаяТабличнаяЧасть": "Необязательное имя стандартного реквизита, имя стандартного реквизита стандартной табличной части или имя стандартной табличной части.  Для стандартного реквизита стандартной табличной части, имя табличной части указывается перед точкой до имени реквизита. Например: \"ВидыСубконто.ВидСубконто\"."
                }
            }
        }
    },
    {
        "name": "Вычислить",
        "name_en": "Eval",
        "description": "Вычисляет переданное выражение. С помощью метода можно вычислять математические и логические выражения, а также операции конкатенации. Подробнее про выражения см. раздел \"Выражения языка\".",
        "returns": "Тип: Произвольный. Результат вычисления выражения. Тип возвращаемого значения зависит от типа выражения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Выражение: Строка): Произвольный",
                "Параметры": {
                    "Выражение": "Выражение, которое требуется вычислить."
                }
            }
        }
    },
    {
        "name": "Год",
        "name_en": "Year",
        "description": "Определяет год в указанной дате.",
        "returns": "Тип: Число. Год в указанной дате.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "ДанныеФормыВЗначение",
        "name_en": "FormDataToValue",
        "description": "Преобразует данные формы в объект прикладного типа.",
        "returns": "Тип: Произвольный. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Объект: ДанныеФормыСтруктураСКоллекцией, Тип: Тип): Произвольный",
                "Параметры": {
                    "Объект": "Данные формы.",
                    "Тип": "Тип значения, получаемого из данных формы."
                }
            }
        }
    },
    {
        "name": "Дата",
        "name_en": "Date",
        "description": "Преобразует полученный параметр (параметры) в значение типа",
        "returns": "Тип: Дата. ",
        "signature": {
            "ПоСтроке": {
                "СтрокаПараметров": "(Значение: Строка): Дата",
                "Параметры": {
                    "Значение": "Исходное значение даты. Строка должна содержать дату в локальном формате даты или в каноническом виде YYYYMMDDHHMMSS."
                }
            },
            "ПоСоставляющим": {
                "СтрокаПараметров": "(Год: Число, Месяц: Число, День: Число, Час?: Число, Минута?: Число, Секунда?: Число): Дата",
                "Параметры": {
                    "Год": "Год даты.",
                    "Месяц": "Месяц даты.",
                    "День": "День даты.",
                    "Час": "Час даты.",
                    "Минута": "Минута даты.",
                    "Секунда": "Секунда даты."
                }
            }
        }
    },
    {
        "name": "День",
        "name_en": "Day",
        "description": "Определяет календарный день в указанной дате.",
        "returns": "Тип: Число. День в указанной дате.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "ДеньГода",
        "name_en": "DayOfYear",
        "description": "Определяет номер дня в году для указанной даты.",
        "returns": "Тип: Число. Номер дня в году.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "ДеньНедели",
        "name_en": "WeekDay",
        "description": "Определяет номер дня недели для указанной даты.",
        "returns": "Тип: Число. Номер дня недели.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "ДобавитьМесяц",
        "name_en": "AddMonth",
        "description": "Добавляет (или вычитает) к указанной дате заданное число месяцев.",
        "returns": "Тип: Дата. Дата, полученная в результате добавления.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата, ЧислоМесяцев: Число): Дата",
                "Параметры": {
                    "Дата": "Исходная дата.",
                    "ЧислоМесяцев": "Количество месяцев, которое необходимо добавить к исходной дате. Если принимает отрицательное значение, то число месяцев вычитается."
                }
            }
        }
    },
    {
        "name": "ЗаблокироватьДанныеДляРедактирования",
        "name_en": "LockDataForEdit",
        "description": "Заблокировать данные для редактирования в форме клиентского приложения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Ключ: РегистрСведенийКлючЗаписи.<Имя регистра сведений>, ВерсияДанных?: Строка, ИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "Ключ": "Ссылка на объект, который должен быть заблокирован, или ключ записи независимого регистра сведений, которая должна быть заблокирована.",
                    "ВерсияДанных": "Версия блокируемого объекта в формате Base64. Используется, если параметр <Ключ> имеет тип Любая ссылка на объект информационной базы.  Если указан, то при блокировке объекта проверяется версия объекта базы данных. При несовпадении версии или отсутствии объекта в базе данных генерируется исключение.",
                    "ИдентификаторФормы": "Уникальный идентификатор формы. Если параметр указан, то блокировка устанавливается на все время жизни формы, в которой установлена блокировка. Важно, что если за время отображения формы не были установлены другие блокировки от имени этой формы (при интерактивном редактировании или методом ЗаблокироватьДанныеФормыДляРедактирования), то при закрытии формы блокировка может быть отменена не сразу, а через некоторое время. Блокировка может быть снята:  - автоматически при закрытии формы или завершении сеанса;  - с помощью метода глобального контекста РазблокироватьДанныеДляРедактирования с указанием того же идентификатора формы, который указывался для установки блокировки. В этом случае блокировка снимается сразу. Если параметр не указан, то блокировка устанавливается на ограниченное время и может быть снята:  - с помощью метода РазблокироватьДанныеДляРедактирования без указания идентификатора формы;  - при окончании транзакции, если блокировка установлена в транзакции;  - при окончании работы встроенного языка (для режимов запуска \"Тонкий клиент\" и \"Веб-клиент\"; при возврате управления с сервера);  - при завершении сеанса."
                }
            }
        }
    },
    {
        "name": "ЗаблокироватьРаботуПользователя",
        "name_en": "LockApplication",
        "description": "Блокирует работу пользователя, минимизирует окно 1С:Предприятия и выводит диалог аутентификации. Продолжение работы возможно только после ввода пароля."
    },
    {
        "name": "ЗавершитьРаботуСистемы",
        "name_en": "Exit",
        "description": "Позволяет принудительно вызвать завершение работы 1С:Предприятия. В зависимости от переданного параметра будут вызываться обработчики закрытия и завершения работы системы или завершает работу безусловно.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЗапрашиватьВозможность?: Булево, ПерезапуститьПриЗавершении?: Булево, ДополнительныеПараметрыКоманднойСтроки?: Строка)",
                "Параметры": {
                    "ЗапрашиватьВозможность": "Если Ложь, то завершение работы программы будет выполнено безусловно (независимо от наличия редактируемых данных). Если значение параметра Истина, то будут вызываться обработчики закрытия для каждой открытой формы и для всего приложения. Для редакторов текстов, табличных документов и HTML-документов будет произведен анализ модифицированности. Если нет факторов, препятствующих закрытию (например, данные модифицированы и не сохранены), то выполняется завершение работы. В противном случае (такие данные есть) будет выдан вопрос о необходимости сохранения документов. Значение по умолчанию: Истина.",
                    "ПерезапуститьПриЗавершении": "Указывает необходимость выполнения запуска нового сеанса с текущими установками после завершения работы. Значение по умолчанию: Ложь.",
                    "ДополнительныеПараметрыКоманднойСтроки": "Содержит дополнительные параметры, которые будут переданы новому сеансу. Если такие параметры уже есть среди текущих установок, переданные заменят текущие. Параметр указывается, если значение параметра <ПерезапуститьПриЗавершении>=Истина. Если режим приложения (УправляемоеПриложение/ ОбычноеПриложение) не задан явно дополнительным параметром командной строки, при запуске текущего приложения учитывается использование параметров принудительного включения режима управляемого или обычного приложения /RunModeManagedApplication и /RunModeOrdinaryApplication."
                }
            }
        }
    },
    {
        "name": "ЗагрузитьВнешнююКомпоненту",
        "name_en": "LoadAddIn",
        "description": "Загружает внешний компонент и подключает ее объекты к 1С:Предприятию. Объекты этого компонента должны быть построены по технологии внешних компонентов COM.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайла: Строка)",
                "Параметры": {
                    "ИмяФайла": "Имя файла внешнего компонента. Файл внешнего компонента не обязательно должен находиться в каталоге исполняемых файлов программы."
                }
            }
        }
    },
    {
        "name": "ЗакрытьСправку",
        "name_en": "CloseHelp",
        "description": "Закрывает окно со справочной информацией. Когда выбран режим показа справки в нескольких окнах, метод закроет все окна справки."
    },
    {
        "name": "ЗаписатьJSON",
        "name_en": "WriteJSON",
        "description": "Выполняет сериализацию Значение в формат JSON. Результат помещает в объект ЗаписьJSON.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЗаписьJSON: ЗаписьJSON, Значение: Произвольный, НастройкиСериализации?: НастройкиСериализацииJSON, ИмяФункцииПреобразования?: Строка, МодульФункцииПреобразования?: Произвольный, ДополнительныеПараметрыФункцииПреобразования?: Произвольный)",
                "Параметры": {
                    "ЗаписьJSON": "Объект, через который осуществляется запись JSON. Поток JSON должен быть подготовлен для записи значения.",
                    "Значение": "Объект записи JSON. Меняет состояние потока записи.  Представляет собой значение произвольного типа. В формате JSON допускается записывать только значения следующих типов:  - Строка,  - Число,  - Булево,  - Дата (преобразованная в строку),  - Массив,  - ФиксированныйМассив,  - Структура,  - ФиксированнаяСтруктура,  - Соответствие,  - ФиксированноеСоответствие. Ключ соответствия (или фиксированного соответствия) должен иметь тип Строка. В противном случае, будет вызвано исключение. Если будет передано значение, отличное от перечисленных, оно должно быть преобразвоано с помощью функции преобразования. При попытке записать значение недопустимого типа будет вызвано исключение.",
                    "НастройкиСериализации": "Настройки сериализации в JSON.",
                    "ИмяФункцииПреобразования": "Данная функция вызывается для всех свойств, тип которых не поддерживает преобразование в формат JSON напрямую. Она должна преобразовать Значение в значение допустимого для записи в JSON типа. Функция должна предваряться директивой &НаСервере или &НаКлиенте. Использование функции вне контекста формы или модуля, или команды не допускается. Функция должна быть экспортной и иметь следующие параметры:  - <Свойство> - в параметр передается имя свойства, если выполняется запись структуры или соответствия,  - <Значение> - в параметр передается исходное значение,  - <ДополнительныеПараметры> - дополнительные параметры, которые указаны в вызове метода ЗаписатьJSON,  - <Отказ> - отказ от записи свойства. Если функция возвращает объект, который не поддерживает преобразование в JSON, то будет вызвано исключение. Если данный параметр задан и не задан параметр <МодульФункцииПреобразования>, и наоборот, будет вызвано исключение. Значение по умолчанию: Неопределено.",
                    "МодульФункцииПреобразования": "Указывает модуль, в котором реализована функция преобразования значения в значение формата JSON. Значение по умолчанию: Неопределено.",
                    "ДополнительныеПараметрыФункцииПреобразования": "Дополнительные параметры, которые будут переданы в функцию преобразования. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "ЗаписатьXML",
        "name_en": "WriteXML",
        "description": "Выполняет сериализацию значения в формат XML.",
        "signature": {
            "ЗаписатьБезИмени": {
                "СтрокаПараметров": "(ЗаписьXML: ЗаписьXML, Значение: Произвольный, НазначениеТипа?: НазначениеТипаXML)",
                "Параметры": {
                    "ЗаписьXML": "Объект, через который осуществляется запись XML.",
                    "Значение": "Записываемое в поток XML значение. Тип параметра определяется совокупностью типов, для которых определена XML-сериализация.",
                    "НазначениеТипа": "Определяет необходимость назначения типа элементу XML. Значение по умолчанию: Неявное."
                }
            },
            "ЗаписатьСПолнымИменем": {
                "СтрокаПараметров": "(ЗаписьXML: ЗаписьXML, Значение: Произвольный, ПолноеИмя: Строка, НазначениеТипа?: НазначениеТипаXML)",
                "Параметры": {
                    "ЗаписьXML": "Объект, через который осуществляется запись XML.",
                    "Значение": "Записываемое в поток XML значение. Тип параметра определяется совокупностью типов, для которых определена XML-сериализация.",
                    "ПолноеИмя": "Полное имя элемента XML, в который будет записано значение.",
                    "НазначениеТипа": "Определяет необходимость назначения типа элементу XML. Значение по умолчанию: Неявное."
                }
            },
            "ЗаписатьСЛокальнымИменемИПространствомИмен": {
                "СтрокаПараметров": "(ЗаписьXML: ЗаписьXML, Значение: Произвольный, ЛокальноеИмя: Строка, URIПространстваИмен: Строка, НазначениеТипа?: НазначениеТипаXML)",
                "Параметры": {
                    "ЗаписьXML": "Объект, через который осуществляется запись XML.",
                    "Значение": "Записываемое в поток XML значение. Тип параметра определяется совокупностью типов, для которых определена XML-сериализация.",
                    "ЛокальноеИмя": "Локальное имя элемента XML, в который будет записано значение.",
                    "URIПространстваИмен": "URI пространства имен, к которому принадлежит указанное ЛокальноеИмя.",
                    "НазначениеТипа": "Определяет необходимость назначения типа элементу XML. Значение по умолчанию: Неявное."
                }
            }
        }
    },
    {
        "name": "ЗаписатьДатуJSON",
        "name_en": "WriteJSONDate",
        "description": "Преобразовывает дату в строку для последующей записи в формат JSON.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата, Формат: ФорматДатыJSON, ВариантЗаписиДаты?: ВариантЗаписиДатыJSON): Строка",
                "Параметры": {
                    "Дата": "Дата, которую надо преобразовать в формат JSON.",
                    "Формат": "Формат записываемой даты.",
                    "ВариантЗаписиДаты": "Указывает используемый вариант записи даты JSON. Значение по умолчанию: ЛокальнаяДата."
                }
            }
        }
    },
    {
        "name": "ЗаписьЖурналаРегистрации",
        "name_en": "WriteLogEvent",
        "description": "Записывает событие в журнал регистрации.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяСобытия: Строка, Уровень?: УровеньЖурналаРегистрации, ОбъектМетаданных?: ОбъектМетаданных: Куб, Данные?: Число, Комментарий?: Строка, РежимТранзакции?: РежимТранзакцииЗаписиЖурналаРегистрации)",
                "Параметры": {
                    "ИмяСобытия": "Событие указывается строкой. Может содержать точки для обозначения иерархии событий.  Запрещена запись событий использующих сочетания символов \"_$\" и \"$_\", зарезервированные для системных событий. Например: _$МоеСобытие$_ или _$МояГруппаСобытий$_.МоеСобытие.",
                    "Уровень": "Уровень важности события. Значение по умолчанию: Примечание.",
                    "ОбъектМетаданных": "Объект метаданных, к которому относится событие.",
                    "Данные": "Данные, с которыми связано событие.  Рекомендуется указывать ссылки на объекты данных (элементы справочников, документы, к которым относится событие).",
                    "Комментарий": "Произвольная строка комментария к событию. Значение по умолчанию: Пустая строка.",
                    "РежимТранзакции": "Указывает отношение записи к текущей транзакции. Значение по умолчанию: Независимая."
                }
            }
        }
    },
    {
        "name": "ЗаполнитьЗначенияСвойств",
        "name_en": "FillPropertyValues",
        "description": "Копирует значения свойств Источника в свойства Приемника. Сопоставление производится по именам свойств.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Приемник: Произвольный, Источник: Произвольный, СписокСвойств?: Строка, ИсключаяСвойства?: Строка)",
                "Параметры": {
                    "Приемник": "Значение, чьи свойства будут заполнены значениями соответствующих свойств <Источника>. Внимание! Значение данного параметра не может быть следующих типов: Неопределено, Null, Число, Строка, Дата, Булево. Дата",
                    "Источник": "Значения свойств данного объекта будут установлены в соответствующие свойства <Приемника>. Внимание! Значение данного параметра не может быть следующих типов: Неопределено, Null, Число, Строка, Дата, Булево.",
                    "СписокСвойств": "Список имен свойств <Источника> и <Приемника>, разделенный запятыми, которые необходимо заполнить. Если свойства не указаны, то копируются только те, которые представлены и в <Источнике>, и в <Приемнике>. Если свойства указаны, то они обязательно должны присутствовать в обоих объектах. Если в <Источнике> или <Приемнике> заданное свойство отсутствует, то будет вызвано исключение. Параметр игнорируется, если <Источник> задан.",
                    "ИсключаяСвойства": "Список имен свойств <Приемника>, разделенный запятыми, которые необходимо исключить из заполнения. Если свойство с именем, указанным в исключающих свойствах есть в <Приемнике>, то значение этого свойства скопировано не будет. А если свойства, указанного в исключающих свойствах не окажется в <Приемнике>, то будет вызвано исключение."
                }
            }
        }
    },
    {
        "name": "ЗапрещеноОткрытиеФорм",
        "name_en": "CannotOpenForm",
        "description": "Возвращает текущий режим открытия форм.",
        "returns": "Тип: Булево. На толстом и тонком клиентах возвращает Истина при вызове в обработчике ПередНачаломРаботыСистемы, если установлен ключ DisableStartupDialogs.  После окончания работы обработчика - Ложь. На веб-клиенте всегда возвращает Ложь."
    },
    {
        "name": "ЗапроситьРазрешениеПользователя",
        "name_en": "RequestUserPermission",
        "description": "Получает у пользователя разрешение на несколько операций с файлами, которые потом будут выполнены без дополнительных вопросов.",
        "returns": "Тип: Булево. В режиме запуска тонкий и толстый клиент, а также для клиента мобильного приложения всегда возвращает Истина. Если метод получает пустой запрос (за вычетом проигнорированных записей), то возвращает Истина.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Вызовы: Массив): Булево",
                "Параметры": {
                    "Вызовы": "Содержит массив с описаниями вызовов, для которых получается разрешение. Каждое описание вызова это массив. Первым элементом этого массива является строка с именем метода, для которого получается разрешение. Это методы:  - ЗапуститьПриложение;  - УдалитьФайлы;  - НайтиФайлы;  - КопироватьФайл;  - ПереместитьФайл;  - СоздатьКаталог. Следующие элементы массива - это параметры вызова в правильном порядке."
                }
            }
        }
    },
    {
        "name": "ЗапуститьПриложение",
        "name_en": "RunApp",
        "description": "Выполняет запуск внешнего приложения либо открытие файла с использованием ассоциированного с ним приложения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СтрокаКоманды: Строка, ТекущийКаталог?: Строка, ДождатьсяЗавершения?: Булево, КодВозврата?: Число)",
                "Параметры": {
                    "СтрокаКоманды": "Командная строка для запуска приложения либо имя файла, ассоциированного с некоторым приложением.",
                    "ТекущийКаталог": "Задает текущий каталог запускаемого приложения. В режиме веб-клиента игнорируется.",
                    "ДождатьсяЗавершения": "Истина - дожидаться завершения запущенного приложения перед продолжением работы. Значение по умолчанию: Ложь.",
                    "КодВозврата": "Параметр (если он указан) содержит код завершения работы системы - значение, передаваемое приложением операционной системе, если работа была завершена корректно, если такой код был получен. В противном случае возвращает Неопределено. Для получения кода возврата значение параметра <ДождатьсяЗавершения> должно быть установлено в Истина, запускаемое приложение должно существовать и завершить свою работу корректно."
                }
            }
        }
    },
    {
        "name": "ЗапуститьСистему",
        "name_en": "RunSystem",
        "description": "Запускает новый сеанс 1С:Предприятия. Новый сеанс будет запущен с текущими установками.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДополнительныеПараметрыКоманднойСтроки?: Строка, ДождатьсяЗавершения?: Булево, КодВозврата?: Число)",
                "Параметры": {
                    "ДополнительныеПараметрыКоманднойСтроки": "Содержит дополнительные параметры, которые будут переданы новому сеансу. Если такие параметры уже есть среди текущих установок, переданные заменят текущие. Если режим приложения (УправляемоеПриложение/ ОбычноеПриложение) не задан явно дополнительным параметром командной строки, при запуске текущего приложения учитывается использование параметров принудительного включения режима управляемого или обычного приложения /RunModeManagedApplication и /RunModeOrdinaryApplication.",
                    "ДождатьсяЗавершения": "Указывает необходимость дождаться завершения запуска системы для продолжения работы. Значение по умолчанию: Ложь.",
                    "КодВозврата": "Параметр (если он указан) содержит код завершения работы сеанса \"1С:Предприятия\"- значение, передаваемое платформой операционной системе, если работа была завершена корректно, и если такой код был получен. В противном случае возвращает Неопределено. Для получения кода возврата значение параметра <ДождатьсяЗавершения> должно быть установлено в Истина, а сеанс должен быть корректно завершен. Возможны следующие значения:  - 0 - успешное завершение;  - 1 - ошибка;  - 101 - ошибка в данных (такой код может быть возвращен при обновлении конфигурации, при проверке и исправлении конфигурации, а также при создании дистрибутива конфигурации)."
                }
            }
        }
    },
    {
        "name": "ЗафиксироватьТранзакцию",
        "name_en": "CommitTransaction",
        "description": "Завершает успешную транзакцию. Все изменения, внесенные в информационную базу в процессе транзакции, будут записаны."
    },
    {
        "name": "ЗначениеВДанныеФормы",
        "name_en": "ValueToFormData",
        "description": "Преобразует объект прикладного типа в универсальный объект данных.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный, Объект: ДанныеФормыСтруктураСКоллекцией)",
                "Параметры": {
                    "Значение": "Значение прикладного типа, для которого определено преобразование в данные формы.",
                    "Объект": "ДанныеФормыКоллекция, ДанныеФормыСтруктура.  Данные формы, имеющие совместимую структуру."
                }
            }
        }
    },
    {
        "name": "ЗначениеВСтрокуВнутр",
        "name_en": "ValueToStringInternal",
        "description": "Получает системное строковое представление переданного значения.",
        "returns": "Тип: Строка. Системное представление значения в информационной базе.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный): Строка",
                "Параметры": {
                    "Значение": "Преобразуемое значение."
                }
            }
        }
    },
    {
        "name": "ЗначениеВФайл",
        "name_en": "ValueToFile",
        "description": "Сохраняет любое сериализуемое значение в файл.",
        "returns": "Тип: Булево. Истина - сохранение значения выполнено; Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайла: Строка, Значение: Произвольный): Булево",
                "Параметры": {
                    "ИмяФайла": "Имя файла. Не может быть пустым. Если включает путь к существующему каталогу, то значение будет сохранено в файле, созданном или найденном в этом каталоге, в противном случае будет использован каталог исполняемых файлов программы.",
                    "Значение": "Сохраняемое значение."
                }
            }
        }
    },
    {
        "name": "ЗначениеЗаполнено",
        "name_en": "ValueIsFilled",
        "description": "Функция проверяет, отличается ли переданное значение от значения по умолчанию того же типа.",
        "returns": "Тип: Булево. Для значений типа Булево всегда возвращается Истина. Для значений типа Строка возвращается Истина, если в строке есть непробельные символы. Для массивов и коллекций возвращается Истина, если в них есть хотя бы 1 элемент. Для Неопределено и Null всегда возвращается Ложь.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный): Булево",
                "Параметры": {
                    "Значение": "Значение для проверки."
                }
            }
        }
    },
    {
        "name": "ЗначениеИзСтрокиВнутр",
        "name_en": "ValueFromStringInternal",
        "description": "Преобразует значение из строкового системного представления во внутреннее.",
        "returns": "Тип: Произвольный. Значение, полученное из строкового системного представления.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Произвольный",
                "Параметры": {
                    "Строка": "Системное представление значения в строковом виде."
                }
            }
        }
    },
    {
        "name": "ЗначениеИзФайла",
        "name_en": "ValueFromFile",
        "description": "Получает из файла значение, ранее сохраненное в нем при помощи функции",
        "returns": "Тип: Произвольный. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайла: Строка): Произвольный",
                "Параметры": {
                    "ИмяФайла": "Имя файла. Не может быть пустым. Если включает путь к существующему каталогу, то значение будет извлекаться из файла, найденного в этом каталоге, в противном случае будет использован каталог исполняемых файлов программы."
                }
            }
        }
    },
    {
        "name": "ИзXMLТипа",
        "name_en": "FromXMLType",
        "description": "Получает тип, соответствующий типу данных XML.",
        "returns": "Тип: Тип, Неопределено. Неопределено, если соответствующий тип данных не обнаружен.",
        "signature": {
            "ПоТипуXml": {
                "СтрокаПараметров": "(ТипXML: ТипДанныхXML): Тип",
                "Параметры": {
                    "ТипXML": "Тип XML, для которого нужно получить соответствующий тип."
                }
            },
            "ПоИмениТипаИUriПространстваИмен": {
                "СтрокаПараметров": "(ИмяТипа: Строка, URIПространстваИмен: Строка): Тип",
                "Параметры": {
                    "ИмяТипа": "Имя типа XML.",
                    "URIПространстваИмен": "URI пространства имен типа XML."
                }
            }
        }
    },
    {
        "name": "ИмпортМоделиXDTO",
        "name_en": "ImportXDTOModel",
        "description": "Осуществляет импорт переданного набора схем XML в модель типов XDTO. Возвращаемое значение –",
        "returns": "Тип: ОбъектXDTO. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(НаборСхемXML: НаборСхемXML): ОбъектXDTO",
                "Параметры": {
                    "НаборСхемXML": "Импортируемый набор схем XML."
                }
            }
        }
    },
    {
        "name": "ИмяКомпьютера",
        "name_en": "ComputerName",
        "description": "Получает сетевое имя компьютера.",
        "returns": "Тип: Строка. Сетевое имя компьютера."
    },
    {
        "name": "ИмяПользователя",
        "name_en": "UserName",
        "description": "Получает имя пользователя, указанного при запуске программы.",
        "returns": "Тип: Строка. Имя пользователя."
    },
    {
        "name": "ИнициализироватьПредопределенныеДанные",
        "name_en": "InitializePredefinedData",
        "description": "Инициализирует предопределенные данные в текущей области информационной базы.   - В сеансе установлены и используются все разделители, в состав которых включен объект метаданных.  - Автоматическое обновление предопределенных данных для этого объекта метаданных включено.  - Предопределенные данные для этого объекта в этой области данных еще не создавались."
    },
    {
        "name": "ИнформацияОбОшибке",
        "name_en": "ErrorInfo",
        "description": "Получает структурированную информацию об исключении.",
        "returns": "Тип: ИнформацияОбОшибке. ",
        "ref": "types.ИнформацияОбОшибке"
    },
    {
        "name": "КаталогБиблиотекиМобильногоУстройства",
        "name_en": "MobileDeviceLibraryDir",
        "description": "Получает путь к библиотекам мобильного устройства.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТипКаталога: ТипКаталогаБиблиотекиМобильногоУстройства): Строка",
                "Параметры": {
                    "ТипКаталога": "Тип каталога."
                }
            }
        }
    },
    {
        "name": "КаталогВременныхФайлов",
        "name_en": "TempFilesDir",
        "description": "Получает имя каталога, который используется программой для размещения временных файлов.",
        "returns": "Тип: Строка. Имя каталога временных файлов пользователя, от имени которого запущено приложение."
    },
    {
        "name": "КаталогДокументов",
        "name_en": "DocumentsDir",
        "description": "Предоставляет доступ к стандартному каталогу документов.",
        "returns": "Тип: Строка. Путь к каталогу. Для режимов запуска \"Тонкий клиент\" и \"Толстый клиент\":  - в MS Windows: <Personal>;  - в Linux: выбирается из надстройки gnome. Если gnome не указан, то метод вернет домашний каталог <Home>. Для режимов запуска \"Веб клиент\" (реализуются только в расширении для работы с файлами):  - при использовании веб-браузера Microsoft Internet Explorer: <Personal>;  - при использовании веб-браузера Mozilla Firefox (с помощью XPCOM интерфейса nsIDirectoryServiceProvider):   - в MS Windows: <Personal>;  - в Linux: <Home>;  - в macOS: <Docs> ;  - в OSX: <UsrDocs>. Для мобильной платформы:  - iOS: Подкаталог \\Documents относительно домашней директории приложения. Стандартный каталог, который доступен для обмена файлов в iTunes с помощью функции NSHomeDirectory().  - Android:<Абсолютный путь>, может различаться на разных устройствах. Например:  - /mnt/sdcard/Android/data/com.e1c.mobile/files/  - /storage/emulated/0/Android/data/com.e1c.mobile/files/  - Windows:  - для смартфона: путь внутри домашней директории приложения (C:\\Users\\<User>\\AppData\\Local\\Packages\\<Application>\\RoamingState). Каталог не доступен при подключении к ПК. Доступ с ПК можно обеспечить только с помощью утилиты ISETool из комплекта Windows Phone SDK.  - для планшета: путь внутри домашней директории приложения C:\\Data\\Users\\<User>\\DefApps\\APPDATA\\Local\\Packages\\ <Application>\\RoamingState)"
    },
    {
        "name": "КаталогПрограммы",
        "name_en": "BinDir",
        "description": "Получает имя каталога, в котором расположены исполняемые файлы программы.",
        "returns": "Тип: Строка. Имя каталога исполняемых файлов программы."
    },
    {
        "name": "КодироватьСтроку",
        "name_en": "EncodeString",
        "description": "Кодирует строку в соответствии с выбранным способом кодирования.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, СпособКодированияСтроки: СпособКодированияСтроки, КодировкаСтроки?: Строка): Строка",
                "Параметры": {
                    "Строка": "Кодируемая строка.",
                    "СпособКодированияСтроки": "Способ кодирования строки.",
                    "КодировкаСтроки": "Кодировка, в которую преобразуется строка перед кодированием. Значение по умолчанию: UTF8."
                }
            }
        }
    },
    {
        "name": "КодЛокализацииИнформационнойБазы",
        "name_en": "InfoBaseLocaleCode",
        "description": "Получает код локализации (язык, страна), установленный для данной информационной базы.",
        "returns": "Тип: Строка. "
    },
    {
        "name": "КодСимвола",
        "name_en": "CharCode",
        "description": "Получает код символа, расположенного в переданной строке в позиции с указанным номером.",
        "returns": "Тип: Число. Код переданного символа. Код возвращается в соответствии с кодировкой Unicode.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, НомерСимвола?: Число): Число",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "НомерСимвола": "Номер символа в строке, код которого необходимо получить. Нумерация символов в строке начинается с 1. Значение по умолчанию: 1."
                }
            }
        }
    },
    {
        "name": "КомандаСистемы",
        "name_en": "System",
        "description": "Вызывает на исполнение команду операционной системы, как если бы она была введена в командной строке.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СтрокаКоманды: Строка, ТекущийКаталог?: Строка)",
                "Параметры": {
                    "СтрокаКоманды": "Команда системы. Если в передаваемой командной строке Windows используются переменные среды (environment variables) и значения этих переменных содержат пробелы, то фрагменты командной строки, в которых используются перменные среды, следует обрамлять удвоенными двойными кавычками. Например: КомандаСистемы(\"\"\"\"\"%ProgramFiles%\\Internet Explorer\\iexplore.exe\"\"\"\" example.com\");",
                    "ТекущийКаталог": "Устанавливает текущий каталог на время выполнения команды."
                }
            }
        }
    },
    {
        "name": "КонецГода",
        "name_en": "EndOfYear",
        "description": "Определяет дату и время конца года для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца года.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонецДня",
        "name_en": "EndOfDay",
        "description": "Определяет дату и время конца дня для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца дня.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонецКвартала",
        "name_en": "EndOfQuarter",
        "description": "Определяет дату и время конца квартала для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца квартала.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонецМесяца",
        "name_en": "EndOfMonth",
        "description": "Определяет дату и время конца месяца для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца месяца.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонецМинуты",
        "name_en": "EndOfMinute",
        "description": "Определяет дату и время конца минуты для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца минуты.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонецНедели",
        "name_en": "EndOfWeek",
        "description": "Определяет дату и время конца недели для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца недели.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонецЧаса",
        "name_en": "EndOfHour",
        "description": "Определяет дату и время конца часа для указанной даты.",
        "returns": "Тип: Дата. Дата и время конца часа.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "КонфигурацияБазыДанныхИзмененаДинамически",
        "name_en": "DataBaseConfigurationChangedDynamically",
        "description": "Определяет, была ли изменена конфигурация базы данных динамически после старта. Под динамическим изменением понимается такое изменение конфигурации базы данных, при которой не потребовалось проведение реструктуризации, и в момент обновления с информационной базой работали пользователи.",
        "returns": "Тип: Булево. Истина - в процессе работы пользователя с информационной базой произошло обновление конфигурации базы данных, Ложь - в противном случае."
    },
    {
        "name": "КонфигурацияИзменена",
        "name_en": "ConfigurationChanged",
        "description": "Определяет факт отличия основной конфигурации от конфигурации базы данных.",
        "returns": "Тип: Булево. Истина - основная конфигурация отличается от конфигурации базы данных, Ложь - в противном случае."
    },
    {
        "name": "КопироватьДанныеФормы",
        "name_en": "CopyFormData",
        "description": "Копирует данные формы, обладающие совместимой структурой.",
        "returns": "Тип: Булево. Истина - копирование произведено. Ложь - структура объектов абсолютно несовместима.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Источник: ДанныеФормыСтруктураСКоллекцией, Приемник: ДанныеФормыСтруктураСКоллекцией): Булево",
                "Параметры": {
                    "Источник": "Объект - источник.",
                    "Приемник": "Объект приемник."
                }
            }
        }
    },
    {
        "name": "КопироватьФайл",
        "name_en": "FileCopy",
        "description": "Копирует файл-источник в файл-приемник. Допускается перезапись файла-приемника.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайлаИсточника: Строка, ИмяФайлаПриемника: Строка)",
                "Параметры": {
                    "ИмяФайлаИсточника": "Полное имя файла-источника.",
                    "ИмяФайлаПриемника": "Полное имя файла-приемника."
                }
            }
        }
    },
    {
        "name": "КраткоеПредставлениеОшибки",
        "name_en": "BriefErrorDescription",
        "description": "Возвращает строку, аналогичную той, что показывается в стандартном сообщении об ошибке платформы \"1С:Предприятие\".",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИнформацияОбОшибке: ИнформацияОбОшибке): Строка",
                "Параметры": {
                    "ИнформацияОбОшибке": "Содержит информацию об ошибке."
                }
            }
        }
    },
    {
        "name": "Лев",
        "name_en": "Left",
        "description": "Выбирает первые слева символы строки.",
        "returns": "Тип: Строка. Строка выбранных символов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, ЧислоСимволов: Число): Строка",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "ЧислоСимволов": "Количество выбираемых символов."
                }
            }
        }
    },
    {
        "name": "Макс",
        "name_en": "Max",
        "description": "Определяет максимальное значение из полученных параметров.",
        "returns": "Тип: Число, Строка, Дата, Булево. Возвращается максимальное из полученных значений.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение1?: Произвольный): Число",
                "Параметры": {
                    "Значение1": ""
                }
            }
        }
    },
    {
        "name": "МестноеВремя",
        "name_en": "ToLocalTime",
        "description": "Преобразует универсальное время в местное время заданного часового пояса.",
        "returns": "Тип: Дата. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(УниверсальноеВремя: Дата, ЧасовойПояс?: Строка): Дата",
                "Параметры": {
                    "УниверсальноеВремя": "Универсальное время.",
                    "ЧасовойПояс": "Может быть задан только в коде, исполняемом на сервере, режиме запуска \"Толстый клиент\" и во внешнем соединении. Идентификатор часового пояса, в который должно быть преобразовано универсальное время. Если Неопределено (не задан), то используется часовой пояс компьютера. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "Месяц",
        "name_en": "Month",
        "description": "Определяет месяц в указанной дате.",
        "returns": "Тип: Число. Месяц в указанной дате.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "Мин",
        "name_en": "Min",
        "description": "Определяет минимальное значение из полученных параметров.",
        "returns": "Тип: Число, Строка, Дата, Булево. Возвращается минимальное из полученных значений.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение1?: Произвольный): Число",
                "Параметры": {
                    "Значение1": ""
                }
            }
        }
    },
    {
        "name": "Минута",
        "name_en": "Minute",
        "description": "Определяет минуту в часе указанной даты.",
        "returns": "Тип: Число. Минута в часе указанной даты.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "МонопольныйРежим",
        "name_en": "ExclusiveMode",
        "description": "Определяет, используется ли в данный момент монопольный режим работы с информационной базой.",
        "returns": "Тип: Булево. Истина - монопольная блокировка была установлена на текущую область данных сеанса или текущая область данных является подобластью монопольно заблокированной этим же сеансом области; Ложь - в противном случае. Для режима запуска \"Мобильное приложение (сервер)\" результат всегда Истина."
    },
    {
        "name": "Найти",
        "name_en": "Find",
        "description": "Функция является устаревшей! Рекомендуется использовать функцию",
        "returns": "Тип: Число. Позиция первого знака найденной подстроки. Нумерация символов в строке начинается с 1. Если строка не содержит указанной подстроки, то возвращается 0.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, ПодстрокаПоиска: Строка): Число",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "ПодстрокаПоиска": "Искомая подстрока."
                }
            }
        }
    },
    {
        "name": "НайтиНедопустимыеСимволыXML",
        "name_en": "FindDisallowedXMLCharacters",
        "description": "Проверяет символы указанной строки на соответствие рекомендации XML 1.0 и 1.1. Проверка строки начинается с символа в позиции, указанной в параметре ПозицияНачала.",
        "returns": "Тип: Число. В случае обнаружения некорректного символа будет возвращена его позиция в строке, если же подобного символа не найдено – возвращаемое значение 0.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СтрокаСимволов: Строка, ПозицияНачала?: Число, Версия?: Строка): Число",
                "Параметры": {
                    "СтрокаСимволов": "Строка, в которой необходимо проверить символы.",
                    "ПозицияНачала": "Позиция символа в строке, начиная с которого будет производиться проверка. Значение по умолчанию: 1.",
                    "Версия": "Версия спецификации XML, используемая при проверке допустимости. Возможные значения параметра: \"1.0\" или \"1.1\". Значение по умолчанию: 1.0."
                }
            }
        }
    },
    {
        "name": "НайтиОкноПоНавигационнойСсылке",
        "name_en": "FindWindowByURL",
        "description": "Получает окно клиентского приложения.",
        "returns": "Тип: ОкноКлиентскогоПриложения, Неопределено. Если окно не открыто, возвращается Неопределено.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(НавигационнаяСcылка: Строка): ОкноКлиентскогоПриложения",
                "Параметры": {
                    "НавигационнаяСcылка": "Навигационная ссылка."
                }
            }
        }
    },
    {
        "name": "НайтиПомеченныеНаУдаление",
        "name_en": "FindMarkedForDeletion",
        "description": "Осуществляет поиск всех помеченных на удаление объектов, которые доступны пользователю в рамках текущего сеанса и которые попадают в область поиска, заданную параметрами ОбластьПоиска, ВключитьОбъекты и ИсключитьОбъекты.",
        "returns": "Тип: Массив. Массив со списком ссылок помеченных на удаление объектов.",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбластьПоиска?: Массив, ВключитьОбъекты?: Массив, ИсключитьОбъекты?: Массив): Массив",
                "Параметры": {
                    "ОбластьПоиска": "Определяет область поиска объектов, помеченных на удаление. Область устанавливается комбинацией разделителей, в состав которых включены объекты метаданных, среди данных которых следует выполнять поиск. Элемент массива имеет тип Массив. Элемент вложенного массива имеет тип:  - Объект метаданных – Общий реквизит, разделяющий данные.  - Строка – имя общего реквизита, разделяющего данные. По умолчанию имеет значение Неопределено. Допустимые значения:  - Неопределено - выбираются все объекты метаданных, если параметр <ВключитьОбъекты> также имеет значение Неопределено. Иначе равносильно передаче пустого массива.  - Массив с комбинациями разделителей, определяющий область поиска. Примечание. Если комбинация разделителей содержит повторы, то вызывается исключение, т.к. в конфигурации не может быть объектов метаданных, дважды включенных в состав одного разделителя. Значение по умолчанию: Неопределено.",
                    "ВключитьОбъекты": "Позволяет явно указать объекты метаданных, которые должны присутствовать в области поиска ссылок помеченных на удаление объектов. Элементом массива могут быть:  - Объект метаданных.  - Строка – полное имя объекта метаданных. Допустимые значения:  - Неопределено,  - Пустой массив,  - Массив объектов метаданных.  Значение по умолчанию: Неопределено.",
                    "ИсключитьОбъекты": "В качестве элементов массива могут выступать:  - Объект метаданных,  - Строка – полное имя объекта метаданных. Свойство позволяет явно указать объекты метаданных, которые следует исключить из области поиска объектов, помеченных на удаление. Допустимые значения:  - Неопределено  - Пустой массив (нет объектов, которые необходимо дополнительно включить в область поиска).  - Массив объектов метаданных.  Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "НайтиПоСсылкам",
        "name_en": "FindByRef",
        "description": "Осуществляет поиск ссылок на объекты, переданные в параметре СписокСсылок.",
        "returns": "Тип: ТаблицаЗначений. Возвращает ссылки на найденные объекты в виде ТаблицаЗначений. Первая колонка - исходная ссылка.  Вторая колонка - ссылка на объект, если найденная ссылка соответствует объектной таблице, или значение, олицетворяющее запись необъектной таблицы. Третья колонка - объект метаданных, которому соответствуют данные, в которых найдена ссылка.",
        "ref": "classes.ТаблицаЗначений",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СписокСсылок: Массив, ОбластьПоиска?: Массив, ВключитьОбъекты?: Массив, ИсключитьОбъекты?: Массив): ТаблицаЗначений",
                "Параметры": {
                    "СписокСсылок": "Массив со списком ссылок на объекты, ссылки на которые нужно найти.",
                    "ОбластьПоиска": "Определяет область поиска объектов. Область устанавливается комбинацией разделителей, в состав которых включены объекты метаданных, среди данных которых следует выполнять поиск. Элемент массива имеет тип Массив. Элемент вложенного массива имеет тип:  - Объект метаданных – Общий реквизит, разделяющий данные.  - Строка – имя общего реквизита, разделяющего данные.  По умолчанию имеет значение Неопределено.  Допустимые значения:  - Неопределено,  - Массив с комбинациями разделителей, определяющий область поиска,  - Пустой массив - область поиска определяется параметрами метода <ВключитьОбъекты> и <ИсключитьОбъекты>.  Примечание. Если комбинация разделителей содержит повторы, то вызывается исключение, т.к. в конфигурации не может быть объектов метаданных, дважды включенных в состав одного разделителя. Значение по умолчанию: Неопределено.",
                    "ВключитьОбъекты": "Позволяет явно указать объекты метаданных, которые должны присутствовать в области поиска ссылок на объекты. Элементом массива могут быть:  - Объект метаданных.  - Строка – полное имя объекта метаданных. Допустимые значения:  - Неопределено,  - Пустой массив,  - Массив объектов метаданных.  Значение по умолчанию: Неопределено.",
                    "ИсключитьОбъекты": "В качестве элементов массива могут выступать:  - Объект метаданных,  - Строка – полное имя объекта метаданных. Свойство позволяет явно указать объекты метаданных, которые следует исключить из области поиска ссылок на объекты. Допустимые значения:  - Неопределено  - Пустой массив (нет объектов, которые необходимо дополнительно включить в область поиска).  - Массив объектов метаданных.  Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "НайтиФайлы",
        "name_en": "FindFiles",
        "description": "Осуществляет поиск файлов и каталогов по заданной маске, расположенных в заданном каталоге.",
        "returns": "Тип: Массив. Массив из значений типа Файл, содержащий найденные файлы.",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Путь: Строка, Маска?: Строка, ИскатьВПодкаталогах?: Булево): Массив",
                "Параметры": {
                    "Путь": "Путь к каталогу, в котором производится поиск. Каталог может быть как на локальной сети, так и на ftp-сервере. При использовании этой схемы в адресах необходимо указывать прямые слеши '/', а не обратные '\\'. Допускается указание полного имени файла (путь + имя).",
                    "Маска": "Маска выбора файлов.  Если параметр задан, то первый параметр воспринимается системой как путь к каталогу, в котором требуется найти файлы, удовлетворяющие маске выбора. Для операционной системы MS Windows:  В строке маски, помимо обычных символов, допускается использование символа \"*\" (звездочка), обозначающего любое число произвольных символов, и \"?\" (знак вопроса), обозначающего один произвольный символ.  Примеры строки:  \"отчет201?.docx\", \"*.pdf\". Для операционных систем Linux, macOS, iOS и Android:  В строке маски допускается использование следующих последовательностей:  - любой символ, допустимый в имени файла. Сопоставление указанных символов производится:  - для Linux, macOS - с учетом регистра,  - для iOS и Android - без учета регистра;  - \"*\" (звездочка) - любая последовательность символов;  - \"?\" (знак вопроса) - любой символ;  - \"[\" - класс символов. После открывающей квадратной скобки указывается последовательность символов. Шаблон соответствует любому из указанных символов. Можно указывать диапазон, используя \"-\". Описание класса символов завершается \"]\". Для указания \"-\" в качестве символа класса нужно указать его первым или последним символом. Если после \"[\" указан знак \"!\", то класс описывает все символы, кроме указанных. Пример строки:  \"Все файлы|*.*|Документы|???.docx;*.[Rr][Tt][Ff];doc[0-9].txt\".",
                    "ИскатьВПодкаталогах": "Истина - будет произведен обход вложенных в параметр <Путь> каталогов и поиск в них.  Параметр игнорируется, если не задан параметр <Маска>, т.к. предполагается, что ищется один файл. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "НачалоГода",
        "name_en": "BegOfYear",
        "description": "Определяет дату и время начала года для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала года.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачалоДня",
        "name_en": "BegOfDay",
        "description": "Определяет дату и время начала дня для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала дня.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачалоКвартала",
        "name_en": "BegOfQuarter",
        "description": "Определяет дату и время начала квартала для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала квартала.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачалоМесяца",
        "name_en": "BegOfMonth",
        "description": "Определяет дату и время начала месяца для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала месяца.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачалоМинуты",
        "name_en": "BegOfMinute",
        "description": "Определяет дату и время начала минуты для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала минуты.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачалоНедели",
        "name_en": "BegOfWeek",
        "description": "Определяет дату и время начала недели для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала недели.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачалоСтолетияСеанса",
        "name_en": "SessionBeginningOfCentury",
        "description": "Возвращает год начала столетия, действующий в текущем сеансе.",
        "returns": "Тип: Число. "
    },
    {
        "name": "НачалоЧаса",
        "name_en": "BegOfHour",
        "description": "Определяет дату и время начала часа для указанной даты.",
        "returns": "Тип: Дата. Дата и время начала часа.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Дата",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НачатьЗапросРазрешенияПользователя",
        "name_en": "BeginRequestingUserPermission",
        "description": "Инициирует получение у пользователя разрешения на несколько операций с файлами, которые потом будут выполнены без дополнительных вопросов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, Вызовы: Массив)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <РазрешенияПолучены> - помещается тип Булево.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Вызовы": "Содержит массив с описаниями вызовов, для которых получается разрешение. Каждое описание вызова представляет собой массив. Первым элементом этого массива является строка с именем метода, для которого получается разрешение. Используемые методы:   - НачатьПомещениеФайлаНаСервер;  - НачатьПомещениеФайловНаСервер;  - НачатьПолучениеФайлаССервера;  - НачатьПолучениеФайловССервера;  - НачатьЗапускПриложения;  - НачатьУдалениеФайлов;  - НачатьПоискФайлов;  - НачатьКопированиеФайла;  - НачатьПеремещениеФайла;  - НачатьСоздание;  - НачатьОткрытие;  - НачатьОткрытиеДляЧтения;  - НачатьОткрытиеДляЗаписи;  - НачатьОткрытиеДляДописывания;  - НачатьСозданиеВременногоФайла;  - НачатьСозданиеКаталога;  - НачатьСозданиеДвоичныхДанныхИзФайла;  - НачатьЗапись. Следующие элементы массива - это параметры вызова в правильном порядке, исключая параметры типа ОписаниеОповещения."
                }
            }
        }
    },
    {
        "name": "НачатьЗапускПриложения",
        "name_en": "BeginRunningApplication",
        "description": "Начинает запуск внешнего приложения либо открытие файла с использованием ассоциированного с ним приложения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, СтрокаКоманды: Строка, ТекущийКаталог?: Строка, ДождатьсяЗавершения?: Булево)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <КодВозврата> - код возврата, тип Число или Неопределено, если соответствующий входной параметр <ДождатьсяЗавершения> не указан;  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "СтрокаКоманды": "Командная строка для запуска приложения либо имя файла, ассоциированного с некоторым приложением.",
                    "ТекущийКаталог": "Задает текущий каталог запускаемого приложения. В режиме веб-клиента игнорируется.",
                    "ДождатьсяЗавершения": "Истина - дожидаться завершения запущенного приложения перед продолжением работы. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "НачатьКопированиеФайла",
        "name_en": "BeginCopyingFile",
        "description": "Начинает копирование файла-источника в файл-приемник. Допускается перезапись файла-приемника.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, ИмяФайлаИсточника: Строка, ИмяФайлаПриемника: Строка)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <СкопированныйФайл> – строка, содержащая путь к скопированному файлу,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ИмяФайлаИсточника": "Полное имя файла-источника.",
                    "ИмяФайлаПриемника": "Полное имя файла-приемника."
                }
            }
        }
    },
    {
        "name": "НачатьПеремещениеФайла",
        "name_en": "BeginMovingFile",
        "description": "Начинает перемещение (переименование) указанного файла.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, ИмяФайлаИсточника: Строка, ИмяФайлаПриемника: Строка)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <ПеремещаемыйФайл> – строка, содержащая путь к файлу,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ИмяФайлаИсточника": "Полное имя файла-источника (полное исходное имя файла).",
                    "ИмяФайлаПриемника": "Полное имя файла-приемника (полное новое имя файла)."
                }
            }
        }
    },
    {
        "name": "НачатьПодключениеВнешнейКомпоненты",
        "name_en": "BeginAttachingAddIn",
        "description": "Начинает подключение к \"1С:Предприятию\" объекта внешнего компонента.",
        "signature": {
            "ПоИдентификатору": {
                "СтрокаПараметров": "(ОписаниеОповещения?: ОписаниеОповещения, ИдентификаторОбъекта?: Строка)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <Подключено> – результат подключения, тип Булево.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ИдентификаторОбъекта": "Идентификатор объекта в виде подключа программного идентификатора ProgID реестра Windows. Например: \"AddIn.Scanner\"."
                }
            },
            "ПоМестоположению": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, Местоположение: Строка, Имя: Строка, Тип?: ТипВнешнейКомпоненты)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <Подключено> – результат подключения, Тип: Булево.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Местоположение": "Местоположение внешнего компонента. В качестве местоположения может использоваться:  - путь к файлу внешнего компонента в файловой системе (недоступно на веб-клиенте), не ZIP-архив;  - полное имя макета, хранящего двоичные данные или ZIP-архив;  - URL к внешнему компоненту, в виде двоичных данных или ZIP-архива, в формате, аналогичном ПолучитьНавигационнуюСсылку.",
                    "Имя": "Символическое имя подключаемой внешнего компонента. Имя должно удовлетворять правилам именования встроенного языка.",
                    "Тип": "Тип подключаемого внешнего компонента. Не используется, если компонент упакован в ZIP-архив."
                }
            }
        }
    },
    {
        "name": "НачатьПодключениеРасширенияРаботыСКриптографией",
        "name_en": "BeginAttachingCryptoExtension",
        "description": "При первом обращении начинает подключение расширения для работы с криптографией.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <Подключено> – результат подключения, Булево.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения."
                }
            }
        }
    },
    {
        "name": "НачатьПодключениеРасширенияРаботыСФайлами",
        "name_en": "BeginAttachingFileSystemExtension",
        "description": "Начинает подключение расширения для работы с файлами.",
        "returns": "Тип: Произвольный. Для тонкого клиента - всегда Истина.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения): Произвольный",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <Подключено> – результат подключения, Тип: Булево. Истина - расширение успешно подключено  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения."
                }
            }
        }
    },
    {
        "name": "НачатьПоискФайлов",
        "name_en": "BeginFindingFiles",
        "description": "Начинает поиск по заданной маске файлов и каталогов, расположенных в заданном каталоге.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, Путь: Строка, Маска?: Строка, ИскатьВПодкаталогах?: Булево)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <НайденныеФайлы> - помещается массив значений типа Файл.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Путь": "Путь к каталогу, в котором производится поиск. Каталог может быть как на локальной сети, так и на ftp-сервере. При использовании этой схемы в адресах необходимо указывать прямые слеши '/', а не обратные '\\'. Допускается указание полного имени файла (путь + имя).",
                    "Маска": "Маска выбора файлов.  Если параметр задан, то первый параметр воспринимается системой как путь к каталогу, в котором требуется найти файлы, удовлетворяющие маске выбора. Для операционной системы Windows:  В строке маски, помимо обычных символов, допускается использование символа \"*\" (звездочка), обозначающего любое число произвольных символов, и \"?\" (знак вопроса), обозначающего один произвольный символ.  Для операционных систем Linux, macOS, iOS и Android:  В строке маски допускается использование следующих последовательностей:  - любой символ, допустимый в имени файла. Сопоставление указанных символов производится:  - для Linux, macOS - с учетом регистра,  - для iOS и Android - без учета регистра;  - \"*\" (звездочка) - любая последовательность символов;  - \"?\" (знак вопроса) - любой символ;  - \"[\" - класс символов. После открывающей квадратной скобки указывается последовательность символов. Шаблон соответствует любому из указанных символов. Можно указывать диапазон, используя \"-\". Описание класса символов завершается \"]\". Для указания \"-\" в качестве символа класса нужно указать его первым или последним символом. Если после \"[\" указан знак \"!\", то класс описывает все символы, кроме указанных. Пример строки:  \"Все файлы|*.*|Документы|???.docx;*.[Rr][Tt][Ff];doc[0-9].txt\".",
                    "ИскатьВПодкаталогах": "Истина - будет произведен обход вложенных в параметр <Путь> каталогов и поиск в них.  Параметр игнорируется, если не задан параметр <Маска>, т.к. предполагается, что ищется один файл. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеКаталогаБиблиотекиМобильногоУстройства",
        "name_en": "BeginGettingMobileDeviceLibraryDir",
        "description": "Начинает получение пути к библиотекам мобильного устройства.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, ТипКаталога: ТипКаталогаБиблиотекиМобильногоУстройства)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:  - <КаталогБиблиотекиМобильногоУстройства> - Строка, содержащая путь к библиотеке мобильного устройства.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ТипКаталога": "Тип каталога библиотеки мобильного устройства."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеКаталогаВременныхФайлов",
        "name_en": "BeginGettingTempFilesDir",
        "description": "Начинает получение имени каталога, который используется программой для размещения временных файлов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <ИмяКаталогаВременныхФайлов> – имя временного файла, тип Строка.  - <ДополнительныеПараметры> – значение, которое было указано при создании объекта ОписаниеОповещения."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеКаталогаДокументов",
        "name_en": "BeginGettingDocumentsDir",
        "description": "Начинает получение стандартного каталога документов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <ИмяКаталогаДокументов> – имя временного файла, тип Строка.  - <ДополнительныеПараметры> – значение, которое было указано при создании объекта ОписаниеОповещения."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеРабочегоКаталогаДанныхПользователя",
        "name_en": "BeginGettingUserDataWorkDir",
        "description": "Начинает получение имени каталога текущего пользователя данной информационной базы внутри стандартного каталога данных приложения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <КаталогДанныхПользователя> – имя временного файла, тип Строка.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеФайлаССервера",
        "name_en": "BeginGetFileFromServer",
        "description": "Начинает получение файла.",
        "signature": {
            "СДиалогом": {
                "СтрокаПараметров": "(Адрес: Строка, ИмяФайла?: Строка, ПараметрыДиалогаПолученияФайлов?: ПараметрыДиалогаПолученияФайлов)",
                "Параметры": {
                    "Адрес": "Расположение данных во временном хранилище или в информационной базе. Параметр не должен быть пустой строкой. В противном случае будет сгенерировано сообщение об ошибке.",
                    "ИмяФайла": "Имя файла, которое будет предложено пользователю для сохранения файла. Пользователь может изменить имя файла. Значение по умолчанию: Пустая строка.",
                    "ПараметрыДиалогаПолученияФайлов": "Структура, содержащая параметры диалога, который будет показан пользователю."
                }
            },
            "БезДиалога": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, Адрес: Строка, ПутьКФайлу: Строка)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:  - <ПолученныйФайл> – объект типа ОписаниеПереданногоФайла.  - <ДополнительныеПараметры> – значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Адрес": "Расположение данных во временном хранилище или в информационной базе. Параметр не должен быть пустой строкой. В противном случае будет сгенерировано сообщение об ошибке.",
                    "ПутьКФайлу": "Путь к файлу, в который будет сохранен файл."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеФайлов",
        "name_en": "BeginGettingFiles",
        "description": "Начинает получение набора файлов и сохраняет их в локальную файловую систему пользователя.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, ПолучаемыеФайлы: Массив, РасположениеФайлов?: ДиалогВыбораФайла, Интерактивно?: Булево)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <ПолученныеФайлы> – массив объектов типа ОписаниеПереданногоФайла или Неопределено, если файлы не получены.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ПолучаемыеФайлы": "Массив объектов типа ОписаниеПередаваемогоФайла. Каждый объект описывает получаемый файл:  - Хранение - расположение данных во временном хранилище или в информационной базе;  - Имя - это локальный путь, по которому должен быть расположен получаемый файл. Это может быть либо полный путь, либо часть пути, которая будет объединена со значением параметра <РасположениеФайлов>. Это также может быть имя файла или имя каталога (каталогов) + имя файла.",
                    "РасположениеФайлов": "Определяет общее расположение помещаемых файлов в локальной файловой системе. Может быть задан строкой либо заранее подготовленным диалогом выбора файлов в режиме выбора каталога или сохранения файлов.",
                    "Интерактивно": "Истина - задан интерактивный режим, в котором пользователю показывается диалог, в котором он может выбрать локальное расположение файлов. Ложь - на сервер передается список файлов, описанный в параметре <ПолучаемыеФайлы>. В интерактивном режиме строка, переданная в параметре <РасположениеФайлов>, рассматривается как начальное значение для выбора пути. Значение по умолчанию: Истина."
                }
            }
        }
    },
    {
        "name": "НачатьПолучениеФайловССервера",
        "name_en": "BeginGetFilesFromServer",
        "description": "Начинает получение файлов.",
        "signature": {
            "СДиалогом": {
                "СтрокаПараметров": "(ПолучаемыеФайлы: Массив, ПараметрыДиалогаПолученияФайлов?: ПараметрыДиалогаПолученияФайлов, ПараметрыПолученияАрхиваФайлов?: ПараметрыПолученияАрхиваФайлов)",
                "Параметры": {
                    "ПолучаемыеФайлы": "Массив объектов типа ОписаниеПередаваемогоФайла. Каждый объект описывает получаемый файл:  - Хранение - расположение данных во временном хранилище или в информационной базе. Значение не должно быть равно пустой строке. В противном случае будет сгенерировано сообщение об ошибке.  - Имя - либо полный путь к файлу, либо относительный путь к файлу. Относительный путь будет объединен со значением параметра <БазовыйКаталог>.",
                    "ПараметрыДиалогаПолученияФайлов": "Структура, содержащая параметры диалога, который будет показан пользователю.",
                    "ПараметрыПолученияАрхиваФайлов": "Параметры получения файлов в виде архива. Если параметр не задан, то получаемые файлы не будут упакованы в архив."
                }
            },
            "БезДиалога": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ПолучаемыеФайлы: Массив, БазовыйКаталог?: Строка, ПараметрыПолученияАрхиваФайлов?: ПараметрыПолученияАрхиваФайлов)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:  - <ПолученныеФайлы> – массив объектов типа ОписаниеПереданногоФайла.  - <ДополнительныеПараметры> – значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ПолучаемыеФайлы": "Массив объектов типа ОписаниеПередаваемогоФайла. Каждый объект описывает получаемый файл:  - Хранение - расположение данных во временном хранилище или в информационной базе. Значение не должно быть равно пустой строке. В противном случае будет сгенерировано сообщение об ошибке.  - Имя - либо полный путь к файлу, либо относительный путь к файлу. Относительный путь будет объединен со значением параметра <БазовыйКаталог>.",
                    "БазовыйКаталог": "Устанавливает базовый каталог, относительно которого определяется конечное расположение каждого из файлов. Если среди описаний получаемых файлов есть относительные пути или установлен режим получения архива ПолучатьАрхивВсегда, то параметр <БазовыйКаталог> должен быть задан обязательно.",
                    "ПараметрыПолученияАрхиваФайлов": "Параметры получения файлов в виде архива. Если параметр не задан, то получаемые файлы не будут упакованы в архив."
                }
            }
        }
    },
    {
        "name": "НачатьПомещениеФайла",
        "name_en": "BeginPutFile",
        "description": "Начинает помещение файла из локальной файловой системы во временное хранилище.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, Адрес?: Строка, ПомещаемыйФайл?: Строка, Интерактивно?: Булево, УникальныйИдентификаторФормы?: УникальныйИдентификатор, ОписаниеОповещенияПередНачаломПомещенияФайла?: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения помещения файла со следующими параметрами:  - <Результат> - Ложь - в параметре <Интерактивно> установлен интерактивный режим (Истина) и пользователь отказался от выполнения операции в диалоге выбора файла,  - <Адрес> - расположение нового файла,  - <ПомещаемыйФайл> - Через этот параметр возвращается путь к файлу, указанный в диалоге выбора файла. Для неинтерактивного режима выбранное имя файла соответствует начальному имени файла. В веб-клиенте значение параметра зависит от типа браузера. Для Microsoft Internet Explorer возвращаемое значение зависит от настройки текущей зоны. Подробности: http://msdn.microsoft.com/en-us/library/ms535128(VS.85).aspx,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то по завершении никакая процедура вызвана не будет.",
                    "Адрес": "Содержит адрес файла во временном хранилище, по которому должны быть помещены данные. Если не задан или является пустой строкой, то будет создан новый файл.",
                    "ПомещаемыйФайл": "Путь к файлу на диске, данные из которого будут помещены во временное хранилище, или заранее подготовленный диалог выбора файла в режиме открытия файла, или ссылка на файл. Если параметр <Интерактивно> имеет значение Истина, параметр <ПомещаемыйФайл> может быть не задан или должен иметь тип ДиалогВыбораФайла. Если параметр <Интерактивно> имеет значение Ложь, то параметр <ПомещаемыйФайл> должен иметь тип Строка или СсылкаНаФайл. В веб-клиенте, если расширение работы с файлами не установлено, то параметр <ПомещаемыйФайл>:  - в интерактивном режиме должен иметь тип ДиалогВыбораФайла,  - в неинтерактивном режиме СсылкаНаФайл.",
                    "Интерактивно": "Указывает, используется ли интерактивный режим, в котором отображается диалог выбора файла. Этот файл будет помещен по указанному в параметре <Адрес> расположению во временном хранилище или по новому адресу, если параметр <Адрес> опущен.  Истина - интерактивный режим используется. Значение по умолчанию: Истина.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения. Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, то помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы.",
                    "ОписаниеОповещенияПередНачаломПомещенияФайла": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файла во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - ссылка на файл, готовый к помещению во временное хранилище.  - <ОтказОтПомещенияФайла> - признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено, обработчик <ОписаниеОповещенияОЗавершении> не вызовется. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то перед помещением файла никакая процедура вызвана не будет."
                }
            }
        }
    },
    {
        "name": "НачатьПомещениеФайлаНаСервер",
        "name_en": "BeginPutFileToServer",
        "description": "Начинает помещение файла во временное хранилище.",
        "signature": {
            "ПоПутиФайлаНаДиске": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, Адрес?: Строка, ПутьКФайлу: Строка, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки. После успешного завершения помещения файла процедура, заданная в параметре <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ОписаниеПомещенногоФайла> - тип: ОписаниеПомещенногоФайла, Неопределено. Описание помещенного во временное хранилище файла, либо Неопределено, если помещение файла было отменено.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файла. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файла во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, готовый к помещению во временное хранилище.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Адрес": "Содержит адрес файла во временном хранилище, по которому должен быть помещен файл с диска. Если не задан или является пустой строкой, то будет создан новый файл.",
                    "ПутьКФайлу": "Путь к файлу на диске.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения. Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, то помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            },
            "ПоСсылкеНаФайл": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, Адрес?: Строка, СсылкаНаФайл: СсылкаНаФайл, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки.  Если передаваемый файл не будет найден на диске, то возникнет исключение.  После успешного завершения помещения файла процедура, заданная в параметре  <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ОписаниеПомещенногоФайла> - тип: ОписаниеПомещенногоФайла, Неопределено. Описание помещенного во временное хранилище файла, либо Неопределено, если помещение файла было отменено.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файла. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файла во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, готовый к помещению во временное хранилище.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Адрес": "Содержит адрес файла во временном хранилище, по которому должен быть помещен файл с диска. Если не задан или является пустой строкой, то будет создан новый файл.",
                    "СсылкаНаФайл": "Ссылка на файл.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения. Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, то помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            },
            "СДиалогомВыбораФайла": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, Адрес?: Строка, ПараметрыДиалога?: ПараметрыДиалогаПомещенияФайлов, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки. После успешного завершения помещения файла процедура, заданная в параметре <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ОписаниеПомещенногоФайла> - тип: ОписаниеПомещенногоФайла, Неопределено. Описание помещенного во временное хранилище файла, либо Неопределено, если помещение файла было отменено.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файла. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:   - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файла во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, готовый к помещению во временное хранилище.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Адрес": "Содержит адрес файла во временном хранилище, по которому должен быть помещен файл с диска. Если не задан или является пустой строкой, то будет создан новый файл.",
                    "ПараметрыДиалога": "Структура, содержащая параметры диалога, который будет показан пользователю.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения. Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, то помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            }
        }
    },
    {
        "name": "НачатьПомещениеФайлов",
        "name_en": "BeginPuttingFiles",
        "description": "Начинает помещение набора файлов из локальной файловой системы во временное хранилище.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении: ОписаниеОповещения, ПомещаемыеФайлы?: Массив, Интерактивно?: Булево, УникальныйИдентификаторФормы?: УникальныйИдентификатор, ОписаниеОповещенияПередНачаломПомещенияФайлов?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:  - <ПомещенныеФайлы> – массив объектов типа ОписаниеПереданногоФайла или Неопределено, если файлы не получены.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ПомещаемыеФайлы": "Параметр может содержать массив объектов типа ОписаниеПередаваемогоФайла, или массив объектов типа СсылкаНаФайл, или объект типа ДиалогВыбораФайла или Строка. Для массива объектов типа ОписаниеПередаваемогоФайлав зависимости от его содержимого изменяется хранилище, в котором файлы будут сохранены:  - Массив объектов может быть заполнен полностью. - В этом случае известен набор помещаемых файлов и адреса, по которым они должны быть сохранены.  - Массив объектов может содержать только имена элементов. - В этом случае, набор помещаемых файлов определен, а места хранения неизвестны. Файлы будут размещены в новых временных хранилищах. Если параметр задан строкой, то эта строка должна иметь вид строки поиска для метода НайтиФайлы. Параметр <ПомещаемыеФайлы> указывается в зависимости от значения параметра <Интерактивно>:  - Если параметр <Интерактивно> имеет значение Истина, параметр <ПомещаемыеФайлы> может быть не задан или должен иметь тип ДиалогВыбораФайла.  - Если параметр <Интерактивно> имеет значение Ложь, то параметр <ПомещаемыеФайлы> должен быть задан и иметь тип Строка или массив объектов типа ОписаниеПередаваемогоФайла, или массив объектов типа СсылкаНаФайл. В веб-клиенте, если расширение работы с файлами не установлено, то параметр <ПомещаемыеФайлы> должен иметь тип ДиалогВыбораФайла или массив объектов типа СсылкаНаФайл.",
                    "Интерактивно": "Указывает использование интерактивного режима, при котором пользователю показывается диалог, в котором он может выбрать набор помещаемых файлов. Значение по умолчанию: Истина.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, помещенное значение будет удалено, после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы.",
                    "ОписаниеОповещенияПередНачаломПомещенияФайлов": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файлов во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыеФайлы> - массив элементов типа СсылкаНаФайл, готовые к помещению во временное хранилище.  - <ОтказОтПомещенияВсехФайлов> - признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено, обработчик <ОписаниеОповещенияОЗавершении> не вызовется. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то перед помещением файлов никакая процедура вызвана не будет.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файлов. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - количество уже помещенных во временное хранилище байт (для одного файла).  - <РазмерПомещаемогоФайла> - размер файла в байтах.  - <ОтказОтПомещенияФайла> - признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ПомещеноВсего> - количество уже помещенных во временное хранилище байт (для всех файлов).  - <РазмерПомещаемыхФайловВсего> - суммарный размер всех файлов в байтах.  - <ОтказОтПомещенияВсехФайлов> - признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то в процессе помещения файлов никакая процедура вызвана не будет."
                }
            }
        }
    },
    {
        "name": "НачатьПомещениеФайловНаСервер",
        "name_en": "BeginPutFilesToServer",
        "description": "Начинает помещение файлов во временное хранилище.",
        "signature": {
            "ПоОписаниюПередаваемыхФайлов": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, ОписанияПередаваемыхФайлов: Массив, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки.  Если хотя бы один из передаваемых файлов не будет найден на диске, то будет сгенерировано исключение. После успешного завершения помещения файла процедура, заданная в параметре <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ПомещенныеФайлы> - тип: Массив, Неопределено. Массив объектов типа ОписаниеПомещенногоФайла, либо Неопределено, если помещение файлов было отменено.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файлов. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:   - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части текущего файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ПомещеноВсего> - тип: Число. Процент помещенной части всех файлов.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файлов во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыеФайлы> - тип: Массив. Массив элементов типа СсылкаНаФайл, готовых к помещению во временное хранилище.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписанияПередаваемыхФайлов": "Массив объектов типа ОписаниеПередаваемогоФайла. Каждый элемент массива должен содержать непустой путь к файлу на диске. Адрес временного хранилища, куда должен быть помещен файл, может быть не задан – в таком случае будет создан новый файл.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            },
            "ПоСтрокеПоиска": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, СтрокаПоиска: Строка, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки.  Если хотя бы один из передаваемых файлов не будет найден на диске, то будет сгенерировано исключение. После успешного завершения помещения файла процедура, заданная в параметре <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ПомещенныеФайлы> - тип: Массив, Неопределено. Массив объектов типа ОписаниеПомещенногоФайла, либо Неопределено, если помещение файлов было отменено.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файлов. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:   - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части текущего файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ПомещеноВсего> - тип: Число. Процент помещенной части всех файлов.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файлов во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыеФайлы> - тип: Массив. Массив элементов типа СсылкаНаФайл, готовых к помещению во временное хранилище.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "СтрокаПоиска": "Строка должна иметь вид пути к каталогу, в котором производится поиск. Каталог может быть как на локальной сети, так и на ftp-сервере. При использовании этой схемы в адресах необходимо указывать прямые слеши '/', а не обратные '\\'. Допускается указание полного имени файла (путь + имя).",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы клиентского приложения. Если параметр не указан, помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            },
            "ПоСсылкамНаФайлы": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, СсылкиНаФайлы: Массив, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки.  Если хотя бы один из передаваемых файлов не будет найден на диске, то возникнет исключение. После успешного завершения помещения файла процедура, заданная в параметре <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ПомещенныеФайлы> - тип: Массив, Неопределено. Массив объектов типа ОписаниеПомещенногоФайла, либо Неопределено, если помещение файлов было отменено.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файлов. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:   - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части текущего файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ПомещеноВсего> - тип: Число. Процент помещенной части всех файлов.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файлов во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыеФайлы> - тип: Массив. Массив элементов типа СсылкаНаФайл, готовых к помещению во временное хранилище.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "СсылкиНаФайлы": "Содержит массив объектов типа СсылкаНаФайл.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            },
            "СДиалогомВыбораФайлов": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ОписаниеОповещенияОХодеВыполнения?: ОписаниеОповещения, ОписаниеОповещенияПередНачалом?: ОписаниеОповещения, ПараметрыДиалога?: ПараметрыДиалогаПомещенияФайлов, УникальныйИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Задает процедуру, которая будет вызвана в случае успешного помещения файлов, а так же процедуры, которая будет в случае возникновения ошибки.  После успешного завершения помещения файла процедура, заданная в параметре <ОписаниеОповещенияОЗавершении>, будет вызвана со следующими параметрами:  - <ПомещенныеФайлы> - тип: Массив, Неопределено. Массив объектов типа ОписаниеПомещенногоФайла, либо Неопределено, если помещение файлов было отменено.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияОХодеВыполнения": "Содержит описание процедуры, которая будет вызвана несколько раз по мере помещения файлов. Количество раз и время вызова не определено строго. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыйФайл> - тип: СсылкаНаФайл. Ссылка на файл, помещаемый во временное хранилище.  - <Помещено> - тип: Число. Процент помещенной части текущего файла.  - <ОтказОтПомещенияФайла> - тип: Булево. Признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение файла будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ПомещеноВсего> - тип: Число. Процент помещенной части всех файлов.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено. Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ОписаниеОповещенияПередНачалом": "Содержит описание процедуры, которая будет вызвана непосредственно перед началом помещения файлов во временное хранилище. Оповещение будет вызвано со следующими параметрами:  - <ПомещаемыеФайлы> - тип: Массив. Массив элементов типа СсылкаНаФайл, готовых к помещению во временное хранилище.  - <ОтказОтПомещенияВсехФайлов> - тип: Булево. Признак отказа от дальнейшего помещения всех файлов. Если в теле процедуры-обработчика установить данному параметру значение Истина, то помещение всех файлов будет отменено (в этом случае никакие другие оповещения вызваны не будут). Значение по умолчанию: Ложь. Возвращаемый параметр.  - <ДополнительныеПараметры> - Значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ПараметрыДиалога": "Структура, содержащая параметры диалога, который будет показан пользователю.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор формы клиентского приложения.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, помещенное значение будет удалено, после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            }
        }
    },
    {
        "name": "НачатьСозданиеДвоичныхДанныхИзФайла",
        "name_en": "BeginCreateBinaryDataFromFile",
        "description": "Начинает создание двоичных данных из файла.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, ИмяФайла: Строка)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения работы метода со следующими параметрами:  - <ДвоичныеДанные> - Экземпляр объекта ДвоичныеДанные, содержащий данные из файла.  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ИмяФайла": "Имя файла, из которого надо создать ДвоичныеДанные."
                }
            }
        }
    },
    {
        "name": "НачатьСозданиеКаталога",
        "name_en": "BeginCreatingDirectory",
        "description": "Начинает создание нового каталога файлов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, ИмяКаталога: Строка)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующими параметрами:   - <ИмяКаталога> – строка, содержащая путь к созданному каталогу,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ИмяКаталога": "Полное имя создаваемого каталога. Допускается использование схемы ftp для адресации файлов. При использовании этой схемы в адресах необходимо указывать прямые слеши '/', а не обратные '\\'."
                }
            }
        }
    },
    {
        "name": "НачатьТранзакцию",
        "name_en": "BeginTransaction",
        "description": "Открывает транзакцию. Транзакция предназначена для записи в информационную базу согласованных изменений. Все изменения, внесенные в информационную базу после начала транзакции, будут затем либо целиком записаны, либо целиком отменены.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(РежимБлокировок?: РежимУправленияБлокировкойДанных)",
                "Параметры": {
                    "РежимБлокировок": "Установка параметра имеет смысл, если для свойства конфигурации \"Режим управления блокировкой данных\" выбрано значение \"Автоматический и Управляемый\". Если значение параметра Автоматический, то данная транзакция будет выполняться в режиме автоматических блокировок. Если значение параметра Управляемый, то в данной транзакции будут выполняться управляемые блокировки. Если к моменту вызова данного метода была начата транзакция, выполняющаяся в автоматическом режиме управления блокировками, то установка значения параметра Управляемый не приведет к изменению режима управления блокировками. Если к моменту вызова данного метода была начата транзакция, выполняющаяся в управляемом режиме блокировок, то установка значения параметра Автоматический приведет к возникновению исключительной ситуации, которая может быть обработана конструкцией Попытка... Исключение... КонецПопытки. Если для свойства конфигурации \"Режим управления блокировкой данных\" выбрано значение \"Управляемый\", то значение параметра по умолчанию Управляемый. Значение по умолчанию: Автоматический."
                }
            }
        }
    },
    {
        "name": "НачатьУдалениеФайлов",
        "name_en": "BeginDeletingFiles",
        "description": "Начинает удаление указанных файлов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещения: ОписаниеОповещения, Путь: Строка, Маска?: Произвольный)",
                "Параметры": {
                    "ОписаниеОповещения": "Содержит описание процедуры, которая будет вызвана после завершения со следующим параметром:   - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения .",
                    "Путь": "Путь к удаляемым файлам.",
                    "Маска": "Маска для выбора удаляемых файлов.  Если <Маска> не указана, то удаляются все файлы и каталог <Путь>. Для операционной системы Windows:  В строке маски, помимо обычных символов, допускается использование символа \"*\" (звездочка), обозначающего любое число произвольных символов, и \"?\" (знак вопроса), обозначающего один произвольный символ.  Для операционных систем Linux, macOS:  В строке маски допускается использование следующих последовательностей:  - любой символ, допустимый в имени файла. Сопоставление указанных символов производится с учетом регистра;  - \"*\" (звездочка) - любая последовательность символов;  - \"?\" (знак вопроса) - любой символ;  - \"[\" - класс символов. После открывающей квадратной скобки указывается последовательность символов. Паттерн соответствует любому из указанных символов. Можно указывать диапазон, используя \"-\". Описание класса символов завершается \"]\". Для указания \"-\" в качестве символа класса нужно указать его первым или последним символом. Если после \"[\" указан знак \"!\", то класс описывает все символы, кроме указанных."
                }
            }
        }
    },
    {
        "name": "НачатьУстановкуВнешнейКомпоненты",
        "name_en": "BeginInstallAddIn",
        "description": "Доставляет объект внешнего компонента с сервера на клиент, после чего он становится доступен для метода",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, Местоположение: Строка)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения установки внешнего компонента со следующими параметрами:  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то по завершении никакая процедура вызвана не будет.",
                    "Местоположение": "Строка, определяющая местоположение внешнего компонента. В качестве строки может использоваться:  - полное имя макета, в котором хранится внешний компонент в архиве;  - URL к внешнему компоненту, упакованной в ZIP-архив, в формате, аналогичном ПолучитьНавигационнуюСсылку()."
                }
            }
        }
    },
    {
        "name": "НачатьУстановкуРасширенияРаботыСКриптографией",
        "name_en": "BeginInstallCryptoExtension",
        "description": "Устанавливает расширение для работы с криптографией в браузер.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения установки расширения работы с криптографией со следующими параметрами:  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то по завершении никакая процедура вызвана не будет."
                }
            }
        }
    },
    {
        "name": "НачатьУстановкуРасширенияРаботыСФайлами",
        "name_en": "BeginInstallFileSystemExtension",
        "description": "Устанавливает расширение работы с файлами.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после завершения установки расширения работы с файлами со следующими параметрами:  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан или имеет тип Неопределено, то по завершении никакая процедура вызвана не будет."
                }
            }
        }
    },
    {
        "name": "НеделяГода",
        "name_en": "WeekOfYear",
        "description": "Определяет номер недели в году для указанной даты.",
        "returns": "Тип: Число. Номер недели в году.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "НеобходимостьЗавершенияСоединения",
        "name_en": "ConnectionStopRequest",
        "description": "Позволяет определить, что клиент подсоединен к выключенному рабочему процессу. В этом случае клиентское приложение нужно перезапустить, чтобы оно подсоединилось к включенному рабочему процессу.",
        "returns": "Тип: НеобходимостьЗавершенияСоединения. Содержит информацию о необходимости завершения соединения."
    },
    {
        "name": "Новый",
        "name_en": "New",
        "description": "Позволяет создать значение указанного типа. Допустим только для тех типов, для которых разрешено создание с помощью данного оператора.",
        "returns": "Произвольный",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Тип, ПараметрыКонструктора): Произвольный",
                "Параметры": {
                    "Тип": "Имя типа или значение типа Тип",
                    "ПараметрыКонструктора": "Массив параметров конструктора"
                }
            }
        }
    },
    {
        "name": "НомерСеансаИнформационнойБазы",
        "name_en": "InfoBaseSessionNumber",
        "description": "Получает номер текущего сеанса информационной базы.",
        "returns": "Тип: Число. "
    },
    {
        "name": "НомерСоединенияИнформационнойБазы",
        "name_en": "InfoBaseConnectionNumber",
        "description": "Получает номер текущего соединения с информационной базой.",
        "returns": "Тип: Число. "
    },
    {
        "name": "НРег",
        "name_en": "Lower",
        "description": "Преобразует все символы строки в нижний регистр.",
        "returns": "Тип: Строка. Строка, полученная в результате преобразования.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Строка",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "НСтр",
        "name_en": "NStr",
        "description": "Получает строку на языке текущего пользователя или указанном языке из набора строк на разных языках конфигурации.",
        "returns": "Тип: Строка. Строка, соответствующая языку пользователя или основному языку конфигурации.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИсходнаяСтрока: Строка, КодЯзыка?: Строка): Строка",
                "Параметры": {
                    "ИсходнаяСтрока": "Строки на разных языках, разделенные символом \";\" (точка с запятой). Строка на одном языке состоит из кода языка, указанного в метаданных, символа \"=\" (равно) и собственно строки текста на данном языке в одинарных кавычках, двойных кавычках или без кавычек (когда указывается только один язык).",
                    "КодЯзыка": "Указывается код языка, на котором нужно получить строку. Если значение не указано, то строка будет выдаваться на языке, определенного для текущего пользователя. Значение по умолчанию: Пустая строка."
                }
            }
        }
    },
    {
        "name": "ОбновитьИнтерфейс",
        "name_en": "RefreshInterface",
        "description": "Обновляет командный интерфейс, рабочий стол и открытые формы с учетом текущих значений функциональных опций и их параметров. Вызов метода необходим, чтобы измененные параметры функциональных опций вступили в действие."
    },
    {
        "name": "ОбновитьНумерациюОбъектов",
        "name_en": "RefreshObjectsNumbering",
        "description": "Выполняет обновление номеров в соответствии с номерами, записанными в базе данных. После вызова данного метода все выданные, но незаписанные номера, становятся невалидными т.к. не гарантируется их уникальность. Данный метод разрешено вызывать только администратору системы.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Метаданные?: Массив)",
                "Параметры": {
                    "Метаданные": "Объект метаданного или массив объектов метаданных, для объектов которого будет выполнено обновление. Если значение параметра не указано, то обновление будет выполнено для всех типов объектов."
                }
            }
        }
    },
    {
        "name": "ОбновитьПовторноИспользуемыеЗначения",
        "name_en": "RefreshReusableValues",
        "description": "Очищает все сохраненные значения функций с повторным использованием возвращаемых значений. После выполнения метода функции с повторным использованием возвращаемых значений выполняется так же, как при первом вызове."
    },
    {
        "name": "ОбработкаПрерыванияПользователя",
        "name_en": "UserInterruptProcessing",
        "description": "Предназначен для прерывания работы встроенного языка при нажатии пользователем клавиши Ctrl+Break.  - нажатие кнопки в форме;  - выбор пункта меню или кнопки командной панели в форме;  - выбор пункта меню или кнопки панели инструментов интерфейса;  - действия инициируемые обработчиками событий \"Выбор\" элементов управления."
    },
    {
        "name": "ОбъединитьФайлы",
        "name_en": "MergeFiles",
        "description": "Объединяет несколько файлов в один.",
        "signature": {
            "ПоМассивуИменЧастейФайла": {
                "СтрокаПараметров": "(ИменаЧастей: Массив, ИмяРезультирующегоФайла: Строка)",
                "Параметры": {
                    "ИменаЧастей": "Массив имен частей файла, которые требуется объединить. Объединение будет происходить в порядке, в котором заданы имена файлов в массиве.",
                    "ИмяРезультирующегоФайла": "Имя файла, который требуется создать при объединении частей."
                }
            },
            "ПоМаске": {
                "СтрокаПараметров": "(ШаблонПоиска: Строка, ИмяРезультирующегоФайла: Строка)",
                "Параметры": {
                    "ШаблонПоиска": "Шаблон поиска частей.",
                    "ИмяРезультирующегоФайла": "Имя файла, который требуется создать путем объединения найденных частей."
                }
            }
        }
    },
    {
        "name": "Окр",
        "name_en": "Round",
        "description": "Округляет исходное число до нужной разрядности в соответствии с заданным режимом округления.",
        "returns": "Тип: Число. Число, полученное в результате округления.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, Разрядность?: Число, РежимОкругления?: РежимОкругления): Число",
                "Параметры": {
                    "Число": "Исходное число.",
                    "Разрядность": "Определяет число знаков дробной части, до которых производится округление. Если параметр отрицательный, то число округляется до соответствующего разряда в целой части, начиная с младших разрядов. Параметр обязательный, если указан параметр <РежимОкругления>. Значение по умолчанию: 0.",
                    "РежимОкругления": "Определяет режим округления. Помимо системного перечисления допускается использование числового параметра: 0 - если при округлении 1.5 = 1; 1 - если при округлении 1.5 = 2. Значение по умолчанию: Окр15как20."
                }
            }
        }
    },
    {
        "name": "ОписаниеОшибки",
        "name_en": "ErrorDescription",
        "description": "Получает описание ошибки (исключительной ситуации), включая информацию о строке модуля и вложенных исключениях.",
        "returns": "Тип: Строка. Возвращает описание ошибки, такое же, какое было бы выдано в окне сообщений в случае отсутствия обработчика исключительной ситуации, за исключением описания модуля и строки, в которой ошибка возникла."
    },
    {
        "name": "Оповестить",
        "name_en": "Notify",
        "description": "Посылает оповещение всем созданным формам и всем подключенным через метод",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяСобытия?: Строка, Параметр?: Произвольный, Источник?: Произвольный)",
                "Параметры": {
                    "ИмяСобытия": "Имя события. Может быть использовано для идентификации сообщений принимающими их формами.",
                    "Параметр": "Параметр сообщения. Могут быть переданы любые необходимые данные.",
                    "Источник": "Источник события. Например, в качестве источника может быть указана другая форма."
                }
            }
        }
    },
    {
        "name": "ОповеститьОбИзменении",
        "name_en": "NotifyChanged",
        "signature": {
            "ИзмененОдинОбъект": {
                "СтрокаПараметров": "(Ссылка: СправочникСсылка.<Имя справочника>)",
                "Параметры": {
                    "Ссылка": "Ссылка измененного объекта или ключ измененной записи регистра, об изменении которой(го) необходимо уведомить динамические списки, чтобы они обновились. Поведение при очистке кэша (такое же, как при интерактивном изменении):   - кэш представлений ссылок - очищаются записи, соответствующие измененной ссылке;  - кэш данных через точку - удаляются те записи, которые имеют в пути ссылки того же типа, что и измененная;  - кэш данных быстрого выбора - данные хранятся по типам, очищаются данные, которые относятся к типу измененной ссылки;  - кэш ограничений по типу - данные хранятся по типам, очищаются данные, которые относятся к типу измененной ссылки."
                }
            },
            "ИзмененоМногоОбъектов": {
                "СтрокаПараметров": "(ИзмененныйТип: Тип)",
                "Параметры": {
                    "ИзмененныйТип": "Тип изменившихся объектов, например \"ДокументСсылка.РасходнаяНакладная\". Поведение при очистке кэша - очищается вся информация, которая связана с измененным типом."
                }
            }
        }
    },
    {
        "name": "ОсновнойСерверДоступен",
        "name_en": "MainServerAvailable",
        "description": "Показывает доступность основного сервера с клиента или автономного сервера.",
        "returns": "Тип: Булево, Неопределено. "
    },
    {
        "name": "ОтключитьОбработчикЗапросаНастроекКлиентаЛицензирования",
        "name_en": "DetachLicensingClientParametersRequestHandler",
        "description": "Отключает обработчик запроса настройки клиента лицензирования, подключенный ранее при помощи"
    },
    {
        "name": "ОтключитьОбработчикОжидания",
        "name_en": "DetachIdleHandler",
        "description": "Отключает подключенный ранее при помощи процедуры",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПроцедуры: Строка)",
                "Параметры": {
                    "ИмяПроцедуры": "Имя процедуры модуля приложения (модуля обычного приложения) или глобального общего модуля, используемой в качестве обработчика ожидания."
                }
            }
        }
    },
    {
        "name": "ОтключитьОбработчикОповещения",
        "name_en": "DetachNotificationHandler",
        "description": "Отключает подключенный ранее при помощи метода",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПроцедуры: Строка)",
                "Параметры": {
                    "ИмяПроцедуры": "Имя процедуры модуля приложения (модуля обычного приложения) или общего модуля, используемой в качестве обработчика."
                }
            }
        }
    },
    {
        "name": "ОткрытьЗначение",
        "name_en": "OpenValue",
        "description": "Показывает в диалоге переданное значение. Вид диалога зависит от типа переданного значения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный)",
                "Параметры": {
                    "Значение": "Значение любого типа, который может быть показан системой в диалоге."
                }
            }
        }
    },
    {
        "name": "ОткрытьИндексСправки",
        "name_en": "OpenHelpIndex",
        "description": "Открывает окно со списком ключевых слов и выражений (индексом) справки по приложению.",
        "returns": "Тип: Булево. Истина - окно со списком ключевых слов открыто; Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТекстДляПоиска?: Строка): Булево",
                "Параметры": {
                    "ТекстДляПоиска": "Начальный текст для позиционирования в списке ключевых слов и выражений справки по приложению."
                }
            }
        }
    },
    {
        "name": "ОткрытьСодержаниеСправки",
        "name_en": "OpenHelpContent",
        "description": "Открывает окно с содержанием справки по приложению.",
        "returns": "Тип: Булево. Ложь - показ справки невозможен. Например, используется Internet Explorer версии ранее 5,5."
    },
    {
        "name": "ОткрытьСправку",
        "name_en": "OpenHelp",
        "description": "Открывает окно со справочной информацией по объекту метаданных.",
        "returns": "Тип: Булево. Ложь - показ справки невозможен. Например, используется Internet Explorer версии ранее 5,5.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Раздел?: ОбъектМетаданных: Куб): Булево",
                "Параметры": {
                    "Раздел": "Объект метаданных, по которому требуется вывести справочную информацию. Значение параметра может быть задано как объектом метаданных, по которому требуется вывести справочную информацию, так и строкой.  Строка представляет полное имя объекта в дереве конфигурации, для которого требуется вывести справочную информацию. Для конфигурации достаточно указать \"Конфигурация\". В параметре, кроме имени объекта метаданных, можно указывать ссылку (URL) на главу справки.  Параметр в виде объекта метаданных доступен только в режиме запуска \"Толстый клиент\". Подробнее см. НайтиПоПолномуИмени."
                }
            }
        }
    },
    {
        "name": "ОткрытьФорму",
        "name_en": "OpenForm",
        "description": "Открывает и возвращает форму или управляемую форму. В тонком и веб-клиенте только управляемую форму. Перед открытием осуществляется поиск уже открытой такой же формы. Поиск осуществляется по типу формы, значениям ключевых параметров формы, владельцу формы, пользовательскому ключу уникальности.  - ФормаОбъекта,  - ФормаЗаписи,  - ФормаНабораЗаписей,  - ФормаКонстант. Можно открывать уже полученную форму. В этом случае в параметрах передается уже полученная форма и окно, в котором открыть форму. Можно открыть форму по имени. В этом случае в параметры передаются имя формы, параметры формы, владелец, ключ уникальности и окно, в котором должна быть открыта форма.",
        "returns": "Тип: Форма, ФормаКлиентскогоПриложения. ",
        "signature": {
            "ПоИмени": {
                "СтрокаПараметров": "(ИмяФормы: Строка, Параметры?: Структура, Владелец?: Произвольный, Уникальность?: Произвольный, Окно?: ОкноКлиентскогоПриложения, НавигационнаяСсылка?: Строка, ОписаниеОповещенияОЗакрытии?: ОписаниеОповещения, РежимОткрытияОкна?: РежимОткрытияОкнаФормы): Форма",
                "Параметры": {
                    "ИмяФормы": "Имя формы. Образуется как полный путь к объекту метаданных Форма (например, \"Справочник.Контрагенты.Форма.ФормаОбъекта\", \"ОбщаяФорма.ФормаСохраненияФайла\") или как полный путь к прикладному объекту, дополненный именем формы по умолчанию (например, \"Справочник.Товары.ФормаВыбора\"). Независимо от способа задания имени формы, если была найдена такая же открытая форма, метод вернет ее. Имена форм по умолчанию:  - ФормаОбъекта (ObjectForm) - форма объекта по умолчанию;  - ФормаГруппы (FolderForm) - форма группы по умолчанию;  - ФормаЗаписи (RecordForm) - форма записи регистра по умолчанию;  - ФормаСписка (ListForm) - форма списка по умолчанию;  - ФормаВыбора (ChoiceForm) - форма выбора по умолчанию;  - ФормаВыбораГруппы (FolderChoiceForm) - форма выбора группы по умолчанию;  - ФормаКонстант (ConstantsForm) - форма констант по умолчанию;  - Форма (Form) - форма отчета и обработки по умолчанию;  - ФормаНастроек (SettingsForm) - форма настроек отчета по умолчанию;  - ФормаЗагрузки (LoadForm) - форма загрузки настроек;  - ФормаСохранения (SaveForm) - форма сохранения настроек;  - ФормаВарианта (VariantForm) - форма редактирования варианта отчета;  - ФормаЗагрузкиПользовательскихНастроекОтчетов (ReportUserSettingsLoadForm) - форма загрузки настроек отчета;  - ФормаСохраненияПользовательскихНастроекОтчетов (ReportUserSettingsSaveForm) - форма сохранения настроек отчета;  - ФормаЗагрузкиВариантовОтчетов (ReportVariantsLoadForm) - форма загрузки варианта отчета;  - ФормаСохраненияВариантовОтчетов (ReportVariantsSaveForm) - форма сохранения варианта отчета;  - ФормаЗагрузкиНастроекДанныхФорм (FormDataSettingsLoadForm) - форма загрузки настроек данных форм;  - ФормаСохраненияНастроекДанныхФорм (FormDataSettingsSaveForm) - форма сохранения настроек данных форм;  - ФормаПоиска (SearchForm) - форма полнотекстового поиска в данных. Для внешних отчетов и обработок имя формы задается следующим образом:  - ВнешнийОтчет.<имя отчета>.Форма.<имя формы>;  - ВнешнийОтчет.<имя отчета>.<имя стандартной формы>;  - ВнешняяОбработка.<имя обработки>.Форма.<имя формы>;  - ВнешняяОбработка.<имя обработки>.<имя стандартной формы>. При этом внешний отчет или обработка должны быть предварительно зарегистрированы в системе. Для регистрации отчета следует использовать метод Подключить. Для регистрации обработки следует использовать метод Подключить. <Имя отчета> и <имя обработки> - это имена, под которыми зарегистрированы внешний отчет или обработка.",
                    "Параметры": "Параметры формы. Ключ структуры - имя параметра, а значение - значение параметра формы. Имя элемента должно совпадать с именем параметра структуры. П =НовыйСтруктура(\"Ключ\", Поставщик); Форма = ПолучитьФорму(\"Справочник.Контрагенты.ФормаОбъекта\", П); Форма.Открыть();",
                    "Владелец": "Владелец формы - форма или элемент управления другой формы.",
                    "Уникальность": "В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. Если будет найдена форма с таким же ключом уникальности, вместо открытия новой формы будет активизирована найденная форма. Ложь - искать форму с ключом уникальности по умолчанию, Истина - не искать форму вообще, любое другое значение устанавливает ключ уникальности, по которому будет произведен поиск. Значение по умолчанию: Ложь.",
                    "Окно": "Окно приложения, в котором будет открыта форма.  Применимо только для формы клиентского приложения. Окном может быть только основное окно приложения или вспомогательное окно формы. Используется только в управляемом приложении.",
                    "НавигационнаяСсылка": "Если содержит значение, отличное от Неопределено, то это значение присваивается свойству НавигационнаяСсылка формы, полученной в результате вызова данного метода, и свойство АвтоНавигационнаяСсылка этой формы устанавливается в Ложь. Значение по умолчанию: Неопределено.",
                    "ОписаниеОповещенияОЗакрытии": "Содержит описание процедуры, которая будет вызвана при закрытии формы со следующими параметрами: <РезультатЗакрытия> - значение, переданное при вызове метода Закрыть открываемой формы, <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.  Если параметр не указан, то по завершению никакая процедура вызвана не будет. Используется только в управляемом приложении.",
                    "РежимОткрытияОкна": "Указывает режим открытия окна формы клиентского приложения. Используется только в управляемом приложении. Значение по умолчанию: Неопределено."
                }
            },
            "ПоФорме": {
                "СтрокаПараметров": "(Форма: Форма, Окно?: ОкноКлиентскогоПриложения): Форма",
                "Параметры": {
                    "Форма": "Форма или форма клиентского приложения. В режиме тонкого и веб-клиентов только форма клиентского приложения.",
                    "Окно": "Окно приложения, в котором будет открыта форма.  Применимо только для формы клиентского приложения. Окном может быть только основное окно приложения или вспомогательное окно формы."
                }
            }
        }
    },
    {
        "name": "ОткрытьФормуМодально",
        "name_en": "OpenFormModal",
        "description": "Открывает форму или форму клиентского приложения.",
        "returns": "Тип: Произвольный. ",
        "signature": {
            "ПоИмени": {
                "СтрокаПараметров": "(ИмяФормы: Строка, Параметры?: Структура, Владелец?: Произвольный, НавигационнаяСсылка?: Строка): Произвольный",
                "Параметры": {
                    "ИмяФормы": "Имя формы. Образуется как полный путь к объекту метаданных Форма (например, \"Справочник.Контрагенты.Форма.ФормаОбъекта\") или как полный путь к прикладному объекту, дополненный именем формы по умолчанию (например, \"Справочник.Товары.ФормаВыбора\"). Имена форм по умолчанию:  - ФормаОбъекта (ObjectForm) - форма объекта по умолчанию;  - ФормаГруппы (FolderForm) - форма группы по умолчанию;  - ФормаЗаписи (RecordForm) - форма записи регистра по умолчанию;  - ФормаСписка (ListForm) - форма списка по умолчанию;  - ФормаВыбора (ChoiceForm) - форма выбора по умолчанию;  - ФормаВыбораГруппы (FolderChoiceForm) - форма выбора группы по умолчанию;  - ФормаКонстант (ConstantsForm) - форма констант по умолчанию для обычного режима, установленная как форма констант для конфигурации;  - Форма (Form) - форма константы, отчета и обработки по умолчанию;  - ФормаНастроек (SettingsForm) - форма настроек отчета по умолчанию;  - ФормаЗагрузки (LoadForm) - форма загрузки настроек;  - ФормаСохранения (SaveForm) - форма сохранения настроек;  - ФормаВарианта (VariantForm) - форма редактирования варианта отчета;  - ФормаПоиска (SearchForm) - форма полнотекстового поиска в данных;  - ФормаИсторииИзмененийИсторииДанных (DataHistoryChangeHistoryForm) - форма истории данных, содержащая версии данных;  - ФормаДанныхВерсииИсторииДанных (DataHistoryVersionDataForm) - форма данных версии истории, содержащая отчет по версии данных;  - ФормаРазличийВерсийИсторииДанных (DataHistoryVersionDifferencesForm) - форма различий версий истории данных, отображает отчет различий версий.",
                    "Параметры": "Параметры формы. Ключ структуры - имя параметра, а значение - значение параметра формы. Имя элемента должно совпадать с именем параметра структуры. П =НовыйСтруктура(\"Ключ\", Поставщик); Форма = ПолучитьФорму(\"Справочник.Контрагенты.ФормаОбъекта\", П); Форма.Открыть();",
                    "Владелец": "Владелец формы - форма или элемент управления другой формы.",
                    "НавигационнаяСсылка": "Если содержит значение, отличное от Неопределено, то это значение присваивается свойству НавигационнаяСсылка формы, полученной в результате вызова данного метода, и свойство АвтоНавигационнаяСсылка этой формы устанавливается в Ложь. Значение по умолчанию: Неопределено."
                }
            },
            "ПоФорме": {
                "СтрокаПараметров": "(Форма: Форма): Произвольный",
                "Параметры": {
                    "Форма": "Форма или форма клиентского приложения.  В режимах тонкого и веб-клиента только ФормаКлиентскогоПриложения."
                }
            }
        }
    },
    {
        "name": "ОтменитьТранзакцию",
        "name_en": "RollbackTransaction",
        "description": "Отменяет открытую ранее транзакцию. Все изменения, внесенные в информационную базу в процессе транзакции, будут отменены."
    },
    {
        "name": "ОчиститьЖурналРегистрации",
        "name_en": "ClearEventLog",
        "description": "Удаляет часть журнала регистрации в соответствии с отбором.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Отбор: Структура)",
                "Параметры": {
                    "Отбор": "Структура отбора журнала регистрации:  - ДатаНачала (StartDate) - Дата; значение по умолчанию Неопределено;  - ДатаОкончания (EndDate) - Дата; значение по умолчанию Неопределено;  - Уровень (Level) - перечисление или массив перечислений; значение по умолчанию Неопределено;  - ИмяПриложения (ApplicationName) - Строка или массив строк; значение по умолчанию Неопределено;  - Пользователь (User) - ПользовательИнформационнойБазы или массив таких объектов, или Строка. Объект ПользовательИнформационнойБазы и массив таких объектов можно получить из объекта МенеджерПользователейИнформационнойБазы. Также можно задавать пользователя по имени (строкой). Причем пользователей, которые были удалены из информационной базы, можно задавать только таким способом. Пустая строка означает \"пользователя по умолчанию\", который используется, когда в информационной базе нет ни одного пользователя (от имени такого пользователя работают также фоновые задания). Если в отборе задается массив пользователей, то можно перемешивать в нем значения обоих типов - строка и ПользовательИнформационнойБазы. Значение по умолчанию Неопределено;  - Компьютер (Computer) - Строка или массив строк; значение по умолчанию Неопределено;  - Событие (Event) - Строка или массив строк; значение по умолчанию Неопределено.   - - _$Access$_.Access - Доступ. Доступ; Записывается при следующих обстоятельствах:   - при регистрации фактов успешного доступа пользователей информационной базы к тем или иным данным,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка.  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) в этом случае имеет следующий состав:   - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались. Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Access$_.AccessDenied - Доступ. Отказ в доступе; Записывается в следующих случаях:   - при регистрации фактов отказа в доступе к тем или иным данным пользователям информационной базы,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка,  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) имеет следующий состав:    - Для ошибки доступа к объекту (не ограничение доступа к данным):    - Право (Right) - имя нарушенного права;  - Для ошибки ограничения доступа к данным:    - Действие (Action) - Действие, которое выполнялось с данными, для объектных таблиц: Чтение (Read), Добавление (Insert), Изменение (Update), Удаление (Delete); для не объектных таблиц, все что не Чтение, то Изменение;  - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались.Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Data$_.Delete - Данные. Удаление;  - _$Data$_.DeletePredefinedData - Данные. Удаление предопределенных данных;  - _$Data$_.DeleteVersions - Данные. Удаление версий;  - _$Data$_.New - Данные. Добавление;  - _$Data$_.NewPredefinedData - Данные. Добавление предопределенных данных;  - _$Data$_.NewVersion - Данные. Добавление версии;  - _$Data$_.Post - Данные. Проведение;  - _$Data$_.PredefinedDataInitialization - Данные. Инициализация предопределенных данных;  - _$Data$_.PredefinedDataInitializationDataNotFound - Данные. Инициализация предопределенных данных. Данные не найдены;  - _$Data$_.SetPredefinedDataInitialization - Данные. Установка инициализации предопределенных данных;  - _$Data$_.SetStandardODataInterfaceContent - Данные. Изменение состава стандартного интерфейса OData;  - _$Data$_.TotalsMaxPeriodUpdate - Данные. Изменение максимального периода рассчитанных итогов;  - _$Data$_.TotalsMinPeriodUpdate - Данные. Изменение минимального периода рассчитанных итогов;  - _$Data$_.Unpost - Данные. Отмена проведения;  - _$Data$_.Update - Данные. Изменение;  - _$Data$_.UpdatePredefinedData - Данные. Изменение предопределенных данных;  - _$Data$_.VersionCommentUpdate - Данные. Изменение комментария версии;  - _$InfoBase$_.ConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.ConfigUpdate - Информационная база. Изменение конфигурации;  - _$InfoBase$_.DBConfigBackgroundUpdateCancel - Информационная база. Отмена фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateFinish - Информационная база. Завершение фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateResume - Информационная база. Продолжение (после приостановки) процесса фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateStart - Информационная база. Запуск фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateSuspend - Информационная база. Приостановка (пауза) процесса фонового обновления;  - _$InfoBase$_.DBConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.DBConfigExtensionUpdateError  - Информационная база. Ошибка изменения расширения конфигурации; Поле Данные заполняется аналогично событию _$InfoBase$_.DBConfigExtensionUpdate (при возможности вывода этих данных);  - _$InfoBase$_.DBConfigUpdate - Информационная база. Изменение конфигурации базы данных;  - _$InfoBase$_.DBConfigUpdateStart - Информационная база. Запуск обновления конфигурации базы данных;  - _$InfoBase$_.DumpError - Информационная база. Ошибка выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpFinish - Информационная база. Окончание выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpStart - Информационная база. Начало выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.EraseData - Информационная база. Удаление данных информационной баз;  - _$InfoBase$_.EventLogReduce - Информационная база. Сокращение журнала регистрации; записываются при сокращении журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Дата (Date) - Дата;  - _$InfoBase$_.EventLogReduceError - Информационная база. Ошибка сокращения журнала регистрации; записываются при ошибках сокращения журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.EventLogReduce (при возможности вывода этих данных);  - _$InfoBase$_.EventLogSettingsUpdate - Информационная база. Изменение параметров журнала регистрации;  - _$InfoBase$_.EventLogSettingsUpdateError - Информационная база. Изменение настроек журнала регистрации; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные (Структура) заполняется структурой со следующим составом свойств:  - При изменении уровня событий и/или периода разделения журнала регистрации(записываются только измененные параметры):  - Уровни (Levels): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При изменении формата журнала регистрации:  - ФорматЖурналаРегистрации (EventLogStructure): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При настройке использования событий журнала регистрации (с помощью метода УстановитьИспользованиеСобытияЖурналаРегистрации):  - ИмяСобытия (EventName) - Строка;   - СобытиеРегистрируется (EventIsLogged) - Булево;  - _$InfoBase$_.InfoBaseAdmParamsUpdate - Информационная база. Изменение параметров информационной базы;  - _$InfoBase$_.InfoBaseAdmParamsUpdateError - Информационная база. Ошибка изменения параметров информационной базы; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.InfoBaseAdmParamsUpdate (при возможности вывода этих данных);  - _$InfoBase$_.IntegrationServiceActiveUpdate - Информационная база. Изменение активности сервиса интеграции;  - _$InfoBase$_.IntegrationServiceSettingsUpdate - Информационная база. Изменение настроек сервиса интеграции;  - _$InfoBase$_.MasterNodeUpdate - Информационная база. Изменение главного узла;  - _$InfoBase$_.PredefinedDataUpdate - Информационная база. Обновление предопределенных данных;  - _$InfoBase$_.RegionalSettingsUpdate - Информационная база. Изменение региональных установок;  - _$InfoBase$_.RestoreError - Информационная база. Ошибка загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreFinish - Информационная база. Окончание загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreStart - Информационная база. Начало загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.SecondFactorAuthTemplateDelete - Информационная база. УдалениеШаблонаВторгоФактораАутентификации; записывается при удалении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateNew - Информационная база. ДобавлениеШаблонаВторгоФактораАутентификации; записывается при создании шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateUpdate - Информационная база. ИзменениеШаблонаВторгоФактораАутентификации; записывается при изменении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SetPredefinedDataUpdate - Информационная база. Установить обновление предопределенных данных;  - _$InfoBase$_.TARImportant - Тестирование и исправление. Ошибка;  - _$InfoBase$_.TARInfo - Тестирование и исправление. Сообщение;  - _$InfoBase$_.TARMess - Тестирование и исправление. Предупреждение;  - _$Job$_.Cancel - Фоновое задание. Отмена;  - _$Job$_.Fail - Фоновое задание. Ошибка выполнения;  - _$Job$_.Start - Фоновое задание. Запуск;  - _$Job$_.Succeed - Фоновое задание. Успешное завершение;  - _$Job$_.Terminate - Фоновое задание. Принудительное завершение;  - _$OpenIDProvider$_.NegativeAssertion - Провайдер OpenID. Отклонено; записывается базой, выступающей в роли провайдера OpenID, при отправке отрицательного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию.  - _$OpenIDProvider$_.PositiveAssertion - Провайдер OpenID. Подтверждено; записывается базой, выступающей в роли провайдера OpenID, при отправке положительного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию;  - _$PerformError$_ - Ошибка выполнения;  - _$Session$_.Authentication - Сеанс. Аутентификация; выполняется только при удачной аутентификации. Для события Аутентификация записываются поля Пользователь и ИмяПользователя. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - КодДополненияИмениПользователя (UserNameAdditionCode)- Строка. Код дополнения имения пользователя. При наличии дополнения имени пользователя при вводе имени пользователя в процессе аутентификации.  - В случае аутентификации при помощи OpenID поле Данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID;  - ИдентификаторПользователяПровайдераOpenID (OpenIDProviderUserID) - идентификатор пользователя на провайдере.  - _$Session$_.AuthenticationError - Сеанс. Ошибка аутентификации; выполняется только при ошибке аутентификации. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - В случае аутентификации при помощи OpenID поле данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID  - _$Session$_.AuthenticationFirstFactor - Сеанс. Аутентификация первый фактор; Записывается только если у пользователя включена двухфакторная аутентифкация. Для события Аутентификация первый фактор поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - _$Session$_.ConfigExtensionApplyError - Сеанс. Ошибка применения расширения конфигурации; записывается, если в процессе применений расширения произошла ошибка. Совпадает с текстом выводимого сообщения при невозможности подключить расширение. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения  - _$Session$_.Finish - Сеанс. Завершение;  - _$Session$_.Start - Сеанс. Начало;  - _$Transaction$_.Begin - Транзакция. Начало;  - _$Transaction$_.Commit - Транзакция. Фиксация;  - _$Transaction$_.Rollback - Транзакция. Отмена;  - _$User$_.AuthenticationLock - Пользователи. Блокировка аутентификации. Поле Данные заполняется структурой со следующим составом свойств:  - Имя (Name) – Строка. Имя пользователя, аутентификация которого блокируется. ;  - _$User$_.AuthenticationUnlock - Пользователи. Разблокировка аутентификации. Записывается при изменении блокировки аутентификации пользователя  (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структорой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  -   - _$User$_.AuthenticationUnlockError (_$User$_.AuthenticationUnlockError) - Пользователи. Ошибка разблокировки аутентификации; записываются при отказе в ручном изменении блокировки аутентификации пользователя (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  - _$User$_.Delete - Пользователи. Удаление; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя  - _$User$_.DeleteError - Пользователи. Ошибка удаления; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Delete (при возможности вывода этих данных);  - _$User$_.New - Пользователи. Добавление; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево.  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево.  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык.  - _$User$_.NewError - Пользователи. Ошибка добавления; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.New (при возможности вывода этих данных);  - _$User$_.Update - Пользователи. Изменение; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево;  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево;  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык;  - _$User$_.UpdateError - Пользователи. Ошибка изменения; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Update (при возможности вывода этих данных);   - Метаданные (Metadata - объект описания метаданного или их массив; значение по умолчанию Неопределено;  - Данные (Data) - значение, тип значения – ссылка на объект (СправочикСсылка и т.д.); значение по умолчанию Неопределено;  - ПредставлениеДанных (DataPresentation) - Строка;  - Комментарий (Comment) - Строка;  - СтатусТранзакции (TransactionStatus) - перечисление или массив перечислений; значение по умолчанию Неопределено;  - Транзакция (TransactionID) - идентификатор транзакции; Строка;  - Сеанс (Session) - номер сеанса пользователя. Число или массив чисел; значение по умолчанию Неопределено;  - РабочийСервер (ServerName) - Строка или массив строк; значение по умолчанию Неопределено;  - ОсновнойIPПорт (Port) - номер основного IP-порта рабочего процесса; Число или массив чисел; значение по умолчанию Неопределено;  - ВспомогательныйIPПорт (SyncPort) - номер вспомогательного IP-порта рабочего процесса. Число или массив чисел; значение по умолчанию Неопределено.  - РазделениеДанныхСеанса (SessionDataSeparation) - Структура, имена элементов которой соответствуют именам общих реквизитов. В процессе отбора элементы структуры РазделениеДанныхСеанса объединяются по И: запись журнала попадает в выборку, если в ней есть соответствия для всех общих реквизитов, заданных в фильтре. Значение по умолчанию Неопределено.  - Значение элемента структуры, в свою очередь, может быть:   - структурой, задающей единичное значение. Элементы структуры:   - Значение (Value) - значение общего реквизита. Значение по умолчанию - Неопределено;  - Использование (Use) - Булево. Значение по умолчанию - Истина. Задает использование общего реквизита, разделяющего данные. Если Ложь - элемент Значение игнорируется и может быть опущен. Таким образом можно отбирать записи журнала, в которых данный общий реквизит не установлен.   - массивом, который задает набор допустимых значений общего реквизита, разделяющего данные. Массив содержит структуры, каждая из которых задает единичное значение общего реквизита (как описано выше). Элементы массива учитываются по ИЛИ: запись журнала попадает в выборку, если значение общего реквизита в ней равно одному из заданных в массиве."
                }
            }
        }
    },
    {
        "name": "ОчиститьНастройкиПользователя",
        "name_en": "ClearUserSettings",
        "description": "Очищает настройки пользователя, принадлежащие информационной базе и конкретному пользователю в ней.",
        "signature": {
            "ПоПользователюИнформационнойБазы": {
                "СтрокаПараметров": "(ПользовательИБ: ПользовательИнформационнойБазы)",
                "Параметры": {
                    "ПользовательИБ": "Пользователь информационной базы, для которого выполняется очистка настроек."
                }
            },
            "ПоИмени": {
                "СтрокаПараметров": "(ИмяПользователяИБ: Строка)",
                "Параметры": {
                    "ИмяПользователяИБ": "Имя пользователя информационной базы."
                }
            }
        }
    },
    {
        "name": "ОчиститьСообщения",
        "name_en": "ClearMessages",
        "description": "Очищает окно сообщений."
    },
    {
        "name": "ПараметрыДоступа",
        "name_en": "AccessParameters",
        "description": "Позволяет получить права текущего пользователя на заданный объект метаданных для проверки наличия ограничения прав доступа с учетом указанных полей.",
        "returns": "Тип: ПараметрыДоступа. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(НаименованиеПрава: Строка, ОбъектМетаданных: Произвольный, СписокПолей: Строка, Пользователь_Роль?: ПользовательИнформационнойБазы): ПараметрыДоступа",
                "Параметры": {
                    "НаименованиеПрава": "Наименование запрашиваемого на объект права, например \"Read\".",
                    "ОбъектМетаданных": "Объект метаданных, права на доступ к которому проверяются.  Могут быть указаны только следующие объекты метаданных:  - ОбъектМетаданных: ПланОбмена;  - ОбъектМетаданных: Константа (для режима совместимости Версия8_2_13 и ниже);  - ОбъектМетаданных: Справочник;  - ОбъектМетаданных: Документ;  - ОбъектМетаданных: ЖурналДокументов;  - ОбъектМетаданных: Последовательность;  - ОбъектМетаданных: ПланВидовХарактеристик;  - ОбъектМетаданных: ПланСчетов;  - ОбъектМетаданных: ПланВидовРасчета;  - ОбъектМетаданных: РегистрСведений;  - ОбъектМетаданных: РегистрНакопления;  - ОбъектМетаданных: РегистрБухгалтерии;  - ОбъектМетаданных: РегистрРасчета;  - ОбъектМетаданных: Перерасчет;  - ОбъектМетаданных: БизнесПроцесс;  - ОбъектМетаданных: Задача;  - ОбъектМетаданных: ВнешнийИсточникДанных.",
                    "СписокПолей": "Список полей объекта базы данных, права на доступ к которым проверяются. Поля указываются списком, через запятую. Могут присутствовать имена табличных частей, реквизитов табличных частей, в последнем случае поле описывается как <Имя табличной части>.<Имя реквизита табличной части>.",
                    "Пользователь_Роль": "Указывает пользователя или роль, для которых нужно определить доступность права. При этом возвращается значение права так, как оно определено в конфигурации."
                }
            }
        }
    },
    {
        "name": "ПерейтиПоНавигационнойСсылке",
        "name_en": "GotoURL",
        "description": "Выполняет переход по ссылке так, как если бы пользователь выполнил интерактивную вспомогательную команду \"Перейти по ссылке ...\".  - для неконтекстных обсуждений активизируется основная форма системы взаимодействия и соответствующее обсуждение становится текущим,  - для контекстных обсуждений открывается форма объекта контекста. Возможен переход по внешней ссылке. Для внешней ссылки, которая содержит сигнатуру \"e1cib\" выполняются следующие действия:  - Если начало ссылки совпадает с навигационной ссылкой информационной базы текущего сеанса, то выполняется переход по локальной ссылке;  - Если начало ссылки не совпадает с навигационной ссылкой информационной базы, то осуществляется поиск запущенного клиента, подключенного к базе, адрес которой соответствует ссылке. Если такой клиент найден, окно его приложения активизируется и в нем выполняется переход по ссылке.  - Если соответствующего запущенного экземпляра тонкого клиента нет, то выполняется попытка запуска нового экземляра тонкого клиента с соответствующей строкой соединения и в нем выполняется переход. Если выполняется переход по ссылке вида \"http(s)\" на объект в другой информационной базе, то:  - Выполняется попытка найти запущенный экземпляр тонкого клиента, работающего с соответствующей информационной базой.  - Если запущенного экземпляра тонкого клиента нет, или в нем открыт модальный диалог, выполняется попытка запуска нового экземпляра тонкого клиента с соответствующей строкой соединения.  - Если попытка запуска не успешна (например, тонкий клиент не установлен), переданная ссылка обрабатывается операционной системой. Если внешняя ссылка не является навигационной ссылкой информационной базы (например, ссылки на сайты или файлы на диске), то в тонком клиенте данная ссылка выполняется как команда операционной системы. Ссылка открывается ассоциированной с данным типом ссылки программой. Если ссылка указывает на текстовый документ, табличный документ и т.п., в тонком клиенте документ будет открыт в клиентском приложении.В веб-клиенте отрабатывают только http-ссылки, которые открываются в том же браузере в отдельном окне.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(НавигационнаяСсылка: Строка)",
                "Параметры": {
                    "НавигационнаяСсылка": "Навигационная ссылка."
                }
            }
        }
    },
    {
        "name": "ПереместитьФайл",
        "name_en": "MoveFile",
        "description": "Выполняет перемещение (переименование) указанного файла.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайлаИсточника: Строка, ИмяФайлаПриемника: Строка)",
                "Параметры": {
                    "ИмяФайлаИсточника": "Полное имя файла-источника (полное исходное имя файла).",
                    "ИмяФайлаПриемника": "Полное имя файла-приемника (полное новое имя файла)."
                }
            }
        }
    },
    {
        "name": "ПобитовоеИ",
        "name_en": "BitwiseAnd",
        "description": "Возвращает результат логической побитовой операции И для заданной пары чисел.",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число1: Число, Число2: Число): Число",
                "Параметры": {
                    "Число1": "Первый операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Число2": "Второй операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПобитовоеИли",
        "name_en": "BitwiseOr",
        "description": "Возвращает результат логической побитовой операции ИЛИ для заданной пары чисел.",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число1: Число, Число2: Число): Число",
                "Параметры": {
                    "Число1": "Первый операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Число2": "Второй операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПобитовоеИНе",
        "name_en": "BitwiseAndNot",
        "description": "Возвращает результат логической побитовой операции И НЕ для заданной пары чисел. Эквивалентно вызову",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число1: Число, Число2: Число): Число",
                "Параметры": {
                    "Число1": "Первый операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Число2": "Второй операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПобитовоеИсключительноеИли",
        "name_en": "BitwiseXor",
        "description": "Возвращает результат логической побитовой операции ИСКЛЮЧИТЕЛЬНОЕ ИЛИ (XOR) для заданной пары чисел.",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число1: Число, Число2: Число): Число",
                "Параметры": {
                    "Число1": "Первый операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Число2": "Второй операнд побитовой операции.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПобитовоеНе",
        "name_en": "BitwiseNot",
        "description": "Возвращает результат логического побитового отрицания для заданного числа.",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Число, для которого требуется выполнить логическое побитовое отрицание. Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПобитовыйСдвигВлево",
        "name_en": "BitwiseShiftLeft",
        "description": "Выполняет побитовый сдвиг двоичного представления числа на заданное количество битов влево.",
        "returns": "Тип: Число. Итоговое число после сдвига.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, Смещение: Число): Число",
                "Параметры": {
                    "Число": "Число, для которого требуется выполнить сдвиг.  Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Смещение": "Количество битов, на которое требуется выполнить сдвиг. Значение должно быть целым числом в диапазоне от 0 до 31. Если число не целое или не укладывается в данный диапазон, будет сгенерировано исключение."
                }
            }
        }
    },
    {
        "name": "ПобитовыйСдвигВправо",
        "name_en": "BitwiseShiftRight",
        "description": "Выполняет побитовый сдвиг двоичного представления числа на заданное количество битов вправо.",
        "returns": "Тип: Число. Итоговое число после сдвига.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, Смещение: Число): Число",
                "Параметры": {
                    "Число": "Число, для которого требуется выполнить сдвиг. Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Смещение": "Количество битов, на которое требуется выполнить сдвиг. Значение должно быть целым числом в диапазоне от 0 до 31. Если число не целое или не укладывается в данный диапазон, будет сгенерировано исключение."
                }
            }
        }
    },
    {
        "name": "ПоддерживаетсяДинамическаяУстановкаВнешнихКомпонент",
        "name_en": "DynamicAddInInstallationSupported",
        "description": "Определяет, поддерживается ли динамическая установка внешних компонент.",
        "returns": "Тип: Булево. Истина - если в собранном приложении мобильного клиента есть возможность использовать динамические установленные внешние компоненты с сервера. Для тонкого клиента, веб-клиента и толстого клиента всегда возвращает Истина."
    },
    {
        "name": "ПоддерживаетсяОтображениеКарты",
        "name_en": "MapRepresentationSupported",
        "description": "Проверяет возможность работы с картой.",
        "returns": "Тип: Булево. - Истина - в ОС Android, iOS, Windows Phone, Windows 10,  - Ложь - Windows 8 (для планшетов)."
    },
    {
        "name": "ПодключитьВнешнююКомпоненту",
        "name_en": "AttachAddIn",
        "description": "Подключает внешний компонент к 1С:Предприятию.",
        "returns": "Тип: Булево. Истина - подключение прошло успешно.",
        "signature": {
            "ПоИмениИМестоположению": {
                "СтрокаПараметров": "(Местоположение: Строка, Имя: Строка, Тип?: ТипВнешнейКомпоненты): Булево",
                "Параметры": {
                    "Местоположение": "Местоположение внешнего компонента. В качестве местоположения может использоваться:  - путь к файлу внешнего компонента в файловой системе (недоступно на веб-клиенте), не ZIP-архив;  - полное имя макета, хранящего двоичные данные или ZIP-архив;  - URL к внешнему компоненту, в виде двоичных данных или ZIP-архива, в формате, аналогичном ПолучитьНавигационнуюСсылку.",
                    "Имя": "Символическое имя подключаемой внешнего компонента. Имя должно удовлетворять правилам именования встроенного языка.",
                    "Тип": "Тип подключаемого внешнего компонента. Не используется, если компонент упакован в ZIP-архив."
                }
            },
            "ПоИдентификатору": {
                "СтрокаПараметров": "(ИдентификаторОбъекта: Строка): Булево",
                "Параметры": {
                    "ИдентификаторОбъекта": "Идентификатор объекта внешнего компонента в виде ProgID (Programmatic Identifier) реестра MS Windows (например: \"AddIn.Scanner\"). Должно соответствовать информации, находящейся в регистрационной базе данных системы (Registry)."
                }
            }
        }
    },
    {
        "name": "ПодключитьОбработчикЗапросаНастроекКлиентаЛицензирования",
        "name_en": "AttachLicensingClientParametersRequestHandler",
        "description": "Подключает вызов указанной процедуры глобального модуля, доступного на клиенте, или модуля приложения (обычного или управляемого), которая будет вызываться, если ответ центра лицензирования указывает на необходимость установить параметры клиента лицензирования.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПроцедуры: Строка)",
                "Параметры": {
                    "ИмяПроцедуры": "Имя экспортируемой процедуры модуля приложения (обычного или управляемого) или глобального общего модуля. Процедура должна располагаться на клиенте. Процедура не должна содержать параметров."
                }
            }
        }
    },
    {
        "name": "ПодключитьОбработчикОжидания",
        "name_en": "AttachIdleHandler",
        "description": "Подключает вызов указанной процедуры модуля приложения (модуля обычного приложения) или глобального общего модуля через определенный интервал времени. Вызов будет осуществляться только в \"состоянии покоя\", то есть в тот момент, когда программа не выполняет никаких действий.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПроцедуры: Строка, Интервал: Число, Однократно?: Булево)",
                "Параметры": {
                    "ИмяПроцедуры": "Имя экспортируемой процедуры модуля приложения (модуля обычного приложения) или глобального общего модуля. Процедура должна располагаться на клиенте. Процедура не должна содержать параметров.",
                    "Интервал": "Интервал времени в секундах с точностью до 1/10 секунды, через который будет осуществляться вызов процедуры (положительное число). Если указано значение меньше 1, то значение третьего параметра должно быть равно Истина. Внимание! Не следует использовать данный обработчик в качестве таймера. Фактический интервал срабатывания может отличаться от указанного.",
                    "Однократно": "Признак однократного выполнения обработчика ожидания. Истина - указанный обработчик ожидания будет выполнен один раз. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ПодключитьОбработчикОповещения",
        "name_en": "AttachNotificationHandler",
        "description": "Подключает вызов указанной экспортируемой процедуры модуля приложения (модуля обычного приложения) или глобального общего модуля для обработки оповещения при вызове метода",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПроцедуры: Строка)",
                "Параметры": {
                    "ИмяПроцедуры": "Имя экспортируемой процедуры модуля приложения (модуля обычного приложения) или общего глобального модуля. Процедура должна располагаться на клиенте. Процедура не должна содержать параметров."
                }
            }
        }
    },
    {
        "name": "ПодключитьРасширениеРаботыСКриптографией",
        "name_en": "AttachCryptoExtension",
        "description": "При первом обращении выполняет подключение расширения для работы с криптографией.",
        "returns": "Тип: Булево. В случае успешного подключения возвращает Истина, иначе - Ложь. Для тонкого и толстого клиентов, а также для клиента мобильного приложения результат всегда Истина."
    },
    {
        "name": "ПодключитьРасширениеРаботыСФайлами",
        "name_en": "AttachFileSystemExtension",
        "description": "При первом обращении выполняет подключение расширения для работы с файлами.",
        "returns": "Тип: Булево. В тонком клиенте результат всегда Истина. Для режима запуска \"Мобильное приложение (клиент)\" результат всегда Истина."
    },
    {
        "name": "ПодробноеПредставлениеОшибки",
        "name_en": "DetailErrorDescription",
        "description": "Возвращает строку, аналогичную той, что показывается в стандартном диалоге платформы \"1С:Предприятие\", вызываемом при нажатии кнопки \"Подробно\" из сообщения об ошибке.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИнформацияОбОшибке: ИнформацияОбОшибке): Строка",
                "Параметры": {
                    "ИнформацияОбОшибке": "Содержит информацию об ошибке."
                }
            }
        }
    },
    {
        "name": "ПоказатьВводДаты",
        "name_en": "ShowInputDate",
        "description": "Открывает окно для ввода даты, но при этом не ожидает завершения ввода.",
        "returns": "Тип: Произвольный. Истина - дата введена; Ложь - пользователь отказался от ввода даты.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении: ОписаниеОповещения, Дата?: Дата, Подсказка?: Строка, ЧастьДаты?: ЧастиДаты): Произвольный",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна ввода даты со следующими параметрами:  - <Дата> - выбранное значение даты или Неопределено, если пользователь отказался от ввода,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Дата": "Начальное значение даты, отображаемое в окне ввода. Значение по умолчанию: Неопределено.",
                    "Подсказка": "Текст заголовка окна диалога ввода даты. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "ЧастьДаты": "Вводимая в диалоге часть (или части) даты. Значение по умолчанию: ДатаВремя."
                }
            }
        }
    },
    {
        "name": "ПоказатьВводЗначения",
        "name_en": "ShowInputValue",
        "description": "Показывает окно для ввода значения заданного типа.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении: ОписаниеОповещения, Значение: Произвольный, Подсказка?: Строка, Тип?: Тип)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна ввода значения со следующими параметрами:  - <Значение> - выбранное значение или Неопределено, если пользователь отказался от ввода,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Значение": "Значение, которое будет использовано в качестве начального значения в диалоге.  Если параметр <Тип> не задан или имеет значение Неопределено, тип данного значения используется в качестве типа вводимого в окне данного.",
                    "Подсказка": "Текст заголовка окна ввода значения. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "Тип": "Тип вводимого значения. Если параметр не указан, используется тип параметра <Значение>."
                }
            }
        }
    },
    {
        "name": "ПоказатьВводСтроки",
        "name_en": "ShowInputString",
        "description": "Вызывает диалог для ввода строки, при этом не ожидает завершения ввода.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении: ОписаниеОповещения, Строка?: Строка, Подсказка?: Строка, Длина?: Число, Многострочность?: Булево)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна ввода строки со следующими параметрами:  - <Строка> - введенное значение строки или Неопределено, если пользователь отказался от ввода,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Строка": "Начальное значение строки, которое будет использовано в качестве начального значения в окне ввода.",
                    "Подсказка": "Текст заголовка окна диалога ввода строки. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "Длина": "Длина вводимой строки. Если параметр не указан, то строка неограниченной длины. Значение по умолчанию: 0.",
                    "Многострочность": "Определяет режим ввода многострочного текста: Истина - ввод многострочного текста с разделителями строк; Ложь - ввод простой строки. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ПоказатьВводЧисла",
        "name_en": "ShowInputNumber",
        "description": "Вызывает диалог для ввода строки, при этом не ожидает завершения ввода.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении: ОписаниеОповещения, Число: Число, Подсказка?: Строка, Длина?: Число, Точность?: Число)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна ввода числа со следующими параметрами:  - <Число> - введенное значение числа или Неопределено, если пользователь отказался от ввода,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "Число": "Значение числа, которое будет использовано в качестве начального значения в диалоге.",
                    "Подсказка": "Текст заголовка окна диалога ввода числа. Может использоваться в качестве подсказки пользователю. Значение по умолчанию: Пустая строка.",
                    "Длина": "Длина вводимого числа включая дробную часть (символы разделителей не учитываются). Значение по умолчанию: 0.",
                    "Точность": "Количество знаков в дробной части вводимого числа. Значение по умолчанию: 0."
                }
            }
        }
    },
    {
        "name": "ПоказатьВопрос",
        "name_en": "ShowQueryBox",
        "description": "Выводит на экран окно вопроса, при этом не ожидается завершения ответа пользователя.",
        "returns": "Тип: Произвольный. Результат выбора пользователя будет передан в метод, описанный параметром <ОписаниеОповещенияОЗавершении>.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении: ОписаниеОповещения, ТекстВопроса: Строка, Кнопки: РежимДиалогаВопрос, Таймаут?: Число, КнопкаПоУмолчанию?: Произвольный, Заголовок?: Строка, КнопкаТаймаута?: Произвольный): Произвольный",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна ввода значения со следующими параметрами:  - <РезультатВопроса> - результат выбора пользователя: значение системного перечисления или значение, связанное с нажатой кнопкой. В случае закрытия диалога по истечении времени - значение Таймаут,  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения.",
                    "ТекстВопроса": "Текст задаваемого вопроса.",
                    "Кнопки": "Задает состав и текст кнопок диалога, а также, связанные с кнопками значения. При использовании типа СписокЗначений:  - Значение – содержит значение, связанное с кнопкой. Это значение является возвращаемым значением при выборе кнопки. В качестве значения может использоваться значение перечисления КодВозвратаДиалога, а также другие значения;  - Представление – задает текст кнопки. Если представление не задано и в качестве значения используется значение перечисления КодВозвратаДиалога, то используется стандартное представление;  - Картинка – не используется (должна быть пустой);  - Пометка – не используется (должна быть пустой). При использовании типа СписокЗначений список не должен быть пустым.",
                    "Таймаут": "Интервал времени в секундах, в течение которого система будет ожидать ответа пользователя. По истечении интервала окно вопроса будет закрыто. Если параметр не указан, то время ожидания не ограничено. Если параметр имеет отрицательное значение, будет сгенерировано исключение. Значение по умолчанию: 0.",
                    "КнопкаПоУмолчанию": "Определяет кнопку по умолчанию по типу кнопки или по связанному с ней значению.",
                    "Заголовок": "Содержит заголовок окна вопроса. Если не установлен, то у диалога заголовок не отображается.",
                    "КнопкаТаймаута": "Определяет кнопку (по типу кнопки или по связанному с ней значению), на которой отображается количество секунд, оставшихся до истечения таймаута."
                }
            }
        }
    },
    {
        "name": "ПоказатьЗначение",
        "name_en": "ShowValue",
        "description": "Показывает в диалоге переданное значение, при этом не ожидается его закрытие. Вид диалога зависит от типа переданного значения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, Значение: Произвольный)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна ввода значения с параметром <ДополнительныеПараметры>, который содержит значение, указанное при создании объекта ОписаниеОповещения. Если параметр не указан, то по завершении никакая процедура вызвана не будет.",
                    "Значение": "Значение любого типа, который может быть показан системой в диалоге."
                }
            }
        }
    },
    {
        "name": "ПоказатьИнформациюОбОшибке",
        "name_en": "ShowErrorInfo",
        "description": "Предназначен для показа информации об ошибке пользователю в стандартном диалоге платформы \"1С:Предприятие\".",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИнформацияОбОшибке: ИнформацияОбОшибке)",
                "Параметры": {
                    "ИнформацияОбОшибке": "Информация об ошибке, которую надо показать пользователю."
                }
            }
        }
    },
    {
        "name": "ПоказатьНаКарте",
        "name_en": "ShowOnMap",
        "description": "Отображает на карте переданные координаты.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Местоположение: ГеографическиеКоординаты)",
                "Параметры": {
                    "Местоположение": "Местоположение, которое нужно показать. Для отображения нескольких точек используется СписокЗначений, в котором значение элемента списка - это географическая координата, а представление - текст, отображаемый в точке (на булавке)."
                }
            }
        }
    },
    {
        "name": "ПоказатьОповещениеПользователя",
        "name_en": "ShowUserNotification",
        "description": "Показывает окно оповещения, в котором может располагаться текст с пояснением, картинка.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Текст?: Строка, ДействиеПриНажатии?: Строка, Пояснение?: Строка, Картинка?: Картинка, СтатусОповещенияПользователя?: СтатусОповещенияПользователя, КлючУникальности?: Строка)",
                "Параметры": {
                    "Текст": "Текст оповещения.",
                    "ДействиеПриНажатии": "Если тип Строка, то она содержит навигационную ссылку, по которой будет выполнен переход при нажатии на окно оповещения. После перехода окно оповещения будет закрыто. Если тип ОписаниеОповещения, то содержит описание процедуры, которая будет вызвана при нажатии на окно оповещения c параметрами:  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. После вызова процедуры окно оповещения будет закрыто. При использовании этого параметра рекомендуется установить текст, содержащий указание на необходимость реакции пользователя на оповещение.",
                    "Пояснение": "Пояснение оповещения.",
                    "Картинка": "Картинка, которая будет показана в оповещении.",
                    "СтатусОповещенияПользователя": "Параметр определяет важность оповещения пользователя. Статус устанавливается в зависимости от критичности информации для пользователя. В режимах интерфейса, отличных от Такси, данный параметр игнорируется. Значение по умолчанию: Информация.",
                    "КлючУникальности": "Ключ уникальности оповещения. Если ключ задан и существует открытое оповещение с таким же ключом, то оно будет заменено на новое. Если параметр не указан или имеет тип Неопределено, то оповещение считается уникальным. В режимах интерфейса, отличных от Такси, этот параметр игнорируется. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "ПоказатьПредупреждение",
        "name_en": "ShowMessageBox",
        "description": "Выводит на экран окно предупреждения, но не ожидает его закрытия.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОписаниеОповещенияОЗавершении?: ОписаниеОповещения, ТекстПредупреждения: Строка, Таймаут?: Число, Заголовок?: Строка)",
                "Параметры": {
                    "ОписаниеОповещенияОЗавершении": "Содержит описание процедуры, которая будет вызвана после закрытия окна предупреждения со следующими параметрами:  - <ДополнительныеПараметры> - значение, которое было указано при создании объекта ОписаниеОповещения. Если параметр не указан, то по завершении никакая процедура вызвана не будет.",
                    "ТекстПредупреждения": "Текст предупреждения.",
                    "Таймаут": "Интервал времени в секундах, в течение которого система будет ожидать ответа пользователя. По истечении интервала окно предупреждения будет закрыто. Если параметр не указан, то время ожидания не ограничено. Если параметр имеет отрицательное значение, будет сгенерировано исключение. Значение по умолчанию: 0.",
                    "Заголовок": "Содержит заголовок окна предупреждения. Если не установлен, то у диалога заголовок не отображается."
                }
            }
        }
    },
    {
        "name": "ПолноеИмяПользователя",
        "name_en": "UserFullName",
        "description": "Получает полное имя пользователя, указанного при запуске программы.",
        "returns": "Тип: Строка. Полное имя пользователя."
    },
    {
        "name": "ПолучитьBase64БуферДвоичныхДанныхИзБуфераДвоичныхДанных",
        "name_en": "GetBase64BinaryDataBufferFromBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных в формат Base64.",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): БуферДвоичныхДанных",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных."
                }
            }
        }
    },
    {
        "name": "ПолучитьBase64ДвоичныеДанныеИзДвоичныхДанных",
        "name_en": "GetBase64BinaryDataFromBinaryData",
        "description": "Преобразует двоичные данные в формат Base64.",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): ДвоичныеДанные",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные."
                }
            }
        }
    },
    {
        "name": "ПолучитьBase64СтрокуИзБуфераДвоичныхДанных",
        "name_en": "GetBase64StringFromBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных в строку формата Base64.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): Строка",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных."
                }
            }
        }
    },
    {
        "name": "ПолучитьBase64СтрокуИзДвоичныхДанных",
        "name_en": "GetBase64StringFromBinaryData",
        "description": "Преобразует двоичные данные в строку формата Base64.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): Строка",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные."
                }
            }
        }
    },
    {
        "name": "ПолучитьCOMОбъект",
        "name_en": "GetCOMObject",
        "description": "Основное применение функции ПолучитьCOMОбъект - это получение COM-объекта, соответствующего файлу. Для этого следует в качестве первого параметра функции задать имя файла, который будет определять COM-объект. Например, фрагмент кода:",
        "returns": "Тип: COMОбъект. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайла?: Строка, ИмяКлассаCOM?: Строка): COMОбъект",
                "Параметры": {
                    "ИмяФайла": "Имя файла, включающее полный путь.",
                    "ИмяКлассаCOM": "Имя класса COM, экземпляр которого должен быть создан или получен. Если расширение имени файла, указанное в первом параметре, полностью идентифицирует класс объекта, то параметр может быть опущен."
                }
            }
        }
    },
    {
        "name": "ПолучитьHexБуферДвоичныхДанныхИзБуфераДвоичныхДанных",
        "name_en": "GetHexBinaryDataBufferFromBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных в формат Base 16 (Hex).",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): БуферДвоичныхДанных",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных."
                }
            }
        }
    },
    {
        "name": "ПолучитьHexДвоичныеДанныеИзДвоичныхДанных",
        "name_en": "GetHexBinaryDataFromBinaryData",
        "description": "Преобразует двоичные данные в формат Base 16 (Hex).",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): ДвоичныеДанные",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные."
                }
            }
        }
    },
    {
        "name": "ПолучитьHexСтрокуИзБуфераДвоичныхДанных",
        "name_en": "GetHexStringFromBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных в строку формата Base 16 (Hex).",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): Строка",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных."
                }
            }
        }
    },
    {
        "name": "ПолучитьHexСтрокуИзДвоичныхДанных",
        "name_en": "GetHexStringFromBinaryData",
        "description": "Преобразует двоичные данные в строку формата Base 16 (Hex).",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): Строка",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные."
                }
            }
        }
    },
    {
        "name": "ПолучитьXMLТип",
        "name_en": "GetXMLType",
        "description": "Получает тип данных XML, который может быть прочитан в настоящий момент из объекта типа   - значение разделяется на префикс пространства имен и локальное имя;  - по префиксу пространства имен в объекте ЧтениеXML определяется URI пространства имен, соответствующее данному префиксу (если соответствующего URI пространства имен не обнаружено - считается, что тип не определен);  - по полученному локальному имени и URI пространства имен создается значение типа данных XML. 5) Если атрибут \"type\" не существует, производится анализ имени элемента. Если локальное имя элемента совпадает с одним из имен типов пространства имен \"http://www.w3.org/2001/XMLSchema\" и пространство имен элемента не определено (пустая строка), то считается, что тип принадлежит пространству имен \"http://www.w3.org/2001/XMLSchema\".",
        "returns": "Тип: ТипДанныхXML, Неопределено. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧтениеXML: ЧтениеXML): ТипДанныхXML",
                "Параметры": {
                    "ЧтениеXML": "Объект, из которого выполняется чтение."
                }
            }
        }
    },
    {
        "name": "ПолучитьАдресПоМестоположению",
        "name_en": "GetAddressByLocation",
        "description": "Получает адрес по географическим координатам.",
        "returns": "Тип: ДанныеАдреса, Неопределено. Адрес местоположения. Его состав может различаться в разных государствах. Для России определены поля:  - Страна (Country);  - Регион (State);  - Город (City);  - Улица (Street);  - Дом (House);  - Индекс (ZipCode). Неопределено - адрес не получен.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Местоположение: ГеографическиеКоординаты): ДанныеАдреса",
                "Параметры": {
                    "Местоположение": "Местоположение, адрес которого нужно получить."
                }
            }
        }
    },
    {
        "name": "ПолучитьБлокировкуСеансов",
        "name_en": "GetSessionsLock",
        "description": "Получает объект, описывающий блокировку сеансов.",
        "returns": "Тип: БлокировкаСеансов. "
    },
    {
        "name": "ПолучитьБуферДвоичныхДанныхИзBase64БуфераДвоичныхДанных",
        "name_en": "GetBinaryDataBufferFromBase64BinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных из формата Base64 в",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): БуферДвоичныхДанных",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных."
                }
            }
        }
    },
    {
        "name": "ПолучитьБуферДвоичныхДанныхИзBase64Строки",
        "name_en": "GetBinaryDataBufferFromBase64String",
        "description": "Преобразует строку формата Base64 в буфер двоичных данных.",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): БуферДвоичныхДанных",
                "Параметры": {
                    "Строка": "Строка в формате Base64."
                }
            }
        }
    },
    {
        "name": "ПолучитьБуферДвоичныхДанныхИзHexБуфераДвоичныхДанных",
        "name_en": "GetBinaryDataBufferFromHexBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных из формата Base 16 (Hex) в",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): БуферДвоичныхДанных",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных в формате Base 16 (Hex)."
                }
            }
        }
    },
    {
        "name": "ПолучитьБуферДвоичныхДанныхИзHexСтроки",
        "name_en": "GetBinaryDataBufferFromHexString",
        "description": "Преобразует строку в формате Base 16 (Hex) в буфер двоичных данных.",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): БуферДвоичныхДанных",
                "Параметры": {
                    "Строка": "Строка в формате Base 16 (Hex)."
                }
            }
        }
    },
    {
        "name": "ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных",
        "name_en": "GetBinaryDataBufferFromBinaryData",
        "description": "Преобразует двоичные данные в буфер двоичных данных.",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): БуферДвоичныхДанных",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные."
                }
            }
        }
    },
    {
        "name": "ПолучитьБуферДвоичныхДанныхИзСтроки",
        "name_en": "GetBinaryDataBufferFromString",
        "description": "Преобразует строку в буфер двоичных данных.",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, КодировкаТекста?: КодировкаТекста, ЗаписатьBOM?: Булево): БуферДвоичныхДанных",
                "Параметры": {
                    "Строка": "Строка, которую требуется преобразовать в буфер двоичных данных.",
                    "КодировкаТекста": "Кодировка текста может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки. Поддерживаемые названия кодировок:  - UTF-8  - UTF-16  - UTF-16BE  - UTF-16LE  - UTF-32  - UTF-32BE  - UTF-32LE  - UTF16_PlatformEndian  - UTF16_OppositeEndian  - UTF32_PlatformEndian  - UTF32_OppositeEndian  - UTF-7  - IMAP-mailbox-name  - SCSU  - BOCU-1  - CESU-8  - ISO-8859-1  - US-ASCII  - gb18030  - IBM367  - iso-8859-2  - iso-8859-3  - iso-8859-4  - iso-8859-5  - iso-8859-6  - iso-8859-7  - iso-8859-8  - iso-8859-9  - iso-8859-13  - iso-8859-15  - cp932  - Shift_JIS  - EUC-JP  - cp33722  - windows-950  - Big5  - cp950  - Big5-HKSCS  - cp1386  - GBK  - GB2312  - GB_2312-80  - cp964  - cp949  - cp949c  - EUC-KR  - ibm-971  - KSC_5601  - ibm-1363  - windows-949  - windows-874  - cp874  - ibm-1162  - cp437  - cp737  - cp775  - cp850  - cp851  - cp852  - cp855  - cp856  - cp857  - cp858  - cp860  - cp861  - cp862  - cp863  - cp864  - cp865  - cp866  - ibm-867  - CP868  - cp869  - KOI8-R  - ibm-901  - ibm-902  - cp922  - KOI8-U  - ibm-4909  - windows-1250  - windows-1251  - windows-1252  - windows-1253  - windows-1254  - windows-1255  - windows-1256  - windows-1257  - windows-1258  - macintosh  - x-mac-greek  - x-mac-cyrillic  - x-mac-centraleurroman  - x-mac-turkish  - hp-roman8  - Adobe-Standard-Encoding  - cp1006  - cp1098  - cp1124  - cp1125  - ibm-1129  - cp1131  - ibm-1133  - ISO-2022-JP  - JIS_Encoding  - ISO-2022-JP-2  - ISO_2022,locale=ja,version=3  - ISO_2022,locale=ja,version=4  - ISO-2022-KR  - ISO_2022,locale=ko,version=1  - ISO-2022-CN  - ISO-2022-CN-EXT  - HZ-GB-2312  - windows-57002  - windows-57003  - windows-57011  - windows-57010  - windows-57007  - windows-57004  - windows-57005  - windows-57008  - windows-57009  - LMBCS-1  - LMBCS-2  - LMBCS-3  - LMBCS-4  - LMBCS-5  - LMBCS-6  - LMBCS-8  - LMBCS-11  - LMBCS-16  - LMBCS-17  - LMBCS-18  - LMBCS-19  - IBM037  - ebcdic-de  - ebcdic-dk  - IBM278  - IBM280  - IBM284  - IBM285  - IBM290  - IBM297  - IBM420  - IBM424  - IBM500  - ibm-803  - IBM-Thai  - IBM870  - IBM871  - cp875  - IBM918  - cp930  - cp933  - cp935  - cp937  - cp939  - cp1025  - IBM1026  - IBM1047  - cp1097  - cp1112  - cp1122  - cp1123  - ibm-1130  - ibm-1132  - ibm-1137  - IBM01140  - IBM01141  - IBM01142  - IBM01143  - IBM01144  - IBM01145  - IBM01146  - IBM01147  - IBM01148  - IBM01149  - ibm-1153  - ibm-1154  - ibm-1155  - ibm-1156  - ibm-1157  - ibm-1158  - ibm-1160  - ibm-1164  - ibm-1364  - ibm-1371  - ibm-1388  - ibm-1390  - ibm-1399  - ibm-5123  - ibm-8482  - ibm-16684  - ibm-4899  - ibm-4971  - ebcdic-he  - ebcdic-ar  - ibm-37_P100-1995,swaplfnl  - ibm-1047_P100-1995,swaplfnl  - ibm-1140_P100-1997,swaplfnl  - ibm-1142_P100-1997,swaplfnl  - ibm-1143_P100-1997,swaplfnl  - ibm-1144_P100-1997,swaplfnl  - ibm-1145_P100-1997,swaplfnl  - ibm-1146_P100-1997,swaplfnl  - ibm-1147_P100-1997,swaplfnl  - ibm-1148_P100-1997,swaplfnl  - ibm-1149_P100-1997,swaplfnl  - ibm-1153_P100-1999,swaplfnl  - ibm-12712_P100-1998,swaplfnl  - ibm-16804_X110-1999,swaplfnl  - ebcdic-xml-us  Значение по умолчанию: UTF8.",
                    "ЗаписатьBOM": "Определяет, будет ли добавлена метка порядка байт (BOM) кодировки текста в начало данных. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ПолучитьВремяЗавершенияСпящегоСеанса",
        "name_en": "GetHibernateSessionTerminateTime",
        "description": "Интервал времени в секундах, по истечении которого спящий сеанс завершается.",
        "returns": "Тип: Число. "
    },
    {
        "name": "ПолучитьВремяЗасыпанияПассивногоСеанса",
        "name_en": "GetPassiveSessionHibernateTime",
        "description": "Получить интервал времени в секундах, по завершении которого неактивный сеанс переводится в спящий режим.",
        "returns": "Тип: Число. "
    },
    {
        "name": "ПолучитьВремяОжиданияБлокировкиДанных",
        "name_en": "GetLockWaitTime",
        "description": "Получает заданное в информационной базе время ожидания блокировки данных (в секундах).",
        "returns": "Тип: Число. "
    },
    {
        "name": "ПолучитьДанныеВыбора",
        "name_en": "GetChoiceData",
        "description": "Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
        "returns": "Тип: СписокЗначений. ",
        "ref": "classes.СписокЗначений",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТипЗначения: Тип, Параметры: Структура): СписокЗначений",
                "Параметры": {
                    "ТипЗначения": "Объект метаданных, для которого выполняется формирование типа значений. Указывается в виде типа. Например: СправочникСсылка.Товары.",
                    "Параметры": "Содержит параметры для формирования списка значений. Структура, в которой обязательно должны содержаться следующие ключи:  - Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив, СписокЗначений, ФиксированныйМассив или иной тип, не являющийся коллекцией; для типов Массив, СписокЗначений, ФиксированныйМассив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  - СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  - ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов; тип ИспользованиеГруппИЭлементов; параметр может отсутствовать;  - СпособПоискаСтроки (StringSearchMode) - указывается способ поиска при вводе по строке; тип СпособПоискаСтрокиПриВводеПоСтроке; параметр может отсутствовать;  - ПолнотекстовыйПоиск (FullTextSearch) - указывается необходимость использования полнотекстового поиска при вводе по строке; тип - ПолнотекстовыйПоискПриВводеПоСтроке; параметр может отсутствовать."
                }
            }
        }
    },
    {
        "name": "ПолучитьДвоичныеДанныеИзBase64ДвоичныхДанных",
        "name_en": "GetBinaryDataFromBase64BinaryData",
        "description": "Преобразует двоичные данные из формата Base64 в",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): ДвоичныеДанные",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные, закодированные по методу Base64."
                }
            }
        }
    },
    {
        "name": "ПолучитьДвоичныеДанныеИзBase64Строки",
        "name_en": "GetBinaryDataFromBase64String",
        "description": "Преобразует строку формата Base64 в двоичные данные.",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): ДвоичныеДанные",
                "Параметры": {
                    "Строка": "Строка в формате Base64."
                }
            }
        }
    },
    {
        "name": "ПолучитьДвоичныеДанныеИзHexДвоичныхДанных",
        "name_en": "GetBinaryDataFromHexBinaryData",
        "description": "Преобразует двоичные данные из формата Base 16 (Hex) в",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные): ДвоичныеДанные",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные в формате Base 16 (Hex)."
                }
            }
        }
    },
    {
        "name": "ПолучитьДвоичныеДанныеИзHexСтроки",
        "name_en": "GetBinaryDataFromHexString",
        "description": "Преобразует строку в формате Base 16 (Hex) в двоичные данные.",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): ДвоичныеДанные",
                "Параметры": {
                    "Строка": "Строка в формате Base 16 (Hex)."
                }
            }
        }
    },
    {
        "name": "ПолучитьДвоичныеДанныеИзБуфераДвоичныхДанных",
        "name_en": "GetBinaryDataFromBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных в значение типа",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных): ДвоичныеДанные",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных."
                }
            }
        }
    },
    {
        "name": "ПолучитьДвоичныеДанныеИзСтроки",
        "name_en": "GetBinaryDataFromString",
        "description": "Преобразует строку в значение типа",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, КодировкаТекста?: КодировкаТекста, ЗаписатьBOM?: Булево): ДвоичныеДанные",
                "Параметры": {
                    "Строка": "Строка, которую требуется преобразовать в ДвоичныеДанные.",
                    "КодировкаТекста": "Кодировка текста может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки. Поддерживаемые названия кодировок:  - UTF-8  - UTF-16  - UTF-16BE  - UTF-16LE  - UTF-32  - UTF-32BE  - UTF-32LE  - UTF16_PlatformEndian  - UTF16_OppositeEndian  - UTF32_PlatformEndian  - UTF32_OppositeEndian  - UTF-7  - IMAP-mailbox-name  - SCSU  - BOCU-1  - CESU-8  - ISO-8859-1  - US-ASCII  - gb18030  - IBM367  - iso-8859-2  - iso-8859-3  - iso-8859-4  - iso-8859-5  - iso-8859-6  - iso-8859-7  - iso-8859-8  - iso-8859-9  - iso-8859-13  - iso-8859-15  - cp932  - Shift_JIS  - EUC-JP  - cp33722  - windows-950  - Big5  - cp950  - Big5-HKSCS  - cp1386  - GBK  - GB2312  - GB_2312-80  - cp964  - cp949  - cp949c  - EUC-KR  - ibm-971  - KSC_5601  - ibm-1363  - windows-949  - windows-874  - cp874  - ibm-1162  - cp437  - cp737  - cp775  - cp850  - cp851  - cp852  - cp855  - cp856  - cp857  - cp858  - cp860  - cp861  - cp862  - cp863  - cp864  - cp865  - cp866  - ibm-867  - CP868  - cp869  - KOI8-R  - ibm-901  - ibm-902  - cp922  - KOI8-U  - ibm-4909  - windows-1250  - windows-1251  - windows-1252  - windows-1253  - windows-1254  - windows-1255  - windows-1256  - windows-1257  - windows-1258  - macintosh  - x-mac-greek  - x-mac-cyrillic  - x-mac-centraleurroman  - x-mac-turkish  - hp-roman8  - Adobe-Standard-Encoding  - cp1006  - cp1098  - cp1124  - cp1125  - ibm-1129  - cp1131  - ibm-1133  - ISO-2022-JP  - JIS_Encoding  - ISO-2022-JP-2  - ISO_2022,locale=ja,version=3  - ISO_2022,locale=ja,version=4  - ISO-2022-KR  - ISO_2022,locale=ko,version=1  - ISO-2022-CN  - ISO-2022-CN-EXT  - HZ-GB-2312  - windows-57002  - windows-57003  - windows-57011  - windows-57010  - windows-57007  - windows-57004  - windows-57005  - windows-57008  - windows-57009  - LMBCS-1  - LMBCS-2  - LMBCS-3  - LMBCS-4  - LMBCS-5  - LMBCS-6  - LMBCS-8  - LMBCS-11  - LMBCS-16  - LMBCS-17  - LMBCS-18  - LMBCS-19  - IBM037  - ebcdic-de  - ebcdic-dk  - IBM278  - IBM280  - IBM284  - IBM285  - IBM290  - IBM297  - IBM420  - IBM424  - IBM500  - ibm-803  - IBM-Thai  - IBM870  - IBM871  - cp875  - IBM918  - cp930  - cp933  - cp935  - cp937  - cp939  - cp1025  - IBM1026  - IBM1047  - cp1097  - cp1112  - cp1122  - cp1123  - ibm-1130  - ibm-1132  - ibm-1137  - IBM01140  - IBM01141  - IBM01142  - IBM01143  - IBM01144  - IBM01145  - IBM01146  - IBM01147  - IBM01148  - IBM01149  - ibm-1153  - ibm-1154  - ibm-1155  - ibm-1156  - ibm-1157  - ibm-1158  - ibm-1160  - ibm-1164  - ibm-1364  - ibm-1371  - ibm-1388  - ibm-1390  - ibm-1399  - ibm-5123  - ibm-8482  - ibm-16684  - ibm-4899  - ibm-4971  - ebcdic-he  - ebcdic-ar  - ibm-37_P100-1995,swaplfnl  - ibm-1047_P100-1995,swaplfnl  - ibm-1140_P100-1997,swaplfnl  - ibm-1142_P100-1997,swaplfnl  - ibm-1143_P100-1997,swaplfnl  - ibm-1144_P100-1997,swaplfnl  - ibm-1145_P100-1997,swaplfnl  - ibm-1146_P100-1997,swaplfnl  - ibm-1147_P100-1997,swaplfnl  - ibm-1148_P100-1997,swaplfnl  - ibm-1149_P100-1997,swaplfnl  - ibm-1153_P100-1999,swaplfnl  - ibm-12712_P100-1998,swaplfnl  - ibm-16804_X110-1999,swaplfnl  - ebcdic-xml-us . Значение по умолчанию: UTF8.",
                    "ЗаписатьBOM": "Определяет, будет ли добавлена метка порядка байт (BOM) кодировки текста в начало данных. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ПолучитьДополнительныйПараметрКлиентаЛицензирования",
        "name_en": "GetLicensingClientAdditionalParameter",
        "description": "Получает дополнительный параметр, используемый для обслуживания информационной базы.",
        "returns": "Тип: Строка. Значение дополнительного параметра."
    },
    {
        "name": "ПолучитьДопустимыеКодыЛокализации",
        "name_en": "GetAvailableLocaleCodes",
        "description": "Получает массив допустимых кодов локализации.",
        "returns": "Тип: Массив. ",
        "ref": "classes.Массив"
    },
    {
        "name": "ПолучитьДопустимыеЧасовыеПояса",
        "name_en": "GetAvailableTimeZones",
        "description": "Получает массив строк допустимых идентификаторов часовых поясов.",
        "returns": "Тип: Массив. Массив содержит строки идентификаторов.  Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59.",
        "ref": "classes.Массив"
    },
    {
        "name": "ПолучитьЗапретЗасыпанияКомпьютера",
        "name_en": "GetComputerSleepModeProhibition",
        "description": "Возращает текущее значение, установленное с помощью метода",
        "returns": "Тип: Булево. "
    },
    {
        "name": "ПолучитьЗначенияОтбораЖурналаРегистрации",
        "name_en": "GetEventLogFilterValues",
        "description": "Позволяет получить наборы допустимых значений параметров отбора журнала регистрации: приложение, пользователь, компьютер, событие, метаданные, рабочий сервер, основной IP-порт, вспомогательный IP-порт, данные сеанса.",
        "returns": "Тип: Структура. Значения отбора журнала регистрации. Ключ элемента структуры определяет имя параметра, а значение элемента - текущее значение параметра:   - ИмяПриложения (ApplicationName) - Соответствие, в котором ключ - идентификатор приложения, значение - представление приложения;  - Пользователь (User) - Соответствие, в котором ключ - уникальный идентификатор пользователя информационной базы, значение - имя пользователя информационной базы;  - Компьютер (Computer) - Массив строк;  - Событие (Event) - Соответствие, в котором ключ - идентификатор события, значение - представление события;  - Метаданные (Metadata) - Соответствие, в котором ключ - имя объекта метаданных, значение - представление объекта метаданных;  - РабочийСервер (ServerName) - Массив строк;  - ОсновнойIPПорт (Port) - номер основного IP-порта рабочего процесса. Массив чисел;  - ВспомогательныйIPПорт (SyncPort) - номер вспомогательного IP-порта рабочего процесса. Массив чисел;  - РазделениеДанныхСеанса (SessionDataSeparation) - общие реквизиты, разделяющие данные. Соответствие, в котором: ключ – имя общего реквизита; значение – представление общего реквизита;  - РазделениеДанныхСеансаЗначения (SessionDataSeparationValues) – содержащий Соответствие, в котором:   - ключ – имя общего реквизита;  - значение – Соответствие, в котором:   - ключ - значение общего реквизита;  - значение - представление значения общего реквизита.",
        "ref": "classes.Структура",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Колонки?: Строка, ИмяВходногоФайла?: Строка): Структура",
                "Параметры": {
                    "Колонки": "Для того чтобы получить наборы допустимых значений определенных колонок журнала регистрации, необходимо в параметре перечислить их имена, при этом необходимо имя каждой колонки отделять запятой. Доступны следующие колонки:  - Пользователь (User);  - Компьютер (Computer);  - ИмяПриложения (ApplicationName);  - Событие (Event);  - Метаданные (Metadata);  - РабочийСервер (ServerName);  - ОсновнойIPПорт (Port);  - ВспомогательныйIPПорт (SyncPort);  - РазделениеДанныхСеанса (SessionDataSeparation);  - РазделениеДанныхСеанса.<имя общего реквизита> (SessionDataSeparation.<имя общего реквизита>) - в одном вызове метода может быть указано несколько общих реквизитов, входящих в данные сеанса. Используется для получения наборов допустимых значений общих реквизитов, входящих в данные сеанса. Наборы значений возвращаются в элементе РазделениеДанныхСеансаЗначения (SessionDataSeparationValues). Если не задан, то наборы допустимых значений будут получены для всех доступных колонок.",
                    "ИмяВходногоФайла": "Имя файла журнала регистрации."
                }
            }
        }
    },
    {
        "name": "ПолучитьИдентификаторКонфигурации",
        "name_en": "GetConfigurationID",
        "description": "Возвращает идентификатор конфигурации, с которой работает информационная база. Идентификатор составляется путем анализа и учета метаданных конфигурации.",
        "returns": "Тип: Строка. Строка, содержащая зашифрованный и закодированный в Base64 идентификатор конфигурации."
    },
    {
        "name": "ПолучитьИзВременногоХранилища",
        "name_en": "GetFromTempStorage",
        "description": "Получает значение из временного хранилища.",
        "returns": "Тип: Произвольный. Значение, ранее помещенное с помощью метода ПоместитьВоВременноеХранилище.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Адрес: Строка): Произвольный",
                "Параметры": {
                    "Адрес": "Адрес, указывающий на значение во временном хранилище."
                }
            }
        }
    },
    {
        "name": "ПолучитьИмяВременногоФайла",
        "name_en": "GetTempFileName",
        "description": "Для записи данных во временный файл необходимо сначала сформировать имя такого файла. При этом во избежание случайных потерь имеющихся файлов требуется получить уникальное имя. Данный метод предназначен для получения такого имени. При выполнении метода файл не создается.   - файлы, созданные во время работы сеанса, будут удалены в течение 20 минут после завершения сеанса.  - (недоступно в режиме совместимости 8.3.16 и ниже) файлы, созданные во время серверного вызова, будут удалены через 20 минут после завершения этого вызова.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Расширение?: Строка): Строка",
                "Параметры": {
                    "Расширение": "Указывает желаемое расширение имени временного файла. Если параметр не задан, то создается временный файл с расширением по умолчанию (.tmp). Желаемое расширение задается строкой, которая и будет использована в качестве расширения. Указание точки в начале расширения не обязательно. Например, при указании \".xml\" или \"xml\" результат будет одинаковый."
                }
            }
        }
    },
    {
        "name": "ПолучитьИмяКлиентаЛицензирования",
        "name_en": "GetLicensingClientName",
        "description": "Возвращает имя клиента лицензирования из информационной базы.",
        "returns": "Тип: Строка. Имя клиента лицензирования."
    },
    {
        "name": "ПолучитьИнформациюЭкрановКлиента",
        "name_en": "GetClientDisplaysInformation",
        "description": "Получает информацию об экранах подключенных устройств.",
        "returns": "Тип: ФиксированныйМассив. Неопределено, если сеанс не связан с клиентом (фоновое задание, внешнее соединение).",
        "ref": "classes.ФиксированныйМассив"
    },
    {
        "name": "ПолучитьИспользованиеЖурналаРегистрации",
        "name_en": "GetEventLogUsing",
        "description": "Проверяет, осуществляется ли в журнале регистрация события заданного уровня важности.",
        "returns": "Тип: Массив. Массив состоит из значений типа УровеньЖурналаРегистрации. для которых включена регистрация событий в журнале. Если регистрация отключена, возвращается пустой массив.",
        "ref": "classes.Массив"
    },
    {
        "name": "ПолучитьИспользованиеСобытияЖурналаРегистрации",
        "name_en": "GetEventLogEventUse",
        "description": "Получает текущее состояние управления регистрацией указанного события в журнале регистрации.",
        "returns": "Тип: ИспользованиеСобытияЖурналаРегистрации. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяСобытия: Строка): ИспользованиеСобытияЖурналаРегистрации",
                "Параметры": {
                    "ИмяСобытия": "Имя регистрируемого события.  - _$Access$_.Access - Доступ. Доступ; Записывается при следующих обстоятельствах:   - при регистрации фактов успешного доступа пользователей информационной базы к тем или иным данным,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка.  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) в этом случае имеет следующий состав:   - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались. Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Access$_.AccessDenied - Доступ. Отказ в доступе; Записывается в следующих случаях:   - при регистрации фактов отказа в доступе к тем или иным данным пользователям информационной базы,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка,  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) имеет следующий состав:    - Для ошибки доступа к объекту (не ограничение доступа к данным):    - Право (Right) - имя нарушенного права;  - Для ошибки ограничения доступа к данным:    - Действие (Action) - Действие, которое выполнялось с данными, для объектных таблиц: Чтение (Read), Добавление (Insert), Изменение (Update), Удаление (Delete); для не объектных таблиц, все что не Чтение, то Изменение;  - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались.Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Data$_.Delete - Данные. Удаление;  - _$Data$_.DeletePredefinedData - Данные. Удаление предопределенных данных;  - _$Data$_.DeleteVersions - Данные. Удаление версий;  - _$Data$_.New - Данные. Добавление;  - _$Data$_.NewPredefinedData - Данные. Добавление предопределенных данных;  - _$Data$_.NewVersion - Данные. Добавление версии;  - _$Data$_.Post - Данные. Проведение;  - _$Data$_.PredefinedDataInitialization - Данные. Инициализация предопределенных данных;  - _$Data$_.PredefinedDataInitializationDataNotFound - Данные. Инициализация предопределенных данных. Данные не найдены;  - _$Data$_.SetPredefinedDataInitialization - Данные. Установка инициализации предопределенных данных;  - _$Data$_.SetStandardODataInterfaceContent - Данные. Изменение состава стандартного интерфейса OData;  - _$Data$_.TotalsMaxPeriodUpdate - Данные. Изменение максимального периода рассчитанных итогов;  - _$Data$_.TotalsMinPeriodUpdate - Данные. Изменение минимального периода рассчитанных итогов;  - _$Data$_.Unpost - Данные. Отмена проведения;  - _$Data$_.Update - Данные. Изменение;  - _$Data$_.UpdatePredefinedData - Данные. Изменение предопределенных данных;  - _$Data$_.VersionCommentUpdate - Данные. Изменение комментария версии;  - _$InfoBase$_.ConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.ConfigUpdate - Информационная база. Изменение конфигурации;  - _$InfoBase$_.DBConfigBackgroundUpdateCancel - Информационная база. Отмена фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateFinish - Информационная база. Завершение фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateResume - Информационная база. Продолжение (после приостановки) процесса фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateStart - Информационная база. Запуск фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateSuspend - Информационная база. Приостановка (пауза) процесса фонового обновления;  - _$InfoBase$_.DBConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.DBConfigExtensionUpdateError  - Информационная база. Ошибка изменения расширения конфигурации; Поле Данные заполняется аналогично событию _$InfoBase$_.DBConfigExtensionUpdate (при возможности вывода этих данных);  - _$InfoBase$_.DBConfigUpdate - Информационная база. Изменение конфигурации базы данных;  - _$InfoBase$_.DBConfigUpdateStart - Информационная база. Запуск обновления конфигурации базы данных;  - _$InfoBase$_.DumpError - Информационная база. Ошибка выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpFinish - Информационная база. Окончание выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpStart - Информационная база. Начало выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.EraseData - Информационная база. Удаление данных информационной баз;  - _$InfoBase$_.EventLogReduce - Информационная база. Сокращение журнала регистрации; записываются при сокращении журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Дата (Date) - Дата;  - _$InfoBase$_.EventLogReduceError - Информационная база. Ошибка сокращения журнала регистрации; записываются при ошибках сокращения журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.EventLogReduce (при возможности вывода этих данных);  - _$InfoBase$_.EventLogSettingsUpdate - Информационная база. Изменение параметров журнала регистрации;  - _$InfoBase$_.EventLogSettingsUpdateError - Информационная база. Изменение настроек журнала регистрации; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные (Структура) заполняется структурой со следующим составом свойств:  - При изменении уровня событий и/или периода разделения журнала регистрации(записываются только измененные параметры):  - Уровни (Levels): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При изменении формата журнала регистрации:  - ФорматЖурналаРегистрации (EventLogStructure): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При настройке использования событий журнала регистрации (с помощью метода УстановитьИспользованиеСобытияЖурналаРегистрации):  - ИмяСобытия (EventName) - Строка;   - СобытиеРегистрируется (EventIsLogged) - Булево;  - _$InfoBase$_.InfoBaseAdmParamsUpdate - Информационная база. Изменение параметров информационной базы;  - _$InfoBase$_.InfoBaseAdmParamsUpdateError - Информационная база. Ошибка изменения параметров информационной базы; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.InfoBaseAdmParamsUpdate (при возможности вывода этих данных);  - _$InfoBase$_.IntegrationServiceActiveUpdate - Информационная база. Изменение активности сервиса интеграции;  - _$InfoBase$_.IntegrationServiceSettingsUpdate - Информационная база. Изменение настроек сервиса интеграции;  - _$InfoBase$_.MasterNodeUpdate - Информационная база. Изменение главного узла;  - _$InfoBase$_.PredefinedDataUpdate - Информационная база. Обновление предопределенных данных;  - _$InfoBase$_.RegionalSettingsUpdate - Информационная база. Изменение региональных установок;  - _$InfoBase$_.RestoreError - Информационная база. Ошибка загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreFinish - Информационная база. Окончание загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreStart - Информационная база. Начало загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.SecondFactorAuthTemplateDelete - Информационная база. УдалениеШаблонаВторгоФактораАутентификации; записывается при удалении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateNew - Информационная база. ДобавлениеШаблонаВторгоФактораАутентификации; записывается при создании шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateUpdate - Информационная база. ИзменениеШаблонаВторгоФактораАутентификации; записывается при изменении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SetPredefinedDataUpdate - Информационная база. Установить обновление предопределенных данных;  - _$InfoBase$_.TARImportant - Тестирование и исправление. Ошибка;  - _$InfoBase$_.TARInfo - Тестирование и исправление. Сообщение;  - _$InfoBase$_.TARMess - Тестирование и исправление. Предупреждение;  - _$Job$_.Cancel - Фоновое задание. Отмена;  - _$Job$_.Fail - Фоновое задание. Ошибка выполнения;  - _$Job$_.Start - Фоновое задание. Запуск;  - _$Job$_.Succeed - Фоновое задание. Успешное завершение;  - _$Job$_.Terminate - Фоновое задание. Принудительное завершение;  - _$OpenIDProvider$_.NegativeAssertion - Провайдер OpenID. Отклонено; записывается базой, выступающей в роли провайдера OpenID, при отправке отрицательного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию.  - _$OpenIDProvider$_.PositiveAssertion - Провайдер OpenID. Подтверждено; записывается базой, выступающей в роли провайдера OpenID, при отправке положительного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию;  - _$PerformError$_ - Ошибка выполнения;  - _$Session$_.Authentication - Сеанс. Аутентификация; выполняется только при удачной аутентификации. Для события Аутентификация записываются поля Пользователь и ИмяПользователя. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - КодДополненияИмениПользователя (UserNameAdditionCode)- Строка. Код дополнения имения пользователя. При наличии дополнения имени пользователя при вводе имени пользователя в процессе аутентификации.  - В случае аутентификации при помощи OpenID поле Данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID;  - ИдентификаторПользователяПровайдераOpenID (OpenIDProviderUserID) - идентификатор пользователя на провайдере.  - _$Session$_.AuthenticationError - Сеанс. Ошибка аутентификации; выполняется только при ошибке аутентификации. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - В случае аутентификации при помощи OpenID поле данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID  - _$Session$_.AuthenticationFirstFactor - Сеанс. Аутентификация первый фактор; Записывается только если у пользователя включена двухфакторная аутентифкация. Для события Аутентификация первый фактор поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - _$Session$_.ConfigExtensionApplyError - Сеанс. Ошибка применения расширения конфигурации; записывается, если в процессе применений расширения произошла ошибка. Совпадает с текстом выводимого сообщения при невозможности подключить расширение. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения  - _$Session$_.Finish - Сеанс. Завершение;  - _$Session$_.Start - Сеанс. Начало;  - _$Transaction$_.Begin - Транзакция. Начало;  - _$Transaction$_.Commit - Транзакция. Фиксация;  - _$Transaction$_.Rollback - Транзакция. Отмена;  - _$User$_.AuthenticationLock - Пользователи. Блокировка аутентификации. Поле Данные заполняется структурой со следующим составом свойств:  - Имя (Name) – Строка. Имя пользователя, аутентификация которого блокируется. ; _$User$_.AuthenticationUnlock - Пользователи. Разблокировка аутентификации. Записывается при изменении блокировки аутентификации пользователя  (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структорой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  _$User$_.AuthenticationUnlockError (_$User$_.AuthenticationUnlockError) - Пользователи. Ошибка разблокировки аутентификации; записываются при отказе в ручном изменении блокировки аутентификации пользователя (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ; _$User$_.Delete - Пользователи. Удаление; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя _$User$_.DeleteError - Пользователи. Ошибка удаления; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Delete (при возможности вывода этих данных); _$User$_.New - Пользователи. Добавление; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево.  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево.  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык. _$User$_.NewError - Пользователи. Ошибка добавления; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.New (при возможности вывода этих данных); _$User$_.Update - Пользователи. Изменение; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево;  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево;  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык; _$User$_.UpdateError - Пользователи. Ошибка изменения; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Update (при возможности вывода этих данных);"
                }
            }
        }
    },
    {
        "name": "ПолучитьИспользуемыйСервер",
        "name_en": "GetUsedServer",
        "description": "Возвращает текущее значение, установленное методом",
        "returns": "Тип: ИспользуемыйСервер. "
    },
    {
        "name": "ПолучитьМакетОформления",
        "name_en": "GetAppearanceTemplate",
        "description": "Получает макет оформления.",
        "returns": "Тип: ТабличныйДокумент. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Оформление: СтандартноеОформление): ТабличныйДокумент",
                "Параметры": {
                    "Оформление": "Содержит стандартный вариант оформления."
                }
            }
        }
    },
    {
        "name": "ПолучитьМаскуВсеФайлы",
        "name_en": "GetAllFilesMask",
        "description": "Получает файловую маску, принятую для выбора всех файлов в операционной системе, в контексте которой выполняется вызов.",
        "returns": "Тип: Строка. Маска возвращается в виде строки. Например: \"*.*\"."
    },
    {
        "name": "ПолучитьМаскуВсеФайлыКлиента",
        "name_en": "GetClientAllFilesMask",
        "description": "Получает файловую маску, принятую для выбора всех файлов в операционной системе, в которой выполняется клиентское приложение.",
        "returns": "Тип: Строка. Маска возвращается в виде строки. Например: \"*.*\"."
    },
    {
        "name": "ПолучитьМаскуВсеФайлыСервера",
        "name_en": "GetServerAllFilesMask",
        "description": "Получает файловую маску, принятую для выбора всех файлов в операционной системе, в которой работает сервер 1С:Предприятия, обрабатывающий вызов.",
        "returns": "Тип: Строка. Маска возвращается в виде строки. Например: \"*.*\"."
    },
    {
        "name": "ПолучитьМестоположениеПоАдресу",
        "name_en": "GetLocationByAddress",
        "description": "Получает географические координаты по адресу.",
        "returns": "Тип: ГеографическиеКоординаты, Неопределено. Неопределено - данные не получены.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Адрес?: ДанныеАдреса): ГеографическиеКоординаты",
                "Параметры": {
                    "Адрес": "Адрес местоположения. Состав адреса может различаться в разных государствах. Для России определены поля:  - Страна (Country);  - Регион (State);  - Город (City);  - Улица (Street);  - Дом (House);  - Индекс (ZipCode)."
                }
            }
        }
    },
    {
        "name": "ПолучитьМинимальнуюДлинуПаролейПользователей",
        "name_en": "GetUserPasswordMinLength",
        "description": "Получает ограничение на минимальную длину паролей, которое установлено для пользователей информационной базы.",
        "returns": "Тип: Число. "
    },
    {
        "name": "ПолучитьНавигационнуюСсылку",
        "name_en": "GetURL",
        "description": "Получает навигационную ссылку в формате 1С:Предприятия на объект информационной базы, на его реквизит, на обсуждение или сообщение системы взаимодействия.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Объект: РегистрСведенийКлючЗаписи.<Имя регистра сведений>, ИмяРеквизита?: Строка, Индекс?: Число): Строка",
                "Параметры": {
                    "Объект": "В качестве значения данного параметра могут быть указаны:  - Ссылка на объект информационной базы,  - Ключ записи регистра сведений,  - Идентификатор обсуждения системы взаимодействия,  - Обсуждение системы взаимодействия,  - Идентификатор сообщения системы взаимодействия,  - Сообщение системы взаимодействия. Если в данном параметре передано значение, от которого нельзя получить навигационную ссылку, будет сгенерировано исключение о неверном значении параметра.",
                    "ИмяРеквизита": "Если требуется получить навигационную ссылку на реквизит объекта, то в данном параметре следует указать имя реквизита. Если требуется получить ссылку на ключ записи регистра сведений, то данный параметр должен содержать имя ресурса регистра сведений.  Если требуется получить ссылку на реквизит табличной части, то он указывается через точку \".\" после имени табличной части, и в параметре <Индекс> следует указать индекс строки табличной части.",
                    "Индекс": "Индекс строки в табличной части, если требуется получить навигационную ссылку на реквизит табличной части. Первая строка имеет индекс, равный 0."
                }
            }
        }
    },
    {
        "name": "ПолучитьНавигационнуюСсылкуИнформационнойБазы",
        "name_en": "GetInfoBaseURL",
        "description": "Получает навигационную ссылку информационной базы.  - Файловая:   - Если путь к файловой версии является UNC путем, то формат строка имеет следующий вид e1c://file/UNC путь;  - Если путь к файловой версии содержит том, то формат строка имеет следующий вид - e1c://filev/символ тома/остальной путь;   - Клиент-сервер:   - e1c://server/имя сервера/имя ИБ.   - Веб-сервер:   - http://путь;  - https://путь. Эта ссылка может использоваться для создания абсолютной ссылки из относительной. Внимание! На сервере данный метод поддерживается только в контексте клиентского вызова. В фоновых и регламентных заданиях возвращает пустое значение.",
        "returns": "Тип: Строка. "
    },
    {
        "name": "ПолучитьНачалоСтолетияИнформационнойБазы",
        "name_en": "GetInfoBaseBeginningOfCentury",
        "description": "Возвращает год начала столетия, установленный для информационной базы или",
        "returns": "Тип: Число, Неопределено. "
    },
    {
        "name": "ПолучитьОбновлениеКонфигурацииБазыДанных",
        "name_en": "GetDataBaseConfigurationUpdate",
        "description": "Получает информацию о состоянии фонового обновления конфигурации базы данных.",
        "returns": "Тип: ОбновлениеКонфигурацииБазыДанных. "
    },
    {
        "name": "ПолучитьОбновлениеПредопределенныхДанныхИнформационнойБазы",
        "name_en": "GetInfoBasePredefinedData",
        "description": "Возвращает текущее установленное в информационной базе значение режима обновления предопределенных данных.",
        "returns": "Тип: ОбновлениеПредопределенныхДанных. "
    },
    {
        "name": "ПолучитьОбщийМакет",
        "name_en": "GetCommonTemplate",
        "description": "Получает один из общих макетов конфигурации.",
        "returns": "Тип: ТабличныйДокумент, ТекстовыйДокумент, ДвоичныеДанные, ОболочкаActiveDocument, ОболочкаHTMLДокумента, ПолеГеографическойСхемы, ГрафическаяСхема, СхемаКомпоновкиДанных, МакетОформленияКомпоновкиДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбщийМакет: Строка): ТабличныйДокумент",
                "Параметры": {
                    "ОбщийМакет": "Имя общего макета, как оно задано в конфигураторе, или объект описания метаданного общего макета."
                }
            }
        }
    },
    {
        "name": "ПолучитьОбщуюФорму",
        "name_en": "GetCommonForm",
        "description": "Получает общую форму.",
        "returns": "Тип: Форма. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Форма?: Строка, Владелец?: Форма, КлючУникальности?: Произвольный): Форма",
                "Параметры": {
                    "Форма": "Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                    "Владелец": "Объект, который будет являться владельцем открываемой формы.",
                    "КлючУникальности": "В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм.  При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы.  Если из некой формы (один и тот же владелец) требуется открывать новые экземпляры другой формы, то при каждом вызове метода значение данного параметра должно быть уникально (в рамках соответствующих значений свойств открытых форм). Значение параметра присваивается свойству открываемой формы КлючУникальности. Следует учитывать, что при получении формы из \"объекта\" система получает форму для конкретного экземпляра объекта с учетом совокупности переданных параметров, в то время как для \"ссылки\" всегда существует только один объект в базе данных и форма получается одна (для одинаковой совокупности параметров)."
                }
            }
        }
    },
    {
        "name": "ПолучитьОкна",
        "name_en": "GetWindows",
        "description": "Получает окна приложения. Порядок элементов в коллекции не определен.",
        "returns": "Тип: ОкнаКлиентскогоПриложения. "
    },
    {
        "name": "ПолучитьОперативнуюОтметкуВремени",
        "name_en": "GetRealTimeTimestamp",
        "description": "Получает оперативную отметку времени.",
        "returns": "Тип: Дата. Возвращаемое значение соответствует текущей дате, но будет не меньше, чем последняя оперативная отметка времени, полученная каким-либо пользователем в этом сеансе работы. Если значение соответствующее текущему времени, которое уже выдавалось, то возвращается значение на 1 секунду большее. Таким образом, система обеспечивает выдачу для всех пользователей в ходе сеанса оперативной отметки времени в неубывающей последовательности. В варианте \"клиент-сервер\" - в качестве исходного текущего времени используется время компьютера, на котором работает сервер 1С:Предприятия. В файловом варианте - в качестве исходного текущего времени используется текущее время компьютера пользователя."
    },
    {
        "name": "ПолучитьОтключениеБезопасногоРежима",
        "name_en": "GetSafeModeDisabled",
        "description": "Определяет выключение безопасного режима для текущего метода командой на время выполнения обработчиков событий объектов метаданных или вызовом метода",
        "returns": "Тип: Булево. Истина - выключение безопасного режима для текущего метода; Ложь - в противном случае."
    },
    {
        "name": "ПолучитьПараметрыФункциональныхОпцийИнтерфейса",
        "name_en": "GetInterfaceFunctionalOptionParameters",
        "description": "Получает параметры функциональных опций командного интерфейса.",
        "returns": "Тип: Структура. Значения параметров функциональных опций, установленных для командного интерфейса. Ключ элемента структуры определяет имя параметра, а значение элемента - текущее значение параметра.",
        "ref": "classes.Структура"
    },
    {
        "name": "ПолучитьПолноеИмяПредопределенногоЗначения",
        "name_en": "GetPredefinedValueFullName",
        "description": "Выполняет действие, обратное методу",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ПредопределенноеЗначение: Произвольный): Строка",
                "Параметры": {
                    "ПредопределенноеЗначение": "Ссылка на предопределенный элемент из предопределенных данных, прикладных перечислений, точек маршрута бизнес-процессов или значение системного перечисления."
                }
            }
        }
    },
    {
        "name": "ПолучитьПредставленияНавигационныхСсылок",
        "name_en": "GetURLsPresentations",
        "description": "Получает массив представлений ссылок",
        "returns": "Тип: Массив. Возвращает массив представлений ссылок.  При работе через HTTP абсолютные ссылки со схемой \"e1c\" интерпретируются как ссылки, относящиеся к текущей информационной базе. Например, для ссылки, указанной в элементе массива (передаваемом в параметре) строк, возвращает объект ПредставлениеНавигационнойСсылки, у которого свойство Текст=\"Деньги\". Неопределено - объект отсутствует в информационной базе (удален или не относится к текущей базе).",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(МассивСсылок: Массив): Массив",
                "Параметры": {
                    "МассивСсылок": "Массив ссылок. Пример ссылки: e1cib/data/Справочник.Товары?ref=\"ae92005056c0000811dcf650677a5575\" указывает на элемент справочника Товары с наименованием \"Гвозди\"."
                }
            }
        }
    },
    {
        "name": "ПолучитьПреимущественноеИспользованиеОсновногоСервера",
        "name_en": "GetPreferableMainServerUse",
        "description": "Возвращает узначение, установленное с помощью метода",
        "returns": "Тип: Булево, Неопределено. "
    },
    {
        "name": "ПолучитьПроверкуСложностиПаролейПользователей",
        "name_en": "GetUserPasswordStrengthCheck",
        "description": "Проверяет, установлены ли ограничения на сложность паролей пользователей информационной базы.",
        "returns": "Тип: Булево. Истина - ограничения установлены; Ложь - в противном случае."
    },
    {
        "name": "ПолучитьРазделительПути",
        "name_en": "GetPathSeparator",
        "description": "Получает значение разделителя пути, используемого в операционной системе, в контексте которой выполняется вызов.",
        "returns": "Тип: Строка. "
    },
    {
        "name": "ПолучитьРазделительПутиКлиента",
        "name_en": "GetClientPathSeparator",
        "description": "Получает значение разделителя пути, используемого в операционной системе, в которой работает клиентское приложение.",
        "returns": "Тип: Строка. "
    },
    {
        "name": "ПолучитьРазделительПутиСервера",
        "name_en": "GetServerPathSeparator",
        "description": "Получает значение разделителя пути, используемого в операционной системе, в которой работает рабочий процесс сервера.",
        "returns": "Тип: Строка. Разделитель пути возвращается в виде строки. Например: \"\\\"."
    },
    {
        "name": "ПолучитьРазмерДанныхБазыДанных",
        "name_en": "GetDatabaseDataSize",
        "description": "Метод возвращает размер данных в таблицах в информационной базе для переданных объектов (в байтах). Будут получены все данные, которые доступны пользователю для чтения.",
        "returns": "Тип: Число. Возвращает размер в байтах.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбластьПоиска?: Неопределено, ВключитьОбъекты?: Неопределено, ИсключитьОбъекты?: Массив): Число",
                "Параметры": {
                    "ОбластьПоиска": "Определяет область поиска объектов путем задания комбинации разделителей, в состав которых включены объекты метаданных, по которым нужно посчитать размер данных. В данном параметре указываются не значения, а сами разделители (общий реквизит, разделяющий данные). Элемент массива имеет тип Массив. Элемент вложенного массива имеет тип:  - Объект метаданных – Общий реквизит, разделяющий данные.  - Строка – имя общего реквизита, разделяющего данные. Не полное, а короткое имя. Допустимые значения:  - Неопределено - выбирает все объекты метаданных, если параметр <ВключитьОбъекты> также имеет значение Неопределено. Иначе равносильно передаче пустого массива.  - Массив с массивами разделителей - массив комбинаций разделителей, определяющий область учета данных:  - Если массив пуст, то никакие объекты не выбираются и перечень объектов определяется другими параметрами.  - Если массив содержит несколько комбинаций разделителей, то выбираются все объекты метаданных, состав разделителей которых полностью равен одной из заданных комбинаций.  Значение по умолчанию: Неопределено.",
                    "ВключитьОбъекты": "Позволяет явно указать объекты метаданных, которые должны присутствовать при подсчете размера данных. Элементом массива могут быть:  - Объект метаданных.  - Строка – полное имя объекта метаданных. Допустимые значения:  - Неопределено или пустой массив - нет объектов, которые необходимо дополнительно включить в область подсчета.  - Массив объектов метаданных.  Значение по умолчанию: Неопределено.",
                    "ИсключитьОбъекты": "Позволяет явно указать объекты метаданных, которые следует исключить из подсчета данных. Элементом массива могут быть:  - Объект метаданных.  - Строка – полное имя объекта метаданных. Допустимые значения:  - Неопределено или пустой массив - нет объектов, которые необходимо дополнительно исключить.  - Массив объектов метаданных.  Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "ПолучитьРежимВнешнихРесурсов",
        "name_en": "GetExternalResourcesMode",
        "description": "Получает режим работы с внешними ресурсами.",
        "returns": "Тип: Строка. - \"D\" - режим по умолчанию.  - \"А\" - альтернативный режим."
    },
    {
        "name": "ПолучитьСеансыИнформационнойБазы",
        "name_en": "GetInfoBaseSessions",
        "description": "Получает список сеансов текущей информационой базы.",
        "returns": "Тип: Массив. Массив объектов СеансИнформационнойБазы. Если пользователь соединения не имеет права АктивныеПользователи (ActiveUsers), то вызывается исключение.",
        "ref": "classes.Массив"
    },
    {
        "name": "ПолучитьСклоненияСтроки",
        "name_en": "GetStringDeclensions",
        "description": "Склоняет указанную строку.",
        "returns": "Тип: Массив. Массив, содержащий возможные варианты склонения строки. Если требуется только один вариант, можно использовать первый. Также в конфигурации может быть предусмотрен выбор пользователем варианта склонения из нескольких вариантов.",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СклоняемаяСтрока: Строка, ОписаниеСтроки?: Строка, ФорматнаяСтрока?: Строка): Массив",
                "Параметры": {
                    "СклоняемаяСтрока": "Содержит строку, которую нужно просклонять.",
                    "ОписаниеСтроки": "Содержит информацию о строке, которую требуется просклонять. Каждый параметр задается именем параметра, символом \"=\" (равно) и значением параметра. Параметры перечисляются через символ \";\" (точка с запятой). Допустимы следующие параметры:  - Л (L) - Код локализации. По умолчанию используется код локализации, установленный в операционной системе. Примеры кодов локализации: ru_RU - Русский (Россия); en_US - Английский (США). В настоящий момент поддерживается только русский язык. Если код локализации не указан, то используется текущая локализация пользователя.  - ПЛ (GN) - Пол. Параметр используется при склонении имен собственных. Если пол не указан, то платформа пытается распознать его на основании переданного словосочетания. Возможные варианты:  - Мужской (Masculine),  - Женский (Feminine).  Значение по умолчанию: Пустая строка.",
                    "ФорматнаяСтрока": "Содержит параметры форматирования. Каждый параметр задается именем параметра, символом \"=\" (равно) и значением параметра. Параметры перечисляются через символ \";\" (точка с запятой). Допустимы следующие параметры:  - ПД (CS) – Падеж. Если падеж не указан, то склонение не выполняется (выдается исходная строка). Поддерживаются следующие падежи:  - Именительный (Nominative),  - Родительный (Genitive),  - Дательный (Dative),  - Винительный (Accusative),  - Творительный (Instrumental),  - Предложный (Prepositional).  Значение по умолчанию: Пустая строка."
                }
            }
        }
    },
    {
        "name": "ПолучитьСклоненияСтрокиПоЧислу",
        "name_en": "GetStringDeclensionsByNumber",
        "description": "Склоняет переданное сочетание числа и строки в указанном падеже.",
        "returns": "Тип: Массив. Если указано только число, то возвращает представление этого числа в виде прописи в форме единственного числа мужского рода. Если указано только словосочетание без единицы измерения, метод заменит единицу измерения на словосочетание и выполнить склонение по соответствующим правилам.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СклоняемаяСтрока: Строка, Число: Число, СклоняемыеЕдиницыИзмерения?: Строка, ОписаниеСтроки?: Строка, ФорматнаяСтрока?: Строка, ФорматнаяСтрокаЧисла?: Строка): Массив",
                "Параметры": {
                    "СклоняемаяСтрока": "Содержит строку, которую требуется согласовать и просклонять.",
                    "Число": "Содержит число, относительно которого будет выполнено согласование и склонение строки.",
                    "СклоняемыеЕдиницыИзмерения": "Содержит строку с единицей измерения, которую необходимо согласовать и просклонять. Также поддерживается передача нескольких единиц измерения в следующем виде (перечисляются через запятую):  - Единица измерения для целой части (Например, \"килограмм\").  - Единица измерения для дробной части (Например, \"грамм\").  - Количество разрядов дробной части (Может отсутствовать, по умолчанию - 2). В результате, общая строка параметра будет выглядеть так: \"килограмм, грамм, 2\".",
                    "ОписаниеСтроки": "Содержит информацию о строке, которую нужно обработать. Каждый параметр задается именем параметра, символом \"=\" (равно) и значением параметра. Параметры перечисляются через символ \";\" (точка с запятой). Допустимые параметры:  - Л (L) - Код локализации. По умолчанию используется код локализации, установленный в операционной системе. Примеры кодов локализации: ru_RU - Русский (Россия), en_US - Английский (США). В настоящий момент поддерживается только русский язык. Если код локализации не указан, то используется текущая локализация пользователя.  - ЧС (NM) – тип числительного. Возможные варианты:  - Количественное (Cardinal) - Используется для целых и дробных значений.  - Порядковое (Ordinal) - Используется только для целых значений.  - Если тип числительного не указан, то в качестве параметра будет использовано количественное числительное. Если переданное число является дробью и указано, что оно является порядковым числительным, то будет сгенерировано исключение.",
                    "ФорматнаяСтрока": "Содержит параметры форматирования. Каждый параметр задается именем параметра, символом \"=\" (равно) и значением параметра. Параметры перечисляются через символ \";\" (точка с запятой). Допустимы следующие параметры:  - ПД (CS) – Падеж. Если не указан, то выполняется только согласование и возвращается форма именительного падежа. Возможные значения:  - Именительный (Nominative),  - Родительный (Genitive),  - Дательный (Dative),  - Винительный (Accusative),  - Творительный (Instrumental),  - Предложный (Prepositional).  - ПЧ (NP) – представление числа. Если не указано, то используется \"Авто\". Возможные варианты:   - Число (Number) - числительное будет записано цифрами.  - ЧислоПрописью (NumberInWords) - числительное будет записано прописью (Например, \"120\" - \"сто двадцать\").  - ЧислоСОкончанием (NumberWithEnding) - числительное будет записано с окончанием (Например, \"5\" - \"5-ый\" в случае порядкового числительного в именительном падеже, \"7\" - \"7-и\" в случае количественного числительного в родительном падеже).  - Авто (Auto) - для порядковых числительных используется \"ЧислоСОкончанием\", для количественных - \"Число\".",
                    "ФорматнаяСтрокаЧисла": "В качестве параметра передается строка, используемая методом встроенного языка Формат для преобразования исходного числа в строку в указанном формате."
                }
            }
        }
    },
    {
        "name": "ПолучитьСкоростьКлиентскогоСоединения",
        "name_en": "GetClientConnectionSpeed",
        "description": "Возвращает скорость клиентского соединения.",
        "returns": "Тип: СкоростьКлиентскогоСоединения. "
    },
    {
        "name": "ПолучитьСоединенияИнформационнойБазы",
        "name_en": "GetInfoBaseConnections",
        "description": "Получает массив описаний соединений с текущей информационной базой.",
        "returns": "Тип: Массив. Массив значений типа СоединениеИнформационнойБазы.  Если пользователь соединения не имеет права АктивныеПользователи (ActiveUsers), то вызывается исключение.",
        "ref": "classes.Массив"
    },
    {
        "name": "ПолучитьСообщенияПользователю",
        "name_en": "GetUserMessages",
        "description": "Получает массив объектов",
        "returns": "Тип: ФиксированныйМассив. ",
        "ref": "classes.ФиксированныйМассив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(УдалятьПолученные?: Булево): ФиксированныйМассив",
                "Параметры": {
                    "УдалятьПолученные": "Признак необходимости удаления полученных сообщений из списка. Истина - удалять. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ПолучитьСоответствиеОбъектаИРеквизитаФормы",
        "name_en": "GetObjectAndFormAttributeConformity",
        "description": "Возвращает имя атрибута формы, связанного с объектом, передаваемым в качестве аргумента функции.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Объект: СправочникОбъект.<Имя справочника>): Строка",
                "Параметры": {
                    "Объект": "Прикладной объект, преобразованный из данных формы в значение, для которого необходимо получить соответствие с именем реквизита формы."
                }
            }
        }
    },
    {
        "name": "ПолучитьСоответствиеОбъектаИФормы",
        "name_en": "GetObjectAndFormConformity",
        "description": "Получает информацию об идентификаторе формы и имени атрибута формы, связанного с передаваемым в качестве аргумента функции объектом.",
        "returns": "Тип: Структура. Содержит элементы с именами ключей \"ИдентификаторФормы\" (\"FormID\"), \"ИмяРеквизита\" (\"AttributeName\").",
        "ref": "classes.Структура",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Объект: СправочникОбъект.<Имя справочника>): Структура",
                "Параметры": {
                    "Объект": "Прикладной объект, преобразованный из универсального объекта в значение, для которого необходимо получить соответствие с именем реквизита формы."
                }
            }
        }
    },
    {
        "name": "ПолучитьСоставСтандартногоИнтерфейсаOData",
        "name_en": "GetStandardODataInterfaceContent",
        "description": "Возвращает массив объектов метаданных, включенных в стандартный OData API.  - Справочник.ИмяСправочника  - Документ.ИмяДокумента  - ПланОбмена.ИмяПланаОбмена  - ПланСчетов.ИмяПланаСчетов  - ПланВидовРасчета.ИмяПланаВидовРасчета  - ПланВидовХарактеристик.ИмяПланаВидовХарактеристик  - РегистрБухгалтерии.ИмяРегистраБухгалтерии  - РегистрСведений.ИмяРегистраСведений  - РегистрРасчета.ИмяРегистраРасчета  - РегистрНакопления.ИмяРегистраНакопления  - ЖурналДокументов.ИмяЖурналаДокументов  - Перечисление.ИмяПеречисления  - Задача.ИмяЗадачи  - БизнесПроцесс.ИмяБизнесПроцесса  - Константа.ИмяКонстанты",
        "returns": "Тип: Массив. Массив объектов метаданных.",
        "ref": "classes.Массив"
    },
    {
        "name": "ПолучитьСтрокуИзБуфераДвоичныхДанных",
        "name_en": "GetStringFromBinaryDataBuffer",
        "description": "Преобразует буфер двоичных данных в строку с учетом кодировки текста.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Буфер: БуферДвоичныхДанных, КодировкаТекста?: КодировкаТекста): Строка",
                "Параметры": {
                    "Буфер": "Буфер двоичных данных, который требуется преобразовать в строку.",
                    "КодировкаТекста": "Кодировка текста может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки. Поддерживаемые названия кодировок:  - UTF-8  - UTF-16  - UTF-16BE  - UTF-16LE  - UTF-32  - UTF-32BE  - UTF-32LE  - UTF16_PlatformEndian  - UTF16_OppositeEndian  - UTF32_PlatformEndian  - UTF32_OppositeEndian  - UTF-7  - IMAP-mailbox-name  - SCSU  - BOCU-1  - CESU-8  - ISO-8859-1  - US-ASCII  - gb18030  - IBM367  - iso-8859-2  - iso-8859-3  - iso-8859-4  - iso-8859-5  - iso-8859-6  - iso-8859-7  - iso-8859-8  - iso-8859-9  - iso-8859-13  - iso-8859-15  - cp932  - Shift_JIS  - EUC-JP  - cp33722  - windows-950  - Big5  - cp950  - Big5-HKSCS  - cp1386  - GBK  - GB2312  - GB_2312-80  - cp964  - cp949  - cp949c  - EUC-KR  - ibm-971  - KSC_5601  - ibm-1363  - windows-949  - windows-874  - cp874  - ibm-1162  - cp437  - cp737  - cp775  - cp850  - cp851  - cp852  - cp855  - cp856  - cp857  - cp858  - cp860  - cp861  - cp862  - cp863  - cp864  - cp865  - cp866  - ibm-867  - CP868  - cp869  - KOI8-R  - ibm-901  - ibm-902  - cp922  - KOI8-U  - ibm-4909  - windows-1250  - windows-1251  - windows-1252  - windows-1253  - windows-1254  - windows-1255  - windows-1256  - windows-1257  - windows-1258  - macintosh  - x-mac-greek  - x-mac-cyrillic  - x-mac-centraleurroman  - x-mac-turkish  - hp-roman8  - Adobe-Standard-Encoding  - cp1006  - cp1098  - cp1124  - cp1125  - ibm-1129  - cp1131  - ibm-1133  - ISO-2022-JP  - JIS_Encoding  - ISO-2022-JP-2  - ISO_2022,locale=ja,version=3  - ISO_2022,locale=ja,version=4  - ISO-2022-KR  - ISO_2022,locale=ko,version=1  - ISO-2022-CN  - ISO-2022-CN-EXT  - HZ-GB-2312  - windows-57002  - windows-57003  - windows-57011  - windows-57010  - windows-57007  - windows-57004  - windows-57005  - windows-57008  - windows-57009  - LMBCS-1  - LMBCS-2  - LMBCS-3  - LMBCS-4  - LMBCS-5  - LMBCS-6  - LMBCS-8  - LMBCS-11  - LMBCS-16  - LMBCS-17  - LMBCS-18  - LMBCS-19  - IBM037  - ebcdic-de  - ebcdic-dk  - IBM278  - IBM280  - IBM284  - IBM285  - IBM290  - IBM297  - IBM420  - IBM424  - IBM500  - ibm-803  - IBM-Thai  - IBM870  - IBM871  - cp875  - IBM918  - cp930  - cp933  - cp935  - cp937  - cp939  - cp1025  - IBM1026  - IBM1047  - cp1097  - cp1112  - cp1122  - cp1123  - ibm-1130  - ibm-1132  - ibm-1137  - IBM01140  - IBM01141  - IBM01142  - IBM01143  - IBM01144  - IBM01145  - IBM01146  - IBM01147  - IBM01148  - IBM01149  - ibm-1153  - ibm-1154  - ibm-1155  - ibm-1156  - ibm-1157  - ibm-1158  - ibm-1160  - ibm-1164  - ibm-1364  - ibm-1371  - ibm-1388  - ibm-1390  - ibm-1399  - ibm-5123  - ibm-8482  - ibm-16684  - ibm-4899  - ibm-4971  - ebcdic-he  - ebcdic-ar  - ibm-37_P100-1995,swaplfnl  - ibm-1047_P100-1995,swaplfnl  - ibm-1140_P100-1997,swaplfnl  - ibm-1142_P100-1997,swaplfnl  - ibm-1143_P100-1997,swaplfnl  - ibm-1144_P100-1997,swaplfnl  - ibm-1145_P100-1997,swaplfnl  - ibm-1146_P100-1997,swaplfnl  - ibm-1147_P100-1997,swaplfnl  - ibm-1148_P100-1997,swaplfnl  - ibm-1149_P100-1997,swaplfnl  - ibm-1153_P100-1999,swaplfnl  - ibm-12712_P100-1998,swaplfnl  - ibm-16804_X110-1999,swaplfnl  - ebcdic-xml-us . Значение по умолчанию: UTF8."
                }
            }
        }
    },
    {
        "name": "ПолучитьСтрокуИзДвоичныхДанных",
        "name_en": "GetStringFromBinaryData",
        "description": "Преобразует двоичные данные в строку с заданной кодировкой текста.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные, КодировкаТекста?: КодировкаТекста): Строка",
                "Параметры": {
                    "ДвоичныеДанные": "Двоичные данные, которые требуется преобразовать в строку.",
                    "КодировкаТекста": "Кодировка текста может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки. Поддерживаемые названия кодировок:  - UTF-8  - UTF-16  - UTF-16BE  - UTF-16LE  - UTF-32  - UTF-32BE  - UTF-32LE  - UTF16_PlatformEndian  - UTF16_OppositeEndian  - UTF32_PlatformEndian  - UTF32_OppositeEndian  - UTF-7  - IMAP-mailbox-name  - SCSU  - BOCU-1  - CESU-8  - ISO-8859-1  - US-ASCII  - gb18030  - IBM367  - iso-8859-2  - iso-8859-3  - iso-8859-4  - iso-8859-5  - iso-8859-6  - iso-8859-7  - iso-8859-8  - iso-8859-9  - iso-8859-13  - iso-8859-15  - cp932  - Shift_JIS  - EUC-JP  - cp33722  - windows-950  - Big5  - cp950  - Big5-HKSCS  - cp1386  - GBK  - GB2312  - GB_2312-80  - cp964  - cp949  - cp949c  - EUC-KR  - ibm-971  - KSC_5601  - ibm-1363  - windows-949  - windows-874  - cp874  - ibm-1162  - cp437  - cp737  - cp775  - cp850  - cp851  - cp852  - cp855  - cp856  - cp857  - cp858  - cp860  - cp861  - cp862  - cp863  - cp864  - cp865  - cp866  - ibm-867  - CP868  - cp869  - KOI8-R  - ibm-901  - ibm-902  - cp922  - KOI8-U  - ibm-4909  - windows-1250  - windows-1251  - windows-1252  - windows-1253  - windows-1254  - windows-1255  - windows-1256  - windows-1257  - windows-1258  - macintosh  - x-mac-greek  - x-mac-cyrillic  - x-mac-centraleurroman  - x-mac-turkish  - hp-roman8  - Adobe-Standard-Encoding  - cp1006  - cp1098  - cp1124  - cp1125  - ibm-1129  - cp1131  - ibm-1133  - ISO-2022-JP  - JIS_Encoding  - ISO-2022-JP-2  - ISO_2022,locale=ja,version=3  - ISO_2022,locale=ja,version=4  - ISO-2022-KR  - ISO_2022,locale=ko,version=1  - ISO-2022-CN  - ISO-2022-CN-EXT  - HZ-GB-2312  - windows-57002  - windows-57003  - windows-57011  - windows-57010  - windows-57007  - windows-57004  - windows-57005  - windows-57008  - windows-57009  - LMBCS-1  - LMBCS-2  - LMBCS-3  - LMBCS-4  - LMBCS-5  - LMBCS-6  - LMBCS-8  - LMBCS-11  - LMBCS-16  - LMBCS-17  - LMBCS-18  - LMBCS-19  - IBM037  - ebcdic-de  - ebcdic-dk  - IBM278  - IBM280  - IBM284  - IBM285  - IBM290  - IBM297  - IBM420  - IBM424  - IBM500  - ibm-803  - IBM-Thai  - IBM870  - IBM871  - cp875  - IBM918  - cp930  - cp933  - cp935  - cp937  - cp939  - cp1025  - IBM1026  - IBM1047  - cp1097  - cp1112  - cp1122  - cp1123  - ibm-1130  - ibm-1132  - ibm-1137  - IBM01140  - IBM01141  - IBM01142  - IBM01143  - IBM01144  - IBM01145  - IBM01146  - IBM01147  - IBM01148  - IBM01149  - ibm-1153  - ibm-1154  - ibm-1155  - ibm-1156  - ibm-1157  - ibm-1158  - ibm-1160  - ibm-1164  - ibm-1364  - ibm-1371  - ibm-1388  - ibm-1390  - ibm-1399  - ibm-5123  - ibm-8482  - ibm-16684  - ibm-4899  - ibm-4971  - ebcdic-he  - ebcdic-ar  - ibm-37_P100-1995,swaplfnl  - ibm-1047_P100-1995,swaplfnl  - ibm-1140_P100-1997,swaplfnl  - ibm-1142_P100-1997,swaplfnl  - ibm-1143_P100-1997,swaplfnl  - ibm-1144_P100-1997,swaplfnl  - ibm-1145_P100-1997,swaplfnl  - ibm-1146_P100-1997,swaplfnl  - ibm-1147_P100-1997,swaplfnl  - ibm-1148_P100-1997,swaplfnl  - ibm-1149_P100-1997,swaplfnl  - ibm-1153_P100-1999,swaplfnl  - ibm-12712_P100-1998,swaplfnl  - ibm-16804_X110-1999,swaplfnl  - ebcdic-xml-us . Значение по умолчанию: UTF8."
                }
            }
        }
    },
    {
        "name": "ПолучитьСтруктуруХраненияБазыДанных",
        "name_en": "GetDBStorageStructureInfo",
        "description": "Получает информацию о структуре таблиц базы данных для переданных в качестве параметра массива имен объектов метаданных или массива объектов метаданных для административных действий с ней.",
        "returns": "Тип: ТаблицаЗначений. Возвращает таблицу значений с описаниями структуры таблиц, индексов и полей базы данных в терминах модели базы данных 1С:Предприятия или используемой СУБД, в зависимости от значения параметра <ИменаБазыДанных>. Если параметр не используется, то возвращаемая таблица значений содержит информацию о структуре таблиц базы данных всех объектов метаданных. Таблица значений включает следующие колонки:  - ИмяТаблицыХранения (StorageTableName) – имя таблицы модели базы данных 1С:Предприятия или базы данных;  - ИмяТаблицы (TableName) – имя таблицы в терминах языка запросов (для тех, у кого оно есть);  - Метаданные (Metadata) – полное имя объекта метаданных;  - Назначение (Purpose) – назначение таблицы:  - Основная (Main) – основная;  - Константы (Constants) – константы;  - Итоги (Totals) – итоги;  - Обороты (Turnovers) – обороты;  - ИтогиПоСчетам (TotalsByAccounts) – итоги по счетам;  - ИтогиПоСчетамССубконто (TotalsByAccountsWithExtDim) – итоги по счетам с субконто;  - ИтогиМеждуСчетами (TotalsBetweenAccounts) – обороты между счетами;  - ИтогиСрезПервых (TotalsSliceFirst) – итоги срез первых регистра сведений;  - ИтогиСрезПоследних (TotalsSliceLast) – итоги срез последних регистра сведений;  - ВидыСубконто (ExtDimensionTypes) – виды субконто;  - ЗначенияСубконто (ExtDimensionsValues) – значения субконто;  - ВытесняющиеВидыРасчета (DisplacingCalculationTypes) – вытесняющие виды расчета;  - ПорядокВытеснения (DisplacementOrder) – порядок вытеснения;  - ВедущиеВидыРасчета (LeadingCalculationTypes) – ведущие виды расчета;  - БазовыеВидыРасчета (BaseCalculationTypes) – базовые виды расчета;  - ПериодыДействия (ActionPeriods) – периоды действия;  - ГраницыПоследовательности (SequenceBoundaries) – границы последовательности;  - ТочкиМаршрута (RoutePoints) – точки маршрута бизнес–процесса;  - ТабличнаяЧасть (TabularSection) – табличная часть;  - РегистрацияИзменений (ChangeRecord) – регистрация изменений;  - РегистрацияИзмененийКонстант (ConstantsChangeRecord) – регистрация изменений констант;  - РегистрацияИзмененийКонфигурации (ConfigChangeRecord) – регистрация изменений конфигурации;  - РегистрацияИзмененийВнешнихСвойствКонфигурации(ConfigExtPropertiesChangeRecord) – регистрация изменений внешних свойств конфигурации;  - CтатистикаЗапросов (AccumRgSt) – таблица статистики запросов;  - НовыеОбороты (AccumRgDl) – таблица новых оборотов по регистру;  - БуферОборотов (AccumRgBf) – таблица буфера оборотов по регистру;  - НастройкиРежимаАгрегатовРегистровНакопления(AccumRgAggOpt) – таблица настроек режима агрегатов регистра накопления;  - КодыИзмеренийАгрегатовРегистровНакопления (AccumRgAggDims) – таблица кодов измерений регистра накопления в агрегатах;  - СписокАгрегатовРегистровНакопления (AccumRgAggGrid) – таблица списка агрегатов регистра накопления;  - ХранилищеСистемныхНастроек (SystemSettings) – хранилище системных настроек;  - ХранилищеОбщихНастроек (CommonSettings) – хранилище общих настроек;  - ХранилищеПользовательскихНастроекОтчетов (ReportsSettings) – хранилище пользовательских настроек отчетов;  - ХранилищеВариантовОтчетов (ReportVariants) – хранилище вариантов отчета;  - ХранилищеНастроекДанныхФорм (FrmDtSettings) – хранилище настроек данных форм;  - АгрегатРегистраНакопления (AccumRegAgg) – таблица агрегата регистра накопления;  - ИсторияРаботыПользователей (UsersHistoryStorage) – история работы пользователей;  - Задача (Task) – таблица задач бизнес-процесса;  - НастройкиХраненияИтоговРегистровБухгалтерии (AccountRegistersOptionsTable) – таблица настроек хранения итогов регистров бухгалтерии;  - НастройкиХраненияИтоговРегистровНакопления (AccumulationRegistersOptionsTable) – таблица настроек хранения итогов регистров накопления;  - НастройкиХраненияИтоговРегистраБухгалтерии (AccountRegisterTotalsOptions) – таблица настроек хранения итогов регистра бухгалтерии;  - НастройкиХраненияИтоговРегистраНакопления (AccumulationRegisterOptionsTable) – таблица настроек хранения итогов регистра накопления;  - НастройкиХраненияИтоговРегистраСведений (InformationRegisterTotalsOptions) – таблица настроек использования итогов среза первых и среза последних регистра сведений;  - НастройкиСтандартногоИнтерфейсаOData (StandardODataInterfaceOptions) – таблица настроек стандартного интерфейса OData;  - ИнформацияОРасширенияхКонфигурации (ConfigurationExtensionsInformation) - информация о расширениях конфигурации, записанных в базу данных;  - ОчередьИсторииДанных (DataHistoryQueue) - таблица очереди истории данных;  - ВерсииИсторииДанных (DataHistoryVersions) - таблица версий истории данных;  - ПоследниеВерсииИсторииДанных (DataHistoryLatestVersions) - таблица последних версий истории данных;  - МетаданныеИсторииДанных (DataHistoryMetadata) - таблица метаданных истории данных;  - НастройкиИсторииДанных (DataHistorySettings) - таблица настроек истории данных;  - ОчередьОбработкиПослеЗаписиИсторииДанных (DataHistoryAfterWriteQueue) - таблица очереди обработки после записи истории данных;  - СписокКопийБазыДанных (DatabaseCopyList) - список копий базы данных;  - НастройкиКопийБазыДанных (DatabaseCopiesSettings) - настройки копий базы данных;  - ОбновленияКопийБазыДанных (DatabaseCopiesUpdates) - обновления копий базы данных;  - СостоянияТаблицКопийБазыДанных (DatabaseCopiesTablesStates) - состояния таблиц копий базы данных;  - ИнформацияЗаполненияКопийБазыДанных (DatabaseCopiesFillingInfo) - информация заполнения копий базы данных;  - ИзмененияЗаполненияКопийБазыДанных (DatabaseCopiesFillingChanges) - изменения заполнения копий базы данных;  - ОбъектыИзмененийЗаполненияКопийБазыДанных (DatabaseCopiesFillingChangesObjects) - объекты изменений заполнения копий базы данных;  - ЖурналыТранзакцийКопийБазыДанных (DatabaseCopiesTransactionsLogs) - журналы транзакций копий базы данных;  - ТаблицыТранзакцийКопийБазыДанных (DatabaseCopiesTransactionsTables) - таблицы транзакций копий базы данных;  - НастройкиПлановСчетов (ChartsOfAccountsOptions) – настройки планов счетов;  - НастройкиПлановВидовХарактеристик (ChartsOfCharacteristicTypesOptions) – настройки планов видов характеристик;  - НастройкиПлановВидовРасчетов (ChartsOfCalculationTypesOptions) – настройки планов видов расчета;  - НастройкиСпискаАгрегатов (AccumRgAggOptions) – настройки списка агрегатов;  - НастройкиСправочников (ReferenceOptions) – настройки справочников;  - ИнициализированныеПредопределенныеДанныеПланаВидовХарактеристик (InitializedPredefinedDataInChartOfCharacteristicTypes) – таблица проинициализированных предопределенных данных плана видов характеристик;  - ИнициализированныеПредопределенныеДанныеПланаСчетов (InitializedPredefinedDataInChartOfAccounts) – таблица инициализированных предопределенных данных плана счетов;  - ИнициализированныеПредопределенныеДанныеПланаВидовРасчета (InitializedPredefinedDataInChartOfCalculationTypes) – таблица проинициализированных предопределенных данных плана расчетов;  - ИнициализированныеПредопределенныеДанныеСправочника (InitializedPredefinedDataInCatalog) – таблица проинициализированных предопределенных данных справочника;  - ОчередьОбработкиПослеЗаписиИсторииДанных (DataHistoryAfterWriteQueue) - очередь обработки после записи истории данных.  - Поля(Fields) – таблица значений с полями таблицы базы данных:  - ИмяПоляХранения (StorageFieldName) – имя поля модели базы данных 1С:Предприятия или базы данных;  - ИмяПоля (FieldName) – имя поля в терминах языка запросов (для тех у кого оно есть);  - Метаданные (Metadata) – полное имя объекта метаданных;  - Индексы (Indexes) – таблица значений с индексами таблицы базы данных;  - ИмяИндексаХранения (StorageIndexName) – имя индекса модели базы данных 1С:Предприятия или базы данных;  - Поля(Fields) – таблица значений с полями индекса:  - ИмяПоляХранения (StorageFieldName) – имя поля модели базы данных 1С:Предприятия или базы данных;  - ИмяПоля (FieldName) – имя поля в терминах языка запросов (для тех у кого оно есть);  - Метаданные (Metadata) – полное имя объекта метаданных.  Примечание 1. Количество и состав таблиц, полей и индексов могут отличаться в зависимости от значения параметра <ИменаБазыДанных>.  Примечание 2. Отображение имен индексов зависит от используемого режима совместимости. В режиме совместимости Версия8_3_10 используются длинные имена индексов, например, \"_Reference31_ByFieldFld36\". В режиме совместимости Версия8_3_11 и выше используются короткие имена индексов, например, \"_Reference31_6\". При смене режима совместимости конфигурации, можно провести реструктуризацию информационной базы, чтобы информация, получаемая с помощью данного метода, соответствовала именам индексов в базе данных.",
        "ref": "classes.ТаблицаЗначений",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбъектыМетаданных?: Массив, ИменаБазыДанных?: Булево): ТаблицаЗначений",
                "Параметры": {
                    "ОбъектыМетаданных": "Массив имен объектов метаданных или массив объектов метаданных, для которых требуется получить структуру таблиц базы данных.",
                    "ИменаБазыДанных": "Определяет, в каких терминах выдается информация о структуре хранения. Истина - в терминах СУБД. Ложь - в терминах модели базы данных 1С:Предприятия. Значение по умолчанию: Ложь."
                }
            }
        }
    },
    {
        "name": "ПолучитьТекущийСеансИнформационнойБазы",
        "name_en": "GetCurrentInfoBaseSession",
        "description": "Возвращает текущий сеанс информационной базы.",
        "returns": "Тип: СеансИнформационнойБазы. "
    },
    {
        "name": "ПолучитьФайл",
        "name_en": "GetFile",
        "description": "Получает файл и сохраняет его в локальную файловую систему пользователя.",
        "returns": "Тип: Булево, Неопределено. Ложь - пользователь отменил операцию сохранения файлов (в интерактивном режиме). В режиме запуска \"Веб-клиент\" всегда возвращает Неопределено.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Адрес: Строка, ИмяФайла?: Строка, Интерактивно?: Булево): Булево",
                "Параметры": {
                    "Адрес": "Расположение данных во временном хранилище или в информационной базе.",
                    "ИмяФайла": "Путь к файлу, в который будут сохранены данные из информационной базы, или только имя файла с расширением.  В неинтерактивном режиме необходимо указать значение параметра, иначе будет вызвано исключение.  В интерактивном режиме может быть не задан. Значение по умолчанию: Пустая строка.",
                    "Интерактивно": "Истина - режим, в котором пользователю показывается диалог, в котором он может выбрать действие с получаемым файлом: запустить его или сохранить по выбранному расположению. В веб-клиенте параметр должен быть равен Истина. В противном случае будет сгенерировано сообщение об ошибке. На мобильной платформе параметр игнорируется и диалоговое окно выбора файла не отображается. Значение по умолчанию: Истина."
                }
            }
        }
    },
    {
        "name": "ПолучитьФайлы",
        "name_en": "GetFiles",
        "description": "Получает набор файлов и сохраняет их в локальную файловую систему пользователя.",
        "returns": "Тип: Булево. Истина - получен хотя бы один файл; Ложь - получение всех файлов отменено пользователем.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ПолучаемыеФайлы: Массив, ПолученныеФайлы?: Массив, РасположениеФайлов?: ДиалогВыбораФайла, Интерактивно?: Булево): Булево",
                "Параметры": {
                    "ПолучаемыеФайлы": "Массив объектов типа ОписаниеПередаваемогоФайла. Каждый объект описывает получаемый файл:  - Хранение - расположение данных во временном хранилище или в информационной базе;  - Имя - это локальный путь, по которому должен быть расположен получаемый файл. Это может быть либо полный путь, либо часть пути, которая будет объединена со значением параметра <РасположениеФайлов>. Это также может быть имя файла или имя каталога (каталогов) + имя файла.",
                    "ПолученныеФайлы": "Массив объектов типа ОписаниеПереданногоФайла. Каждый объект описывает получаемый файл:  - Хранение - расположение данных во временном хранилище или в информационной базе;  - Имя - это локальный путь, по которому должен быть расположен получаемый файл.",
                    "РасположениеФайлов": "Определяет общее расположение помещаемых файлов в локальной файловой системе. Может быть задан строкой либо заранее подготовленным диалогом выбора файлов в режиме выбора каталога или сохранения файлов.",
                    "Интерактивно": "Истина - задан интерактивный режим, в котором пользователю показывается диалог, в котором он может выбрать локальное расположение файлов. Ложь - на сервер передается список файлов, описанный в параметре <ПолучаемыеФайлы>. В интерактивном режиме строка, переданная в параметре <РасположениеФайлов>, рассматривается как начальное значение для выбора пути. Значение по умолчанию: Истина."
                }
            }
        }
    },
    {
        "name": "ПолучитьФорму",
        "name_en": "GetForm",
        "description": "Получает форму или форму клиентского приложения. Перед получением осуществляется поиск уже открытой такой же формы.",
        "returns": "Тип: Форма, ФормаКлиентскогоПриложения, Неопределено. Неопределено - если в обработчике ПриСозданииНаСервере установлен признак отказа от создания формы.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФормы: Строка, Параметры?: Структура, Владелец?: Произвольный, Уникальность?: Произвольный, Окно?: ОкноКлиентскогоПриложения, НавигационнаяСсылка?: Строка): Форма",
                "Параметры": {
                    "ИмяФормы": "Имя формы. Образуется как полный путь к объекту метаданных Форма (например, \"Справочник.Контрагенты.Форма.ФормаОбъекта\", \"ОбщаяФорма.ФормаСохраненияФайла\") или как полный путь к прикладному объекту, дополненный именем формы по умолчанию (например, \"Справочник.Товары.ФормаВыбора\"). Имена форм по умолчанию:  - ФормаОбъекта (ObjectForm) - форма объекта по умолчанию;  - ФормаГруппы (FolderForm) - форма группы по умолчанию;  - ФормаЗаписи (RecordForm) - форма записи регистра по умолчанию;  - ФормаСписка (ListForm) - форма списка по умолчанию;  - ФормаВыбора (ChoiceForm) - форма выбора по умолчанию;  - ФормаВыбораГруппы (FolderChoiceForm) - форма выбора группы по умолчанию;  - ФормаКонстант (ConstantsForm) - форма констант по умолчанию для обычного режима, установленная как форма констант для конфигурации;  - Форма (Form) - форма константы, отчета и обработки по умолчанию;  - ОбщаяФорма (CommonForm) - общая форма;  - ФормаНастроек (SettingsForm) - форма настроек отчета по умолчанию;  - ФормаЗагрузки (LoadForm) - форма загрузки настроек;  - ФормаСохранения (SaveForm) - форма сохранения настроек;  - ФормаВарианта (VariantForm) - форма редактирования варианта отчета;  - ФормаЗагрузкиПользовательскихНастроекОтчетов (ReportUserSettingsLoadForm) - форма загрузки настроек отчета;  - ФормаСохраненияПользовательскихНастроекОтчетов (ReportUserSettingsSaveForm) - форма сохранения настроек отчета;  - ФормаЗагрузкиВариантовОтчетов (ReportVariantsLoadForm) - форма загрузки варианта отчета;  - ФормаСохраненияВариантовОтчетов (ReportVariantsSaveForm) - форма сохранения варианта отчета;  - ФормаЗагрузкиНастроекДанныхФорм (FormDataSettingsLoadForm) - форма загрузки настроек данных форм;  - ФормаСохраненияНастроекДанныхФорм (FormDataSettingsSaveForm) - форма сохранения настроек данных форм;  - ФормаПоиска (SearchForm) - форма полнотекстового поиска в данных;  - ФормаИсторииИзмененийИсторииДанных (DataHistoryChangeHistoryForm) - форма истории изменений, отображает список версий данных;  - ФормаДанныхВерсииИсторииДанных (DataHistoryVersionDataForm) - форма данных версии, отображающая отчет \"Данные версии\";  - ФормаРазличийВерсийИсторииДанных (DataHistoryVersionDifferencesForm) - форма различий версий истории данных, отображающая отчет \"Различия версий\".  - Например, для получения общей формы \"ОбщиеНастройки\" следует в модуле написать код: Форма = ПолучитьФорму(\"ОбщаяФорма.ОбщиеНастройки\"); Для внешних отчетов и обработок имя формы задается следующим образом:  - ВнешнийОтчет.<имя отчета>.Форма.<имя формы>;  - ВнешнийОтчет.<имя отчета>.<имя стандартной формы>;  - ВнешняяОбработка.<имя обработки>.Форма.<имя формы>;  - ВнешняяОбработка.<имя обработки>.<имя стандартной формы>. При этом внешний отчет или обработка должны быть предварительно зарегистрированы в системе.",
                    "Параметры": "Параметры формы. Ключ структуры - имя параметра, а значение - значение параметра формы. Имя элемента должно совпадать с именем параметра структуры. П =НовыйСтруктура(\"Ключ\", Поставщик); Форма = ПолучитьФорму(\"Справочник.Контрагенты.ФормаОбъекта\", П); Форма.Открыть();",
                    "Владелец": "Владелец формы - форма или элемент управления другой формы.",
                    "Уникальность": "В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. Если будет найдена форма с таким же ключом уникальности, вместо открытия новой формы будет активизирована найденная форма. Ложь - искать форму с ключом уникальности по умолчанию, Истина - не искать форму вообще, любое другое значение устанавливает ключ уникальности, по которому будет произведен поиск. Значение по умолчанию: Ложь.",
                    "Окно": "Окно приложения, в котором будет открыта форма.  Применимо только для формы клиентского приложения. Окном может быть только основное окно приложения или вспомогательное окно формы.",
                    "НавигационнаяСсылка": "Если содержит значение, отличное от Неопределено, то это значение присваивается свойству НавигационнаяСсылка формы, полученной в результате вызова данного метода, и свойство АвтоНавигационнаяСсылка этой формы устанавливается в Ложь. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "ПолучитьФункциональнуюОпцию",
        "name_en": "GetFunctionalOption",
        "description": "Получает значения функциональной опции.",
        "returns": "Тип: Произвольный. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Имя: Строка, Параметры?: Структура): Произвольный",
                "Параметры": {
                    "Имя": "Имя функциональной опции в соответствии с установленными языковыми настройками.",
                    "Параметры": "Параметры функциональных опций, необходимые для получения значения функциональной опции. Имеет смысл только для функциональных опций, источниками значения которых является реквизит справочника или ресурс регистра сведений. Для опций констант этот параметр игнорируется. Ключ элемента структуры задает имя параметра, которое должно соответствовать имени одному из объектов метаданных типа ОбъектМетаданных: ПараметрФункциональныхОпций. Значение элемента структуры должно содержать значение параметра."
                }
            }
        }
    },
    {
        "name": "ПолучитьФункциональнуюОпциюИнтерфейса",
        "name_en": "GetInterfaceFunctionalOption",
        "description": "Получает значение функциональной опции применительно к командному интерфейсу.",
        "returns": "Тип: Произвольный. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Имя: Строка): Произвольный",
                "Параметры": {
                    "Имя": "Имя функциональной опции."
                }
            }
        }
    },
    {
        "name": "ПолучитьЧасовойПоясИнформационнойБазы",
        "name_en": "GetInfoBaseTimeZone",
        "description": "Получает строку идентификатора часового пояса информационной базы.",
        "returns": "Тип: Строка, Неопределено. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59. Неопределено, если он не был установлен."
    },
    {
        "name": "ПользователиWindows",
        "name_en": "WindowsUsers",
        "description": "Предоставляет доступ к информации о доменах и пользователях операционной системы.",
        "returns": "Тип: ТаблицаЗначений, Массив. Информация возвращается в виде таблицы значений, в колонках которой содержится следующая информация:  - ИмяДомена (DomainName) - имя домена (тип Строка);  - ИмяСервера (ServerName) - имя компьютера, являющегося контроллером домена (тип Строка);  - Пользователи (Users) - массив строк с именами пользователей домена;  - Локальный (Local) - признак того, что этому домену принадлежат локальные пользователи данного компьютера.",
        "ref": "classes.ТаблицаЗначений"
    },
    {
        "name": "ПользователиОС",
        "name_en": "OSUsers",
        "description": "Предоставляет доступ к информации о доменах и пользователях операционной системы.",
        "returns": "Тип: ТаблицаЗначений, Массив. Информация возвращается в виде таблицы значений, в колонках которой содержится следующая информация:  - ИмяДомена (DomainName) - имя домена (тип Строка);  - ИмяСервера (ServerName) - имя компьютера, являющегося контроллером домена (тип Строка);  - Пользователи (Users) - массив строк с именами пользователей домена;  - Локальный (Local) - признак того, что этому домену принадлежат локальные пользователи данного компьютера.",
        "ref": "classes.ТаблицаЗначений"
    },
    {
        "name": "ПоместитьВоВременноеХранилище",
        "name_en": "PutToTempStorage",
        "description": "Сохраняет сериализуемое значение во временное хранилище.",
        "returns": "Тип: Строка. Адрес во временном хранилище.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Данные: Произвольный, Адрес?: УникальныйИдентификатор): Строка",
                "Параметры": {
                    "Данные": "Данные, которые необходимо поместить во временное хранилище.",
                    "Адрес": "Уникальный идентификатор формы, во временное хранилище которой надо поместить данные и вернуть новый адрес. Или адрес во временном хранилище, по которому надо поместить данные. Адрес должен быть получен ранее с помощью данного метода.  В случае, если передается УникальныйИдентификатор формы или адрес в хранилище, то значение будет автоматически удалено после закрытия этой формы. Если передан УникальныйИдентификатор, не являющийся уникальным идентификатором формы, то значение будет удалено после завершения сеанса пользователя. Если передан адрес уже удаленного значения, будет сгенерировано исключение. Если параметр не указан, помещенное значение будет удалено после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            }
        }
    },
    {
        "name": "ПоместитьФайл",
        "name_en": "PutFile",
        "description": "Помещает файл из локальной файловой системы во временное хранилище.",
        "returns": "Тип: Булево. Ложь - в параметре <Интерактивно> установлен интерактивный режим (Истина) и пользователь отказался от выполнения операции в диалоге выбора файла.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Адрес?: Строка, НачальноеИмяФайла?: Строка, ВыбранноеИмяФайла?: Строка, Интерактивно?: Булево, УникальныйИдентификаторФормы?: УникальныйИдентификатор): Булево",
                "Параметры": {
                    "Адрес": "Адрес во временном хранилище, по которому должны быть помещены данные. Если значение параметра не задано или является пустой строкой, то будет создан новый файл. Расположение нового файла возвращается в данном параметре.",
                    "НачальноеИмяФайла": "Путь к файлу, данные из которого будут помещены во временное хранилище. Если параметр <Интерактивно> = Истина, то отображается диалог выбора файла и выбранный в диалоге путь возвращается в параметре <ВыбранноеИмяФайла>.",
                    "ВыбранноеИмяФайла": "В параметре возвращается путь к файлу, указанный в диалоге выбора файла. Для неинтерактивного режима выбранное имя файла соответствует начальному имени файла. В веб-клиенте значение параметра зависит от типа браузера. Для FireFox 3 в параметре возвращается только имя файла без пути. Для Internet Explorer возвращаемое значение зависит от настроек безопасности.",
                    "Интерактивно": "Указывает использование интерактивного режима, при котором отображается диалог выбора файла. Этот файл будет помещен по указанному в параметре <Адрес> адресу во временное хранилище или по новому адресу, если второй параметр метода опущен.  Если значение параметра Истина, то метод отобразит стандартное диалоговое окно выбора файла, в котором можно выбрать файл для помещения в хранилище. В этом случае выбранный путь возвращается в параметре <Выбранное имя файла>. В веб-клиенте параметр должен быть равен Истина. В противном случае будет сгенерировано сообщение об ошибке. Значение по умолчанию: Истина.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор управляемой формы.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, помещенное значение будет удалено, после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            }
        }
    },
    {
        "name": "ПоместитьФайлы",
        "name_en": "PutFiles",
        "description": "Помещает набор файлов из локальной файловой системы во временное хранилище.",
        "returns": "Тип: Булево. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ПомещаемыеФайлы?: Строка, ПомещенныеФайлы?: Массив, НаборПомещаемыхФайлов?: ДиалогВыбораФайла, Интерактивно?: Булево, УникальныйИдентификаторФормы?: УникальныйИдентификатор): Булево",
                "Параметры": {
                    "ПомещаемыеФайлы": "Массив объектов типа ОписаниеПередаваемогоФайла. Каждый объект описывает получаемый файл:  - Хранение - расположение данных во временном хранилище;  - Имя - это локальный путь, по которому должен быть получен файл. Массив может быть заполнен полностью, в этом случае известен набор помещаемых файлов и адреса, по которым они должны быть сохранены. Массив может быть заполнен частично, у элементов массива заполнены только имена. В этом случае, набор помещаемых файлов определен, а места хранения неизвестны. Файлы будут размещены в новых временных хранилищах. Массив может быть не заполнен. В этом случае набор помещаемых файлов определяется по значениям остальных параметров метода (поиском по маске либо интерактивным выбором).",
                    "ПомещенныеФайлы": "Массив объектов типа ОписаниеПереданногоФайла. Каждый объект описывает помещенный файл: Хранение - расположение данных во временном хранилище; Имя - это локальный путь, по которому получен файл.",
                    "НаборПомещаемыхФайлов": "Определяет набор помещаемых файлов. Может быть задан строкой поиска для метода НайтиФайлы либо заранее подготовленным диалогом выбора файлов в режиме открытия файлов. Если параметр определен, то параметр <ПомещаемыеФайлы> должен быть не определен либо быть пустым массивом.",
                    "Интерактивно": "Указывает использование интерактивного режима, при котором пользователю показывается диалог, в котором он может выбрать набор помещаемых файлов.",
                    "УникальныйИдентификаторФормы": "Уникальный идентификатор формы, который можно получить с помощью свойства УникальныйИдентификатор управляемой формы.  Файл помещается во временное хранилище и автоматически удаляется после удаления объекта формы. Если параметр не указан, помещенное значение будет удалено, после очередного запроса сервера из общего модуля, при контекстном и неконтекстном серверном вызове из формы, при серверном вызове из модуля команды или при получении формы."
                }
            }
        }
    },
    {
        "name": "Прав",
        "name_en": "Right",
        "description": "Выбирает последние справа символы строки.",
        "returns": "Тип: Строка. Строка выбранных символов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, ЧислоСимволов: Число): Строка",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "ЧислоСимволов": "Количество выбираемых символов."
                }
            }
        }
    },
    {
        "name": "ПравоДоступа",
        "name_en": "AccessRight",
        "description": "Показывает установку права доступа к объекту метаданных для текущего пользователя на момент выполнения текущей строчки кода.",
        "returns": "Тип: Булево. Право доступа для проверяемого объекта с учетом прав на родительский объект и значения свойства \"Независимые права подчиненных объектов\" для роли. Истина - право доступа к объекту установлено; Ложь - в противном случае. Если в момент выполнения метода установлен привилегированный режим, то всегда возвращается Истина.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Право: Строка, ОбъектМетаданных: ОбъектМетаданных: Куб, Пользователь_Роль?: ПользовательИнформационнойБазы, СтандартныйРеквизитСтандартнаяТабличнаяЧасть?: Строка): Булево",
                "Параметры": {
                    "Право": "Название права доступа. Могут быть использованы следующие значения:  - Чтение (Read) - чтение;  - Добавление (Insert) - добавление;  - Изменение (Update) - изменение;  - Удаление (Delete) - удаление;  - Проведение (Posting) - проведение документов;  - ОтменаПроведения (UndoPosting) - отмена проведения документов;  - Просмотр (View) - просмотр;  - ИнтерактивноеДобавление (InteractiveInsert) - интерактивное добавление;  - Редактирование (Edit) - редактирование;  - ИнтерактивноеУдаление (InteractiveDelete) - интерактивное непосредственное удаление;  - ИнтерактивнаяПометкаУдаления (InteractiveSetDeletionMark) - интерактивная пометка на удаление;  - ИнтерактивноеСнятиеПометкиУдаления (InteractiveClearDeletionMark) - интерактивное снятие пометки на удаление;  - ИнтерактивноеУдалениеПомеченных (InteractiveDeleteMarked) - интерактивное удаление помеченных объектов;  - ИнтерактивноеПроведение (InteractivePosting) - интерактивное проведение;  - ИнтерактивноеПроведениеНеОперативное (InteractivePostingRegular) - интерактивное проведение (стандартными командами форм) документа в неоперативном режиме;  - ИнтерактивнаяОтменаПроведения (InteractiveUndoPosting) - интерактивная отмена проведения;  - ИнтерактивноеИзменениеПроведенных (InteractiveChangeOfPosted) - интерактивное редактирование проведенного документа. Если право не установлено, то пользователь не может проведенный документ удалить, установить пометку удаления, перепровести или сделать непроведенным. Форма такого документа открывается в режиме просмотра;  - ВводПоСтроке (InputByString) - использование режима ввода по строке;  - УправлениеИтогами (TotalsControl) - управление итогами регистра бухгалтерии и регистра накопления (установка периода, по который рассчитаны итоги, и пересчет итогов);  - Использование (Use) - использование;  - Администрирование (Administration) - право на выполнение административных действий над всей информационной базой и редактирование списка пользователей (право для конфигурации); требует наличия права \"АдминистрированиеДанных\";  - АдминистрированиеДанных (DataAdministration) - право на административные действия над данными;  - МонопольныйРежим (ExclusiveMode) - использование монопольного режима;  - АктивныеПользователи (ActiveUsers) - просмотр списка активных пользователей;  - ЖурналРегистрации (EventLog) - журнал регистрации;  - ВнешнееСоединение (ExternalConnection) - внешнее соединение;  - Automation (Automation) - использование automation;  - ИнтерактивноеОткрытиеВнешнихОбработок (InteractiveOpenExtDataProcessors) - интерактивное открытие внешних обработок;  - ИнтерактивноеОткрытиеВнешнихОтчетов (InteractiveOpenExtReports) - интерактивное открытие внешних отчетов;  - Получение (Get) - получение значения, не хранящегося в базе данных;  - Установка (Set) - установка значения, не сохраняемого в базе данных;  - ИнтерактивнаяАктивация (InteractiveActivate) - интерактивная активация;  - Старт (Start) - старт бизнес-процесса;  - ИнтерактивныйСтарт (InteractiveStart) - интерактивный старт бизнес-процесса;  - Выполнение (Execute) - выполнение задачи;  - ИнтерактивноеВыполнение (InteractiveExecute) - интерактивное выполнение задачи;  - Вывод (Output) - вывод на печать, запись и копирование в буфер обмена;  - ОбновлениеКонфигурацииБазыДанных (UpdateDataBaseConfiguration) - обновление конфигурации базы данных;  - ТонкийКлиент (ThinClient) - право запуска тонкого клиента;  - ВебКлиент (WebClient) - право запуска веб-клиента;  - ТолстыйКлиент (ThickClient) - право запуска толстого клиента;  - РежимВсеФункции (AllFunctionsMode) - право на использования режима \"Все функции\";  - СохранениеДанныхПользователя (SaveUserData) - право на сохранение данных пользователя (настроек, избранного, истории);  - ИзменениеСтандартнойАутентификации (StandardAuthenticationChange) - пользователь имеет право изменять свои сохраненные параметры стандартной аутентификации внешнего источника данных;  - ИзменениеСтандартнойАутентификацииСеанса (SessionStandardAuthenticationChange) - пользователь имеет право изменять параметры стандартной аутентификации внешнего источника данных для текущего сеанса;  - ИзменениеАутентификацииОССеанса (SessionOSAuthenticationChange) - пользователь имеет право изменять параметры стандартной аутентификации внешнего источника данных для текущего сеанса и текущего пользователя;  - ИнтерактивноеУдалениеПредопределенныхДанных (InteractiveDeletePredefinedData) - интерактивное удаление предопределенных данных;  - ИнтерактивнаяПометкаУдаленияПредопределенныхДанных (InteractiveSetDeletionMarkPredefinedData) - интерактивная пометка предопределенных данных;  - ИнтерактивноеСнятиеПометкиУдаленияПредопределенныхДанных (InteractiveClearDeletionMarkPredefinedData) - интерактивное снятие пометки предопределенных данных;  - ИнтерактивноеУдалениеПомеченныхПредопределенныхДанных (InteractiveDeleteMarkedPredefinedData) - интерактивное удаление помеченных предопределенных данных;  - АдминистрированиеРасширенийКонфигурации (ConfigurationExtensionsAdministration) - право на администрирование расширений конфигурации (как интерактивно, так и программно) в режиме \"1С:Предприятие\". В безопасном режиме администрирование расширений невозможно;  - ЧтениеИсторииДанных (ReadDataHistory) - чтение версий данных;  - ПросмотрИсторииДанных (ViewDataHistory) - интерактивный просмотр записей истории данных.  - ЧтениеИсторииОтсутствующихДанных (ReadDataHistoryOfMissingData) - чтение версий отсутствующих данных;  - ИзменениеИсторииДанных (UpdateDataHistory) - изменение версий;  - ИзменениеИсторииОтсутствующихДанных (UpdateDataHistoryOfMissingData) - изменение версий отсутствующих данных;  - ИзменениеНастроекИсторииДанных (UpdateSettingsDataHistory) - изменение настроек истории данных;  - ИзменениеКомментарияИсторииДанных (UpdateDataHistoryVersionComment) - изменение комментария версии истории данных;  - РедактированиеКомментарияВерсииИсторииДанных (EditDataHistoryVersionComment) - интерактивное изменение комментария версии истории данных;  - ПереходНаВерсиюИсторииДанных (SwitchToDataHistoryVersion) - переход на версию истории данных;  - РегистрацияИнформационнойБазыСистемыВзаимодействия (CollaborationSystemInfoBaseRegistration) - регистрация информационной базы в системе взаимодействия.  - МобильныйКлиент (MobileClient) - право запуска мобильного клиента;  - РежимОсновногоОкнаОбычный (MainWindowModeNormal) - запуск клиентского приложения в режиме основного окна \"Обычный\";  - РежимОсновногоОкнаРабочееМесто (MainWindowModeWorkplace) - запуск клиентского приложения в режиме основного окна \"Рабочее место\";  - РежимОсновногоОкнаВстроенноеРабочееМесто (MainWindowModeEmbeddedWorkplace) - запуск клиентского приложения в режиме основного окна \"Встроенное рабочее место\";  - РежимОсновногоОкнаПолноэкранноеРабочееМесто (MainWindowModeFullscreenWorkplace) - запуск клиентского приложения в режиме основного окна \"Полноэкранное рабочее место\";  - РежимОсновногоОкнаКиоск (MainWindowModeKiosk) - запуск клиентского приложения в режиме основного окна \"Киоск\".  - РежимТехническогоСпециалиста (TechnicalSpecialistMode) - право на использования режима \"Функции для технического специалиста\";",
                    "ОбъектМетаданных": "Объект метаданных.",
                    "Пользователь_Роль": "Указывает пользователя или роль, для которых нужно определить доступность права. При этом возвращается значение права так, как оно определено в конфигурации.",
                    "СтандартныйРеквизитСтандартнаяТабличнаяЧасть": "Необязательное имя стандартного реквизита, имя стандартного реквизита стандартной табличной части или имя стандартной табличной части.  Для стандартного реквизита стандартной табличной части, имя табличной части указывается перед точкой до имени реквизита. Например: \"ВидыСубконто.ВидСубконто\"."
                }
            }
        }
    },
    {
        "name": "ПредопределенноеЗначение",
        "name_en": "PredefinedValue",
        "description": "Возвращает ссылку на предопределенный элемент из предопределенных данных, прикладных перечислений и точек маршрута бизнес-процессов, а также значения системных перечислений.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПредопределенногоЗначения: Строка)",
                "Параметры": {
                    "ИмяПредопределенногоЗначения": "Содержит полный путь до предопределенного значения, включая имя самого значения. Например, \"ПланСчетов.Основной.Счет41\". Синтаксис описания предопределенного значения совпадает с синтаксисом оператора ЗНАЧЕНИЕ языка запросов: <Тип предопределенного значения>.<Имя объекта метаданных>.<Значение>. Тип предопределенного значения> может быть:   - Справочник (Catalog);  - ПланВидовХарактеристик (ChartOfCharacteristicTypes);  - ПланСчетов (ChartOfAccounts);  - ПланВидовРасчета (ChartOfCalculationTypes);  - Документ (Document) - только пустая ссылка;  - Перечисление (Enum);  - БизнесПроцесс (BusinessProcess) - только пустая ссылка и получение точек бизнес процесса;  - Задача (Task) - только пустая ссылка. В качестве <Имя объекта метаданных> указывается имя объекта метаданных, как оно задано в конфигураторе.  Для перечислений, определенных в конфигурации, <Значение> указывается как имя соответствующего объекта метаданных типа ЗначениеПеречисления. Для всех остальных типов предопределенных значений <Значение> указывается как имя предопределенного элемента данных, как оно указано в конфигураторе, или ПустаяСсылка для указания пустой ссылки. Для точек маршрутов бизнес-процессов имя предопределенного значения имеет вид: БизнесПроцесс.<Имя объекта метаданных>.ТочкаМаршрута.<Имя точки маршрута>. Также метод может быть использован для получения значения системного перечисления. В этом случае параметр формируется как: <ИмяСистемногоПеречисления>.<ИмяЗначенияСистемногоПеречисления>."
                }
            }
        }
    },
    {
        "name": "ПредставлениеКодаЛокализации",
        "name_en": "LocaleCodePresentation",
        "description": "Локализованное наименование языка с заданным идентификатором.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(КодЛокализации: Строка): Строка",
                "Параметры": {
                    "КодЛокализации": "Код локализации, для которого должно быть получено представление."
                }
            }
        }
    },
    {
        "name": "ПредставлениеПериода",
        "name_en": "PeriodPresentation",
        "description": "Формирует внешнее представление периода, заданного датами начала и окончания периода.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДатаНачалаПериода: Дата, ДатаОкончанияПериода: Дата, ФорматнаяСтрока?: Строка): Строка",
                "Параметры": {
                    "ДатаНачалаПериода": "Дата начала периода.",
                    "ДатаОкончанияПериода": "Дата окончания периода.",
                    "ФорматнаяСтрока": "Определяет способ форматирования периода. Может содержать следующие параметры:  - Л/L - код локализации. Если не указан, берется код локализации по умолчанию. Если система не поддерживает форматирование периода с указанной локализацией, генерируется исключительная ситуация.  - ФП/FP - признак \"финансовый период\". Влияет на форматирование в случае, если указанный датами период соответствует первому полугодию или первым 9 месяцам года. Если не указан, признак не установлен. Коды региональных установок, использование которых допустимо в форматной строке (в формате Код - Язык):  - en_US - Английский,  - az – Азербайджанский,  - be_BY – Белорусский,  - bg_BG – Болгарский,  - hu – Венгерский,  - vi_VN – Вьетнамский,  - ka_GE – Грузинский,  - kk_KZ – Казахский,  - lv_LV – Латышский,  - lt_LT – Литовский,  - de_DE – Немецкий,  - pl_PL – Польский,  - ro_RO – Румынский,  - ru_RU – Русский,  - tr_TR – Турецкий,  - tk – Туркменский,  - uk_UA – Украинский,  - fi_FI – Финский,  - fr_CA – Французский,  - et_EE – Эстонский.  Пример форматной строки: Л=en_US; ФП=Истина Значение по умолчанию: Пустая строка."
                }
            }
        }
    },
    {
        "name": "ПредставлениеПрава",
        "name_en": "RightPresentation",
        "description": "Получает представление права по имени права.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПрава?: Строка): Строка",
                "Параметры": {
                    "ИмяПрава": "Содержит имя права, для которого нужно получить представление."
                }
            }
        }
    },
    {
        "name": "ПредставлениеПриложения",
        "name_en": "ApplicationPresentation",
        "description": "Позволяет получить локализованное название приложения.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяПриложения: Строка): Строка",
                "Параметры": {
                    "ИмяПриложения": "Строка, идентифицирующая приложение. Допустимые имена:  - 1CV8 - идентификатор приложения 1С:Предприятие в режиме запуска \"Толстый клиент\";  - 1CV8C - идентификатор приложения 1С:Предприятие в режиме запуска \"Тонкий клиент\";  - AgentStandardCall - стандартный вызов;  - BackgroundJob - идентификатор сессии обработки заданий;  - COMConnection - идентификатор сессии внешнего соединения;  - COMConsole - идентификатор административной сессии внешнего соединения 1С:Предприятия через COM;  - Debugger - идентификатор сессии отладчика;  - Designer - идентификатор приложения Конфигуратор;  - JobScheduler - идентификатор сессии планировщика заданий;  - OpenIDProvider - провайдер OpenID;  - RAS - идентификатор сервера администрирования;  - SrvrConsole - идентификатор сессии консоли кластера;  - SystemBackgroundJob - идентификатор системного фонового задания;  - WebClient - идентификатор приложения 1С:Предприятие в режиме запуска \"Веб-клиент\";  - WSConnection - идентификатор сессии Web-сервиса."
                }
            }
        }
    },
    {
        "name": "ПредставлениеСобытияЖурналаРегистрации",
        "name_en": "EventLogEventPresentation",
        "description": "Позволяет получить локализованное название события.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИдентификаторСобытия: Строка): Строка",
                "Параметры": {
                    "ИдентификаторСобытия": "Строка, идентифицирующая событие.  - _$Access$_.Access - Доступ. Доступ; Записывается при следующих обстоятельствах:   - при регистрации фактов успешного доступа пользователей информационной базы к тем или иным данным,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка.  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) в этом случае имеет следующий состав:   - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались. Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Access$_.AccessDenied - Доступ. Отказ в доступе; Записывается в следующих случаях:   - при регистрации фактов отказа в доступе к тем или иным данным пользователям информационной базы,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка,  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) имеет следующий состав:    - Для ошибки доступа к объекту (не ограничение доступа к данным):    - Право (Right) - имя нарушенного права;  - Для ошибки ограничения доступа к данным:    - Действие (Action) - Действие, которое выполнялось с данными, для объектных таблиц: Чтение (Read), Добавление (Insert), Изменение (Update), Удаление (Delete); для не объектных таблиц, все что не Чтение, то Изменение;  - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались.Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Data$_.Delete - Данные. Удаление;  - _$Data$_.DeletePredefinedData - Данные. Удаление предопределенных данных;  - _$Data$_.DeleteVersions - Данные. Удаление версий;  - _$Data$_.New - Данные. Добавление;  - _$Data$_.NewPredefinedData - Данные. Добавление предопределенных данных;  - _$Data$_.NewVersion - Данные. Добавление версии;  - _$Data$_.Post - Данные. Проведение;  - _$Data$_.PredefinedDataInitialization - Данные. Инициализация предопределенных данных;  - _$Data$_.PredefinedDataInitializationDataNotFound - Данные. Инициализация предопределенных данных. Данные не найдены;  - _$Data$_.SetPredefinedDataInitialization - Данные. Установка инициализации предопределенных данных;  - _$Data$_.SetStandardODataInterfaceContent - Данные. Изменение состава стандартного интерфейса OData;  - _$Data$_.TotalsMaxPeriodUpdate - Данные. Изменение максимального периода рассчитанных итогов;  - _$Data$_.TotalsMinPeriodUpdate - Данные. Изменение минимального периода рассчитанных итогов;  - _$Data$_.Unpost - Данные. Отмена проведения;  - _$Data$_.Update - Данные. Изменение;  - _$Data$_.UpdatePredefinedData - Данные. Изменение предопределенных данных;  - _$Data$_.VersionCommentUpdate - Данные. Изменение комментария версии;  - _$InfoBase$_.ConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.ConfigUpdate - Информационная база. Изменение конфигурации;  - _$InfoBase$_.DBConfigBackgroundUpdateCancel - Информационная база. Отмена фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateFinish - Информационная база. Завершение фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateResume - Информационная база. Продолжение (после приостановки) процесса фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateStart - Информационная база. Запуск фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateSuspend - Информационная база. Приостановка (пауза) процесса фонового обновления;  - _$InfoBase$_.DBConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.DBConfigExtensionUpdateError  - Информационная база. Ошибка изменения расширения конфигурации; Поле Данные заполняется аналогично событию _$InfoBase$_.DBConfigExtensionUpdate (при возможности вывода этих данных);  - _$InfoBase$_.DBConfigUpdate - Информационная база. Изменение конфигурации базы данных;  - _$InfoBase$_.DBConfigUpdateStart - Информационная база. Запуск обновления конфигурации базы данных;  - _$InfoBase$_.DumpError - Информационная база. Ошибка выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpFinish - Информационная база. Окончание выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpStart - Информационная база. Начало выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.EraseData - Информационная база. Удаление данных информационной баз;  - _$InfoBase$_.EventLogReduce - Информационная база. Сокращение журнала регистрации; записываются при сокращении журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Дата (Date) - Дата;  - _$InfoBase$_.EventLogReduceError - Информационная база. Ошибка сокращения журнала регистрации; записываются при ошибках сокращения журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.EventLogReduce (при возможности вывода этих данных);  - _$InfoBase$_.EventLogSettingsUpdate - Информационная база. Изменение параметров журнала регистрации;  - _$InfoBase$_.EventLogSettingsUpdateError - Информационная база. Изменение настроек журнала регистрации; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные (Структура) заполняется структурой со следующим составом свойств:  - При изменении уровня событий и/или периода разделения журнала регистрации(записываются только измененные параметры):  - Уровни (Levels): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При изменении формата журнала регистрации:  - ФорматЖурналаРегистрации (EventLogStructure): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При настройке использования событий журнала регистрации (с помощью метода УстановитьИспользованиеСобытияЖурналаРегистрации):  - ИмяСобытия (EventName) - Строка;   - СобытиеРегистрируется (EventIsLogged) - Булево;  - _$InfoBase$_.InfoBaseAdmParamsUpdate - Информационная база. Изменение параметров информационной базы;  - _$InfoBase$_.InfoBaseAdmParamsUpdateError - Информационная база. Ошибка изменения параметров информационной базы; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.InfoBaseAdmParamsUpdate (при возможности вывода этих данных);  - _$InfoBase$_.IntegrationServiceActiveUpdate - Информационная база. Изменение активности сервиса интеграции;  - _$InfoBase$_.IntegrationServiceSettingsUpdate - Информационная база. Изменение настроек сервиса интеграции;  - _$InfoBase$_.MasterNodeUpdate - Информационная база. Изменение главного узла;  - _$InfoBase$_.PredefinedDataUpdate - Информационная база. Обновление предопределенных данных;  - _$InfoBase$_.RegionalSettingsUpdate - Информационная база. Изменение региональных установок;  - _$InfoBase$_.RestoreError - Информационная база. Ошибка загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreFinish - Информационная база. Окончание загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreStart - Информационная база. Начало загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.SecondFactorAuthTemplateDelete - Информационная база. УдалениеШаблонаВторгоФактораАутентификации; записывается при удалении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateNew - Информационная база. ДобавлениеШаблонаВторгоФактораАутентификации; записывается при создании шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateUpdate - Информационная база. ИзменениеШаблонаВторгоФактораАутентификации; записывается при изменении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SetPredefinedDataUpdate - Информационная база. Установить обновление предопределенных данных;  - _$InfoBase$_.TARImportant - Тестирование и исправление. Ошибка;  - _$InfoBase$_.TARInfo - Тестирование и исправление. Сообщение;  - _$InfoBase$_.TARMess - Тестирование и исправление. Предупреждение;  - _$Job$_.Cancel - Фоновое задание. Отмена;  - _$Job$_.Fail - Фоновое задание. Ошибка выполнения;  - _$Job$_.Start - Фоновое задание. Запуск;  - _$Job$_.Succeed - Фоновое задание. Успешное завершение;  - _$Job$_.Terminate - Фоновое задание. Принудительное завершение;  - _$OpenIDProvider$_.NegativeAssertion - Провайдер OpenID. Отклонено; записывается базой, выступающей в роли провайдера OpenID, при отправке отрицательного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию.  - _$OpenIDProvider$_.PositiveAssertion - Провайдер OpenID. Подтверждено; записывается базой, выступающей в роли провайдера OpenID, при отправке положительного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию;  - _$PerformError$_ - Ошибка выполнения;  - _$Session$_.Authentication - Сеанс. Аутентификация; выполняется только при удачной аутентификации. Для события Аутентификация записываются поля Пользователь и ИмяПользователя. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - КодДополненияИмениПользователя (UserNameAdditionCode)- Строка. Код дополнения имения пользователя. При наличии дополнения имени пользователя при вводе имени пользователя в процессе аутентификации.  - В случае аутентификации при помощи OpenID поле Данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID;  - ИдентификаторПользователяПровайдераOpenID (OpenIDProviderUserID) - идентификатор пользователя на провайдере.  - _$Session$_.AuthenticationError - Сеанс. Ошибка аутентификации; выполняется только при ошибке аутентификации. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - В случае аутентификации при помощи OpenID поле данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID  - _$Session$_.AuthenticationFirstFactor - Сеанс. Аутентификация первый фактор; Записывается только если у пользователя включена двухфакторная аутентифкация. Для события Аутентификация первый фактор поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - _$Session$_.ConfigExtensionApplyError - Сеанс. Ошибка применения расширения конфигурации; записывается, если в процессе применений расширения произошла ошибка. Совпадает с текстом выводимого сообщения при невозможности подключить расширение. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения  - _$Session$_.Finish - Сеанс. Завершение;  - _$Session$_.Start - Сеанс. Начало;  - _$Transaction$_.Begin - Транзакция. Начало;  - _$Transaction$_.Commit - Транзакция. Фиксация;  - _$Transaction$_.Rollback - Транзакция. Отмена;  - _$User$_.AuthenticationLock - Пользователи. Блокировка аутентификации. Поле Данные заполняется структурой со следующим составом свойств:  - Имя (Name) – Строка. Имя пользователя, аутентификация которого блокируется. ; _$User$_.AuthenticationUnlock - Пользователи. Разблокировка аутентификации. Записывается при изменении блокировки аутентификации пользователя  (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структорой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  _$User$_.AuthenticationUnlockError (_$User$_.AuthenticationUnlockError) - Пользователи. Ошибка разблокировки аутентификации; записываются при отказе в ручном изменении блокировки аутентификации пользователя (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ; _$User$_.Delete - Пользователи. Удаление; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя _$User$_.DeleteError - Пользователи. Ошибка удаления; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Delete (при возможности вывода этих данных); _$User$_.New - Пользователи. Добавление; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево.  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево.  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык. _$User$_.NewError - Пользователи. Ошибка добавления; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.New (при возможности вывода этих данных); _$User$_.Update - Пользователи. Изменение; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево;  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево;  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык; _$User$_.UpdateError - Пользователи. Ошибка изменения; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Update (при возможности вывода этих данных);"
                }
            }
        }
    },
    {
        "name": "ПредставлениеЧасовогоПояса",
        "name_en": "TimeZonePresentation",
        "description": "Возвращает локализованное наименование часового пояса с заданным идентификатором.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧасовойПояс: Строка): Строка",
                "Параметры": {
                    "ЧасовойПояс": "Идентификатор часового пояса. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59."
                }
            }
        }
    },
    {
        "name": "Предупреждение",
        "name_en": "DoMessageBox",
        "description": "Выводит на экран окно предупреждения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТекстПредупреждения: Строка, Таймаут?: Число, Заголовок?: Строка)",
                "Параметры": {
                    "ТекстПредупреждения": "Текст предупреждения.",
                    "Таймаут": "Интервал времени в секундах, в течение которого система будет ожидать ответа пользователя. По истечении интервала окно предупреждения будет закрыто. Если параметр не указан, то время ожидания не ограничено. Если параметр имеет отрицательное значение, будет сгенерировано исключение. Значение по умолчанию: 0.",
                    "Заголовок": "Содержит заголовок окна предупреждения. Если не установлен, то у диалога заголовок не отображается."
                }
            }
        }
    },
    {
        "name": "ПрекратитьРаботуСистемы",
        "name_en": "Terminate",
        "description": "Завершает работу системы независимо от наличия модальных диалогов, открытых редактируемых форм документов и справочников и т.д. При этом не вызываются процедуры-обработчики событий завершения работы системы.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ПерезапуститьПриЗавершении?: Булево, ДополнительныеПараметрыКоманднойСтроки?: Строка)",
                "Параметры": {
                    "ПерезапуститьПриЗавершении": "Указывает необходимость выполнения запуска нового сеанса с текущими установками после прекращения работы системы. Значение по умолчанию: Ложь.",
                    "ДополнительныеПараметрыКоманднойСтроки": "Содержит дополнительные параметры, которые будут переданы новому сеансу. Если такие параметры уже есть среди текущих установок, переданные заменят текущие. Параметр указывается, если значение параметра <ПерезапуститьПриЗавершении>=Истина."
                }
            }
        }
    },
    {
        "name": "ПривилегированныйРежим",
        "name_en": "PrivilegedMode",
        "description": "Определяет включение привилегированного режима исполнения кода.",
        "returns": "Тип: Булево. Истина - включен привилегированный режим исполнения кода; Ложь - в противном случае."
    },
    {
        "name": "ПроверитьБит",
        "name_en": "CheckBit",
        "description": "Проверяет состояние заданного бита для заданного числа.",
        "returns": "Тип: Булево. Ложь - бит равен 0. Истина - бит равен 1.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, НомерБита: Число): Булево",
                "Параметры": {
                    "Число": "Число, в котором требуется проверить состояние бита. Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не является целым или не укладывается в данный диапазон, генерируется исключение.",
                    "НомерБита": "Номер бита, состояние которого требуется проверить. Значение должно быть целым числом в диапазоне от 0 до 31. Если число не является целым или не укладывается в данный диапазон, генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПроверитьПоБитовойМаске",
        "name_en": "CheckByBitMask",
        "description": "Проверяет, что биты, установленные в значение \"1\" в маске, также установлены в \"1\" в заданном числе.",
        "returns": "Тип: Булево. Истина - если соответствие соблюдено. Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, Маска: Число): Булево",
                "Параметры": {
                    "Число": "Число, которое требуется проверить по маске. Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "Маска": "Битовая маска, по которой надо проверить число. Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение."
                }
            }
        }
    },
    {
        "name": "ПроверитьЦиклическиеСсылкиВстроенногоЯзыка",
        "name_en": "CheckScriptCircularRefs",
        "description": "Метод может быть использован для проверки наличия циклических ссылок при выполнении кода конфигураций на встроенном языке.",
        "returns": "Тип: ТаблицаЗначений. Возвращает таблицу значений с описаниями найденных циклов.  Таблица значений содержит следующие колонки:  - ОписаниеЗначения (ValueDescription) - тип Строка. Имя локальной переменной, для которой нашлись циклические ссылки;  - ЭлементыЦиклическихСсылок (CircularRefsMembers) - тип Массив. Элементом массива является строка, которая содержит описание одного найденного цикла в терминах встроенного языка: описание представлено строкой наименований объектов встроенного языка, участвующих в цикле, разделенных запятой.  - Количество элементов в массиве равно количеству найденных циклов для анализируемого значения.",
        "ref": "classes.ТаблицаЗначений",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение?: Произвольный, ОписаниеЗначения?: Строка): ТаблицаЗначений",
                "Параметры": {
                    "Значение": "Значение, для которого выполняется анализ. Если параметр не используется, анализируются значения всех локальных переменных на стеке.",
                    "ОписаниеЗначения": "Пользовательское описание анализируемого значения используется при выводе значений, участвующих в цикле в терминах встроенного языка. В случае отсутствия параметра, описание создается автоматически."
                }
            }
        }
    },
    {
        "name": "ПродолжитьВызов",
        "name_en": "ProceedWithCall",
        "description": "Вызывает переопределенный метод или обработчик события из расширяемой конфигурации.",
        "returns": "Тип: Произвольный. Возвращаемое значение переопределенной функции.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(,...,?: Произвольный): Произвольный",
                "Параметры": {
                    ",...,": "Набор параметров, который передается в переопределенный метод из метода модуля заимствованного объекта. Количество и типы параметров определяются методом из модуля расширяемого объекта. Максимальное возможное количество параметров - 50."
                }
            }
        }
    },
    {
        "name": "ПрочитатьJSON",
        "name_en": "ReadJSON",
        "description": "Считывает значение из JSON-текста или файла. JSON-текст должен быть корректным.",
        "returns": "Тип: Произвольный. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧтениеJSON: ЧтениеJSON, ПрочитатьВСоответствие?: Булево, ИменаСвойствСоЗначениямиДата?: Массив, ОжидаемыйФорматДаты?: ФорматДатыJSON, ИмяФункцииВосстановления?: Строка, МодульФункцииВосстановления?: Произвольный, ДополнительныеПараметрыФункцииВосстановления?: Произвольный, ИменаСвойствДляОбработкиВосстановления?: Массив, МаксимальнаяВложенность?: Число): Произвольный",
                "Параметры": {
                    "ЧтениеJSON": "Объект чтения JSON.",
                    "ПрочитатьВСоответствие": "Если установлено Истина, чтение объекта JSON будет выполнено в Соответствие. Если установлено Ложь, объекты будут считываться в объект типа Структура. Примечание. При десериализации объектов JSON в структуру необходимо помнить о требованиях к ключам структуры. Если при десериализации объекта будет найдено имя свойства, недопустимое для ключа структуры, то будет вызвано исключение. Значение по умолчанию: Ложь.",
                    "ИменаСвойствСоЗначениямиДата": "Массив, элементы которого содержат имена свойств JSON, для которых нужно вызывать восстановление даты из строки. Если имя свойства указано в этом параметре и указано в параметре ИменаСвойствДляОбработкиВосстановления, то для таких свойств восстановление осуществляется в функции восстановления. Если восстановление даты из значения свойства невозможно, то будет сгенерировано исключение. Значение по умолчанию: Неопределено.",
                    "ОжидаемыйФорматДаты": "Ожидаемый формат даты при десериализации объекта в формате JSON. Если в результате десериализации значение не является строкой и имеет формат даты, отличный от ожидаемого, то будет вызвано исключение. Значение по умолчанию: ISO.",
                    "ИмяФункцииВосстановления": "Данная функция вызывается при чтении каждого свойства и должна иметь следующие параметры:  - <Свойство> - значение типа Строка, указывается только при чтении объектов JSON,  - <Значение> - значение допустимого для сериализации типа,  - <ДополнительныеПараметры>. Возвращаемое значение - произвольного типа. Если данный параметр задан и не задан параметр <МодульФункцииВосстановления>, и наоборот, будет вызвано исключение. Если функция не установлена, то при вызове метода ПрочитатьJSON параметр <ИменаСвойствСоЗначениямиДата> игнорируется. Значение по умолчанию: Неопределено.",
                    "МодульФункцииВосстановления": "Указывает модуль, процедура которого будет использована для восстановления значения. Значение по умолчанию: Неопределено.",
                    "ДополнительныеПараметрыФункцииВосстановления": "Дополнительные параметры, которые будут переданы в функцию восстановления значений. Значение по умолчанию: Неопределено.",
                    "ИменаСвойствДляОбработкиВосстановления": "Массив имен свойств JSON, для которых будет вызвана функция восстановления. Параметр игнорируется, если не установлен параметр ИмяФункцииВосстановления. Значение по умолчанию: Неопределено.",
                    "МаксимальнаяВложенность": "Максимальный уровень вложенности объекта JSON. При превышении уровня вложенности будет сгенерировано исключение. Значение по умолчанию: 500."
                }
            }
        }
    },
    {
        "name": "ПрочитатьXML",
        "name_en": "ReadXML",
        "description": "Считывает значение в формате XML. Прочитаны могут быть значения тех типов, которые могут быть записаны методом",
        "returns": "Тип: Неопределено. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧтениеXML: ЧтениеXML, ТипЗначения?: Тип): Неопределено",
                "Параметры": {
                    "ЧтениеXML": "Объект, через который происходит чтение XML.",
                    "ТипЗначения": "Тип значения, которое должно быть прочитано из XML. Если тип не указан, то будет произведена попытка определения типа значения непосредственно из представления XML."
                }
            }
        }
    },
    {
        "name": "ПрочитатьДатуJSON",
        "name_en": "ReadJSONDate",
        "description": "Выполняет преобразование строки, прочитанной в JSON-формате, в значение типа",
        "returns": "Тип: Дата. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, Формат: ФорматДатыJSON): Дата",
                "Параметры": {
                    "Строка": "Строка, которую требуется преобразовать в дату.",
                    "Формат": "Формат, в котором представлена дата в строке, подлежащей преобразованию."
                }
            }
        }
    },
    {
        "name": "ПустаяСтрока",
        "name_en": "IsBlankString",
        "description": "Проверяет строку на наличие значащих символов.",
        "returns": "Тип: Булево. Истина - строка не содержит значащих символов или не содержит ни одного символа (пустая); Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Булево",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "РабочийКаталогДанныхПользователя",
        "name_en": "UserDataWorkDir",
        "description": "Предоставляет доступ к каталогу текущего пользователя данной информационной базы внутри стандартного каталога данных приложения.",
        "returns": "Тип: Строка. Путь к каталогу."
    },
    {
        "name": "РазблокироватьДанныеДляРедактирования",
        "name_en": "UnlockDataForEdit",
        "description": "Снимает блокировку объекта.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Ключ?: РегистрСведенийКлючЗаписи.<Имя регистра сведений>, ИдентификаторФормы?: УникальныйИдентификатор)",
                "Параметры": {
                    "Ключ": "Ссылка на объект, который должен быть разблокирован, или ключ записи независимого регистра сведений, которая должна быть разблокирована.  Если параметр не указан, то разблокируются все объекты, заблокированные с данным идентификатором формы или без указания идентификатора формы.",
                    "ИдентификаторФормы": "Уникальный идентификатор формы.  Если параметр не указан, то разблокируются только те объекты, которые были заблокированы без указания идентификатора формы."
                }
            }
        }
    },
    {
        "name": "РазделитьДвоичныеДанные",
        "name_en": "SplitBinaryData",
        "description": "Разделяет двоичные данные на части заданного размера. Размер задается в байтах.",
        "returns": "Тип: Массив. Массив объектов типа ДвоичныеДанные.",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичныеДанные: ДвоичныеДанные, РазмерЧасти: Число): Массив",
                "Параметры": {
                    "ДвоичныеДанные": "Объект типа ДвоичныеДанные.",
                    "РазмерЧасти": "Размер одной части данных."
                }
            }
        }
    },
    {
        "name": "РазделитьФайл",
        "name_en": "SplitFile",
        "description": "Разделяет указанный файл на несколько частей (файлов) заданного размера. Имя каждой части образуется из имени исходного файла с прибавлением ему расширения в виде порядкового номера, включая лидирующие нули.",
        "returns": "Тип: Массив. ",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяФайла: Строка, РазмерЧасти: Число, Путь?: Строка): Массив",
                "Параметры": {
                    "ИмяФайла": "Имя файла, который требуется разделить на части.",
                    "РазмерЧасти": "Размер одной части файла в байтах.",
                    "Путь": "Путь к каталогу, в который будут помещены файлы, созданные в результате операции разделения. Если путь не указан, файлы будут помещены в каталог исходного файла."
                }
            }
        }
    },
    {
        "name": "РазорватьСоединениеСВнешнимИсточникомДанных",
        "name_en": "DisconnectExternalDataSource",
        "description": "Выполняет разрыв соединения с внешним источником данных.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяВнешнегоИсточникаДанных?: Строка)",
                "Параметры": {
                    "ИмяВнешнегоИсточникаДанных": "Имя внешнего источника данных, с которым нужно разорвать соединение."
                }
            }
        }
    },
    {
        "name": "РаскодироватьСтроку",
        "name_en": "DecodeString",
        "description": "Раскодирует строку, закодированную в соответствии с указанным способом кодирования.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, СпособКодированияСтроки: СпособКодированияСтроки, КодировкаСтроки?: Строка)",
                "Параметры": {
                    "Строка": "Закодированная строка.",
                    "СпособКодированияСтроки": "Способ, которым была закодирована исходная строка.",
                    "КодировкаСтроки": "Кодировка, в которую была преобразована строка перед кодированием. Значение по умолчанию: UTF8."
                }
            }
        }
    },
    {
        "name": "РольДоступна",
        "name_en": "IsInRole",
        "description": "Определяет доступность указанной роли текущему пользователю.",
        "returns": "Тип: Булево. Истина - роль доступна текущему пользователю; Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Роль: Строка): Булево",
                "Параметры": {
                    "Роль": "Название роли как она задана в конфигураторе или объект описания метаданного роли."
                }
            }
        }
    },
    {
        "name": "Секунда",
        "name_en": "Second",
        "description": "Определяет секунду в указанной дате.",
        "returns": "Тип: Число. Секунда в указанной дате.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "Сигнал",
        "name_en": "Beep",
        "description": "Воспроизводит звуковой сигнал. Устройство, воспроизводящее звук, а также характер звукового сигнала зависят от программно-аппаратного состава компьютера и звуковых установок ОС."
    },
    {
        "name": "Символ",
        "name_en": "Char",
        "description": "Преобразует код символа в строку, содержащую символ.",
        "returns": "Тип: Строка. Результирующий символ.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(КодСимвола: Число): Строка",
                "Параметры": {
                    "КодСимвола": "Код получаемого символа. Код задается в соответствии с кодировкой Unicode."
                }
            }
        }
    },
    {
        "name": "СкопироватьЖурналРегистрации",
        "name_en": "CopyEventLog",
        "description": "Копирует часть журнала регистрации из одного файла в другой в соответствии с отбором. Если файл уже существует, то он будет заменен. Если имя файла не указано, то используется журнал регистрации текущей информационной базы.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяВходногоФайла?: Строка, ИмяВыходногоФайла?: Строка, Отбор: Структура)",
                "Параметры": {
                    "ИмяВходногоФайла": "Строка, содержащая имя входного файла. Если параметр не указан, то используется файл журнала регистрации текущей информационной базы.",
                    "ИмяВыходногоФайла": "Строка, содержащая имя выходного файла. Если не указана, то используется файл журнала регистрации текущей информационной базы.",
                    "Отбор": "Структура отбора журнала регистрации:  - ДатаНачала (StartDate) - Дата; значение по умолчанию Неопределено;  - ДатаОкончания (EndDate) - Дата; значение по умолчанию Неопределено;  - Уровень (Level) - перечисление или массив перечислений; значение по умолчанию Неопределено;  - ИмяПриложения (ApplicationName) - Строка или массив строк; значение по умолчанию Неопределено;  - Пользователь (User) - ПользовательИнформационнойБазы или массив таких объектов, или Строка. Объект ПользовательИнформационнойБазы и массив таких объектов можно получить из объекта МенеджерПользователейИнформационнойБазы. Также можно задавать пользователя по имени (строкой). Причем пользователей, которые были удалены из информационной базы, можно задавать только таким способом. Пустая строка означает \"пользователя по умолчанию\", который используется, когда в информационной базе нет ни одного пользователя (от имени такого пользователя работают также фоновые задания). Если в отборе задается массив пользователей, то можно перемешивать в нем значения обоих типов - строка и ПользовательИнформационнойБазы. Значение по умолчанию Неопределено;  - Компьютер (Computer) - Строка или массив строк; значение по умолчанию Неопределено;  - Событие (Event) - Строка или массив строк; значение по умолчанию Неопределено.   - _$Access$_.Access - Доступ. Доступ; Записывается при следующих обстоятельствах:   - при регистрации фактов успешного доступа пользователей информационной базы к тем или иным данным,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка.  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) в этом случае имеет следующий состав:   - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались. Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Access$_.AccessDenied - Доступ. Отказ в доступе; Записывается в следующих случаях:   - при регистрации фактов отказа в доступе к тем или иным данным пользователям информационной базы,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка,  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) имеет следующий состав:    - Для ошибки доступа к объекту (не ограничение доступа к данным):    - Право (Right) - имя нарушенного права;  - Для ошибки ограничения доступа к данным:    - Действие (Action) - Действие, которое выполнялось с данными, для объектных таблиц: Чтение (Read), Добавление (Insert), Изменение (Update), Удаление (Delete); для не объектных таблиц, все что не Чтение, то Изменение;  - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались.Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Data$_.Delete - Данные. Удаление;  - _$Data$_.DeletePredefinedData - Данные. Удаление предопределенных данных;  - _$Data$_.DeleteVersions - Данные. Удаление версий;  - _$Data$_.New - Данные. Добавление;  - _$Data$_.NewPredefinedData - Данные. Добавление предопределенных данных;  - _$Data$_.NewVersion - Данные. Добавление версии;  - _$Data$_.Post - Данные. Проведение;  - _$Data$_.PredefinedDataInitialization - Данные. Инициализация предопределенных данных;  - _$Data$_.PredefinedDataInitializationDataNotFound - Данные. Инициализация предопределенных данных. Данные не найдены;  - _$Data$_.SetPredefinedDataInitialization - Данные. Установка инициализации предопределенных данных;  - _$Data$_.SetStandardODataInterfaceContent - Данные. Изменение состава стандартного интерфейса OData;  - _$Data$_.TotalsMaxPeriodUpdate - Данные. Изменение максимального периода рассчитанных итогов;  - _$Data$_.TotalsMinPeriodUpdate - Данные. Изменение минимального периода рассчитанных итогов;  - _$Data$_.Unpost - Данные. Отмена проведения;  - _$Data$_.Update - Данные. Изменение;  - _$Data$_.UpdatePredefinedData - Данные. Изменение предопределенных данных;  - _$Data$_.VersionCommentUpdate - Данные. Изменение комментария версии;  - _$InfoBase$_.ConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.ConfigUpdate - Информационная база. Изменение конфигурации;  - _$InfoBase$_.DBConfigBackgroundUpdateCancel - Информационная база. Отмена фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateFinish - Информационная база. Завершение фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateResume - Информационная база. Продолжение (после приостановки) процесса фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateStart - Информационная база. Запуск фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateSuspend - Информационная база. Приостановка (пауза) процесса фонового обновления;  - _$InfoBase$_.DBConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.DBConfigExtensionUpdateError  - Информационная база. Ошибка изменения расширения конфигурации; Поле Данные заполняется аналогично событию _$InfoBase$_.DBConfigExtensionUpdate (при возможности вывода этих данных);  - _$InfoBase$_.DBConfigUpdate - Информационная база. Изменение конфигурации базы данных;  - _$InfoBase$_.DBConfigUpdateStart - Информационная база. Запуск обновления конфигурации базы данных;  - _$InfoBase$_.DumpError - Информационная база. Ошибка выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpFinish - Информационная база. Окончание выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpStart - Информационная база. Начало выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.EraseData - Информационная база. Удаление данных информационной баз;  - _$InfoBase$_.EventLogReduce - Информационная база. Сокращение журнала регистрации; записываются при сокращении журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Дата (Date) - Дата;  - _$InfoBase$_.EventLogReduceError - Информационная база. Ошибка сокращения журнала регистрации; записываются при ошибках сокращения журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.EventLogReduce (при возможности вывода этих данных);  - _$InfoBase$_.EventLogSettingsUpdate - Информационная база. Изменение параметров журнала регистрации;  - _$InfoBase$_.EventLogSettingsUpdateError - Информационная база. Изменение настроек журнала регистрации; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные (Структура) заполняется структурой со следующим составом свойств:  - При изменении уровня событий и/или периода разделения журнала регистрации(записываются только измененные параметры):  - Уровни (Levels): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При изменении формата журнала регистрации:  - ФорматЖурналаРегистрации (EventLogStructure): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При настройке использования событий журнала регистрации (с помощью метода УстановитьИспользованиеСобытияЖурналаРегистрации):  - ИмяСобытия (EventName) - Строка;   - СобытиеРегистрируется (EventIsLogged) - Булево;  - _$InfoBase$_.InfoBaseAdmParamsUpdate - Информационная база. Изменение параметров информационной базы;  - _$InfoBase$_.InfoBaseAdmParamsUpdateError - Информационная база. Ошибка изменения параметров информационной базы; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.InfoBaseAdmParamsUpdate (при возможности вывода этих данных);  - _$InfoBase$_.IntegrationServiceActiveUpdate - Информационная база. Изменение активности сервиса интеграции;  - _$InfoBase$_.IntegrationServiceSettingsUpdate - Информационная база. Изменение настроек сервиса интеграции;  - _$InfoBase$_.MasterNodeUpdate - Информационная база. Изменение главного узла;  - _$InfoBase$_.PredefinedDataUpdate - Информационная база. Обновление предопределенных данных;  - _$InfoBase$_.RegionalSettingsUpdate - Информационная база. Изменение региональных установок;  - _$InfoBase$_.RestoreError - Информационная база. Ошибка загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreFinish - Информационная база. Окончание загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreStart - Информационная база. Начало загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.SecondFactorAuthTemplateDelete - Информационная база. УдалениеШаблонаВторгоФактораАутентификации; записывается при удалении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateNew - Информационная база. ДобавлениеШаблонаВторгоФактораАутентификации; записывается при создании шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateUpdate - Информационная база. ИзменениеШаблонаВторгоФактораАутентификации; записывается при изменении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SetPredefinedDataUpdate - Информационная база. Установить обновление предопределенных данных;  - _$InfoBase$_.TARImportant - Тестирование и исправление. Ошибка;  - _$InfoBase$_.TARInfo - Тестирование и исправление. Сообщение;  - _$InfoBase$_.TARMess - Тестирование и исправление. Предупреждение;  - _$Job$_.Cancel - Фоновое задание. Отмена;  - _$Job$_.Fail - Фоновое задание. Ошибка выполнения;  - _$Job$_.Start - Фоновое задание. Запуск;  - _$Job$_.Succeed - Фоновое задание. Успешное завершение;  - _$Job$_.Terminate - Фоновое задание. Принудительное завершение;  - _$OpenIDProvider$_.NegativeAssertion - Провайдер OpenID. Отклонено; записывается базой, выступающей в роли провайдера OpenID, при отправке отрицательного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию.  - _$OpenIDProvider$_.PositiveAssertion - Провайдер OpenID. Подтверждено; записывается базой, выступающей в роли провайдера OpenID, при отправке положительного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию;  - _$PerformError$_ - Ошибка выполнения;  - _$Session$_.Authentication - Сеанс. Аутентификация; выполняется только при удачной аутентификации. Для события Аутентификация записываются поля Пользователь и ИмяПользователя. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - КодДополненияИмениПользователя (UserNameAdditionCode)- Строка. Код дополнения имения пользователя. При наличии дополнения имени пользователя при вводе имени пользователя в процессе аутентификации.  - В случае аутентификации при помощи OpenID поле Данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID;  - ИдентификаторПользователяПровайдераOpenID (OpenIDProviderUserID) - идентификатор пользователя на провайдере.  - _$Session$_.AuthenticationError - Сеанс. Ошибка аутентификации; выполняется только при ошибке аутентификации. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - В случае аутентификации при помощи OpenID поле данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID  - _$Session$_.AuthenticationFirstFactor - Сеанс. Аутентификация первый фактор; Записывается только если у пользователя включена двухфакторная аутентифкация. Для события Аутентификация первый фактор поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - _$Session$_.ConfigExtensionApplyError - Сеанс. Ошибка применения расширения конфигурации; записывается, если в процессе применений расширения произошла ошибка. Совпадает с текстом выводимого сообщения при невозможности подключить расширение. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения  - _$Session$_.Finish - Сеанс. Завершение;  - _$Session$_.Start - Сеанс. Начало;  - _$Transaction$_.Begin - Транзакция. Начало;  - _$Transaction$_.Commit - Транзакция. Фиксация;  - _$Transaction$_.Rollback - Транзакция. Отмена;  - _$User$_.AuthenticationLock - Пользователи. Блокировка аутентификации. Поле Данные заполняется структурой со следующим составом свойств:  - - Имя (Name) – Строка. Имя пользователя, аутентификация которого блокируется. ;  - _$User$_.AuthenticationUnlock - Пользователи. Разблокировка аутентификации. Записывается при изменении блокировки аутентификации пользователя  (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структорой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  -   - _$User$_.AuthenticationUnlockError (_$User$_.AuthenticationUnlockError) - Пользователи. Ошибка разблокировки аутентификации; записываются при отказе в ручном изменении блокировки аутентификации пользователя (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  - _$User$_.Delete - Пользователи. Удаление; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя  - _$User$_.DeleteError - Пользователи. Ошибка удаления; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Delete (при возможности вывода этих данных);  - _$User$_.New - Пользователи. Добавление; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево.  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево.  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык.  - _$User$_.NewError - Пользователи. Ошибка добавления; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.New (при возможности вывода этих данных);  - _$User$_.Update - Пользователи. Изменение; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево;  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево;  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык;  - _$User$_.UpdateError - Пользователи. Ошибка изменения; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Update (при возможности вывода этих данных);   - Метаданные (Metadata - объект описания метаданного или их массив; значение по умолчанию Неопределено;  - Данные (Data) - значение, тип значения – ссылка на объект (СправочикСсылка и т.д.); значение по умолчанию Неопределено;  - ПредставлениеДанных (DataPresentation) - Строка;  - Комментарий (Comment) - Строка;  - СтатусТранзакции (TransactionStatus) - перечисление или массив перечислений; значение по умолчанию Неопределено;  - Транзакция (TransactionID) - идентификатор транзакции; Строка;  - Сеанс (Session) - номер сеанса пользователя. Число или массив чисел; значение по умолчанию Неопределено;  - РабочийСервер (ServerName) - Строка или массив строк; значение по умолчанию Неопределено;  - ОсновнойIPПорт (Port) - номер основного IP-порта рабочего процесса; Число или массив чисел; значение по умолчанию Неопределено;  - ВспомогательныйIPПорт (SyncPort) - номер вспомогательного IP-порта рабочего процесса. Число или массив чисел; значение по умолчанию Неопределено.  - РазделениеДанныхСеанса (SessionDataSeparation) - Структура, имена элементов которой соответствуют именам общих реквизитов. В процессе отбора элементы структуры РазделениеДанныхСеанса объединяются по И: запись журнала попадает в выборку, если в ней есть соответствия для всех общих реквизитов, заданных в отборе. Значение по умолчанию Неопределено.  - Значение элемента структуры, в свою очередь, может быть:   - структурой, задающей единичное значение. Элементы структуры:   - Значение (Value) - значение общего реквизита. Значение по умолчанию - Неопределено;  - Использование (Use) - Булево. Значение по умолчанию - Истина. Задает использование общего реквизита, разделяющего данные. Если Ложь - элемент Значение игнорируется и может быть опущен. Таким образом можно отбирать записи журнала, в которых данный общий реквизит не установлен.   - массивом, который задает набор допустимых значений общего реквизита, разделяющего данные. Массив содержит структуры, каждая из которых задает единичное значение общего реквизита (как описано выше). Элементы массива учитываются по ИЛИ: запись журнала попадает в выборку, если значение общего реквизита в ней равно одному из заданных в массиве."
                }
            }
        }
    },
    {
        "name": "СмещениеЛетнегоВремени",
        "name_en": "DaylightTimeOffset",
        "description": "Получает смещение в секундах летнего времени заданного часового пояса относительно стандартного времени этого часового пояса для заданного универсального времени. Если УниверсальноеВремя =",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧасовойПояс?: Строка, УниверсальноеВремя?: Дата)",
                "Параметры": {
                    "ЧасовойПояс": "Идентификатор часового пояса. Если Неопределено, то часовой пояс компьютера. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59. Значение по умолчанию: Неопределено.",
                    "УниверсальноеВремя": "Универсальное время (UTC), для которого нужно определить смещение или Неопределено. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "СмещениеСтандартногоВремени",
        "name_en": "StandardTimeOffset",
        "description": "Получает смещение в секундах стандартного времени заданного часового пояса относительно универсального времени без учета летнего времени для заданного универсального времени. Если УниверсальноеВремя =",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧасовойПояс?: Строка, УниверсальноеВремя?: Дата)",
                "Параметры": {
                    "ЧасовойПояс": "Идентификатор часового пояса. Если Неопределено, то часовой пояс компьютера. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59. Значение по умолчанию: Неопределено.",
                    "УниверсальноеВремя": "Универсальное время (UTC), для которого нужно определить смещение или Неопределено. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "СоединитьБуферыДвоичныхДанных",
        "name_en": "ConcatBinaryDataBuffers",
        "description": "Соединяет набор буферов в один буфер. С помощью необязательного параметра Разделитель можно задать буфер, который будет использован в качестве разделителя между частями.",
        "returns": "Тип: БуферДвоичныхДанных. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Части: Массив, Разделитель?: БуферДвоичныхДанных, ПорядокБайтов?: ПорядокБайтов): БуферДвоичныхДанных",
                "Параметры": {
                    "Части": "Массив объектов типа БуферДвоичныхДанных, которые требуется объединить.",
                    "Разделитель": "Буфер, вставляемый между частями. Если не указан, буферы будут объединены без использования разделителя.",
                    "ПорядокБайтов": "Порядок байтов."
                }
            }
        }
    },
    {
        "name": "СоединитьДвоичныеДанные",
        "name_en": "ConcatBinaryData",
        "description": "Объединяет несколько объектов типа",
        "returns": "Тип: ДвоичныеДанные. ",
        "ref": "classes.ДвоичныеДанные",
        "signature": {
            "default": {
                "СтрокаПараметров": "(МассивДвоичныхДанных: Массив): ДвоичныеДанные",
                "Параметры": {
                    "МассивДвоичныхДанных": "Массив объектов типа ДвоичныеДанные."
                }
            }
        }
    },
    {
        "name": "СоздатьКаталог",
        "name_en": "CreateDirectory",
        "description": "Создает новый каталог файлов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяКаталога: Строка)",
                "Параметры": {
                    "ИмяКаталога": "Полное имя создаваемого каталога. Допускается использование схемы ftp для адресации файлов. При использовании этой схемы в адресах необходимо указывать прямые слеши '/', а не обратные '\\'."
                }
            }
        }
    },
    {
        "name": "СоздатьФабрикуXDTO",
        "name_en": "CreateXDTOFactory",
        "returns": "Тип: ФабрикаXDTO. ",
        "ref": "classes.ФабрикаXDTO",
        "signature": {
            "ПоИмениФайла": {
                "СтрокаПараметров": "(Путь: Строка, Пакеты?: Массив): ФабрикаXDTO",
                "Параметры": {
                    "Путь": "Строка, представляющая собой путь к файлу, содержащему XML схему.",
                    "Пакеты": "Массив пакетов XDTO, которые используются при разыменовании директив импорта."
                }
            },
            "ПоСпискуИменФайлов": {
                "СтрокаПараметров": "(Пути: Массив, Пакеты?: Массив): ФабрикаXDTO",
                "Параметры": {
                    "Пути": "Массив путей к XML схемам, на основании которых необходимо создать фабрику XDTO.",
                    "Пакеты": "Массив пакетов XDTO, которые используются для разыменования директив импорта."
                }
            }
        }
    },
    {
        "name": "СокрЛ",
        "name_en": "TrimL",
        "description": "Отсекает незначащие символы, стоящие слева от первого значащего символа в строке.",
        "returns": "Тип: Строка. Строка, полученная в результате отсечения пробелов .",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Строка",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "СокрЛП",
        "name_en": "TrimAll",
        "description": "Отсекает незначащие символы, стоящие слева от первого значащего символа в строке, и пробелы, стоящие справа от последнего значащего символа в строке.",
        "returns": "Тип: Строка. Строка, полученная в результате отсечения пробелов .",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Строка",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "СокрП",
        "name_en": "TrimR",
        "description": "Отсекает незначащие символы, стоящие справа от последнего значащего символа в строке.",
        "returns": "Тип: Строка. Строка, полученная в результате отсечения пробелов .",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Строка",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "Сообщить",
        "name_en": "Message",
        "description": "Выводит текст сообщения в окно сообщений. Если в момент вызова окно сообщений отсутствует, то будет открыто новое окно сообщений. Сообщение, в зависимости от его смысловой нагрузки, можно пометить одной из пиктограмм, входящих в предопределенный набор.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТекстСообщения: Строка, Статус?: СтатусСообщения)",
                "Параметры": {
                    "ТекстСообщения": "Текст сообщения.",
                    "Статус": "Статус сообщения. Определяет вид пиктограммы.  В режиме приложения параметр игнорируется. Значение по умолчанию: Обычное."
                }
            }
        }
    },
    {
        "name": "Состояние",
        "name_en": "Status",
        "description": "Выводит текст в панель состояния.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ТекстСообщения?: Строка, Прогресс?: Число, Пояснение?: Строка, Картинка?: Картинка)",
                "Параметры": {
                    "ТекстСообщения": "Строка, предназначенная для вывода в панель состояния. Если параметр не указан, возобновляется вывод системного текста в панель состояния.",
                    "Прогресс": "Значение индикатора прогресса (от 1 до 100).  Если не задан, индикатор прогресса не отображается.",
                    "Пояснение": "Текст пояснения.",
                    "Картинка": "Картинка."
                }
            }
        }
    },
    {
        "name": "СохранитьЗначение",
        "name_en": "SaveValue",
        "description": "Сохраняет значение для использования не только в текущем, но и в последующих сеансах работы с программой. Значение хранится индивидуально для каждой пары информационная база - пользователь. Например, можно сохранять значения по умолчанию, используемые данным пользователем.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Имя: Строка, Значение: Произвольный)",
                "Параметры": {
                    "Имя": "Имя, с которым сохраняется значение, используется для идентификации сохраняемых значений.",
                    "Значение": "Сохраняемое значение."
                }
            }
        }
    },
    {
        "name": "СохранитьНастройкиПользователя",
        "name_en": "SaveUserSettings",
        "description": "Выполняет сохранение пользовательских настроек в процессе работы, не дожидаясь завершения приложения."
    },
    {
        "name": "Сред",
        "name_en": "Mid",
        "description": "Выбирает строку символов, начиная с символа НачальныйНомер, общим количеством ЧислоСимволов.",
        "returns": "Тип: Строка. Строка выбранных символов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, НачальныйНомер: Число, ЧислоСимволов?: Число): Строка",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "НачальныйНомер": "Начальный номер символа, с которого начинается выборка. Нумерация символов в строке начинается с 1. Если указано значение, меньшее или равное нулю, то параметр принимает значение 1.",
                    "ЧислоСимволов": "Количество выбираемых символов. Если параметр не указан, то выбираются символы до конца строки."
                }
            }
        }
    },
    {
        "name": "СтрДлина",
        "name_en": "StrLen",
        "description": "Получает количество символов в строке.",
        "returns": "Тип: Число. Длина строки.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Число",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "СтрЗаканчиваетсяНа",
        "name_en": "StrEndsWith",
        "description": "Определяет, заканчивается ли строка указанной подстрокой. Определение выполняется с учетом регистра, аналогично функции",
        "returns": "Тип: Булево. Истина - строка заканчивается указанной подстрокой; Ложь - в противном случае",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, СтрокаПоиска: Строка): Булево",
                "Параметры": {
                    "Строка": "Строка, окончание которой проверяется на совпадение с подстрокой поиска.",
                    "СтрокаПоиска": "Строка, содержащая предполагаемое окончание строки. В случае если переданное значение является пустой строкой генерируется исключительная ситуация."
                }
            }
        }
    },
    {
        "name": "СтрЗаменить",
        "name_en": "StrReplace",
        "description": "Находит в исходной строке все вхождения подстроки поиска и заменяет ее на подстроку замены.",
        "returns": "Тип: Строка. Строка, полученная в результате замены.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, ПодстрокаПоиска: Строка, ПодстрокаЗамены: Строка): Строка",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "ПодстрокаПоиска": "Искомая подстрока.",
                    "ПодстрокаЗамены": "Подстрока, на которую будет заменена подстрока поиска."
                }
            }
        }
    },
    {
        "name": "СтрНайти",
        "name_en": "StrFind",
        "description": "Находит первое вхождение искомой строки как подстроки в исходной строке.",
        "returns": "Тип: Число. Позиция первого знака найденной подстроки. Нумерация символов в строке начинается с 1. Если строка не содержит указанной подстроки, то возвращается 0.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, ПодстрокаПоиска: Строка, НаправлениеПоиска?: НаправлениеПоиска, НачальнаяПозиция?: Число, НомерВхождения?: Число): Число",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "ПодстрокаПоиска": "Искомая подстрока.",
                    "НаправлениеПоиска": "Указывает направление поиска подстроки в строке. Значение по умолчанию: СНачала.",
                    "НачальнаяПозиция": "Указывает позицию в строке, с которой начинается поиск.  - Если параметр не задан и в параметре НаправлениеПоиска указано значение СНачала, то значение по умолчанию равно 1.  - Если параметр не задан и в параметре НаправлениеПоиска указано значение СКонца, то значение по умолчанию равно длине строки. Допускаются значения от 1 до количества символов в строке, в которой выполняется поиск. Если указано значение, не входящее в диапазон, генерируется ошибка \"Неверное значение параметра\".",
                    "НомерВхождения": "Указывает номер вхождения искомой подстроки в исходной строке. Значение по умолчанию: 1."
                }
            }
        }
    },
    {
        "name": "СтрНайтиИВыделитьОформлением",
        "name_en": "StrFindAndHighlightByAppearance",
        "description": "Выполняет поиск в строке.  - последовательность, состоящая только из букв, считается отдельным словом,  - последовательность, состоящая только из цифр, считается отдельным словом. В слове, состоящем из цифр, лидирующие нули считаются и значащими, и незначащими. При наличии иерархии элемент считается найденным:  - если в нем есть все искомые слова,  - или в нем есть хотя бы одно искомое слово, а остальные слова содержатся в его родителях.",
        "returns": "Тип: ФорматированнаяСтрока, Неопределено. Если хотя бы одна искомая строка не найдена, возвращается Неопределено.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, Подстрока: Строка): ФорматированнаяСтрока",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "Подстрока": "Искомая строка или массив искомых строк."
                }
            }
        }
    },
    {
        "name": "СтрНачинаетсяС",
        "name_en": "StrStartsWith",
        "description": "Определяет, что строка начинается с указанной подстроки. Определение выполняется с учетом регистра, аналогично функции",
        "returns": "Тип: Булево. Истина - строка начинается с указанной подстроки, Ложь - в противном случае.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, СтрокаПоиска: Строка): Булево",
                "Параметры": {
                    "Строка": "Строка, начало которой проверяется на совпадение с подстрокой поиска.",
                    "СтрокаПоиска": "Строка, содержащая предполагаемое начало строки. В случае если переданное значение является пустой строкой генерируется исключительная ситуация."
                }
            }
        }
    },
    {
        "name": "Строка",
        "name_en": "String",
        "description": "Преобразует полученный параметр в значение типа",
        "returns": "Тип: Строка. Полученное значение.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный): Строка",
                "Параметры": {
                    "Значение": "Исходное значение."
                }
            }
        }
    },
    {
        "name": "СтрокаСоединенияИнформационнойБазы",
        "name_en": "InfoBaseConnectionString",
        "description": "Возвращает",
        "returns": "Тип: Строка. "
    },
    {
        "name": "СтрокаСЧислом",
        "name_en": "StringWithNumber",
        "description": "Формирует представление числа для определенного кода локализации и параметров числа.",
        "returns": "Тип: Строка. Представление строки числа в требуемой форме.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИсходнаяСтрока: Строка, Число: Число, ВидЧисловогоЗначения: ВидЧисловогоЗначения, Параметры?: Строка): Строка",
                "Параметры": {
                    "ИсходнаяСтрока": "Строка, содержит перечисленные через точку с запятой 6 форм строки для каждой категории числительного:  - %1 обозначает позицию числа,  - порядок категорий - по возрастанию: Ноль, Один, Два, Немного, Много, Другое. Если в данном языке какая-либо категория не используется, то форма для нее пропускается. Для количественных:  - Для русского (ru), белорусского (be) и украинского (uk) языков: \"; день; ; дня; дней; дня\":   - день – для целых чисел, оканчивающихся на 1, но не оканчивающихся на 11;  - дня – для целых чисел, оканчивающихся на 2..4, но не оканчивающихся на 12..14;  - дней:  - для целых чисел, оканчивающихся на 0,  - для целых чисел, оканчивающихся на 5..9,  - для целых чисел, оканчивающихся на 11..14;  - дня – для чисел, не подходящих под предыдущие правила.  - Для польского языка (pl): \"; miesiąc; ; miesiące; miesięcy; miesiąca\":  - miesiąc – для целого числа 1;  - miesiące – для целых чисел, оканчивающихся на 2..4, но не оканчивающихся на 12..14;  - miesięcy:  - для целых чисел, оканчивающихся на 0..1, кроме числа 1,  - для целых чисел, оканчивающихся на 5..9,  - для целых чисел, оканчивающихся на 12..14;  - miesiąca – для чисел, не подходящих под предыдущие правила.  - Для английского (en), немецкого (de), казахского (kk), болгарского (bg), грузинского (ka), турецкого (tr), азербайджанского (az), венгерского (hu), финского (fi), эстонского (et), туркменского (tk) языков: \"; day; ; ; ; days\":   - day – для целого числа 1;  - days – для чисел, не подходящих под предыдущие правила.  - Для французского (fr) языка: \"; jour; ; ; ; jours\":  - jour – для чисел, имеющих целую часть 0 или 1,  - jours – для чисел, не подходящих под предыдущее правило.  - Для латышского (lv) языка: \"dienu; diena; ; ; ; dienas\":   - dienu – для целых чисел или чисел с сотыми, оканчивающимися на 0, 11~19;  - diena – для чисел, оканчивающиеся на 1, но не на 11 в случае целого числа или числа с сотыми;  - dienas – для чисел, не подходящих под предыдущие правила.  - Для литовского (lt) языка: \"; diena; ; dienos; dienos; dienų\":  - diena – для целых чисел, оканчивающиеся на 1, но не на 11, во всех десятичных записях;  - dienos – для целых чисел, оканчивающихся на 2..9, но не на 12..19, во всех десятичных записях;  - dienos – для чисел с ненулевой дробной частью;  - dienų – для чисел, не подходящих под предыдущие правила.  - Для румынского (ro) языка: \"; zi; ; zile; ; de zile\":   - zi – для целого числа 1;  - zile – для дробного числа или целого числа, десятки которого равны 0 или 1  - de zile – для чисел, не подходящих под предыдущие правила.  - Для вьетнамского (vi), китайского (zh) языков: \"; ; ; ; ; ngày\";   - ngày – для всех чисел. Для порядковых:  - Для английского (en) языка: \"; %1st day; %1nd day; %1rd day; ; %1th day\":  - %1st day – для чисел, оканчивающихся на 1, но не оканчивающихся на 11;  - %1nd day – для чисел, оканчивающихся на 2, но не оканчивающихся на 12;  - %1rd day – для чисел, оканчивающихся на 3, но не оканчивающихся на 13;  - %1th day – для чисел не подходящих под предыдущие правила.  - Для азербайджанского (az) языка: \"; %1-ci gün; ; %1-cü döngə; %1-cı gün; %1-cu döngə\":  - %1-ci gün:  - для чисел, оканчивающихся на 1, 2, 5, 7, 8,  - для чисел, оканчивающихся на 20, 50, 70, 80;  - %1-cü döngə:  - для чисел, оканчивающихся на 3, 4,  - для чисел, кратных 100, но не кратных 1000;  - %1-cı gün:  - для нуля,  - для чисел, оканчивающихся на 6,  - для чисел, оканчивающихся на 40, 60, 90;  - %1-cu döngə – для чисел, не подходящих под предыдущие правила.  - Для болгарского (bg), китайского (zh), латышского (lv), литовского (lt), немецкого (de), польского (pl), русского (ru), турецкого (tr), финского (fi), эстонского (et), белорусского (be), туркменского (tk) языков: \"; ; ; ; ; %1-й день\":  - %1-й день – для всех чисел.  - Для венгерского (hu) языка: \"; %1 nap; ; ; ; %1 nap\":  - %1 nap – для чисел 1 и 5,  - %1 nap – для чисел, не подходящих под предыдущее правило.  - Для вьетнамского (vi), румынского (ro), французского (fr) языка: \"; %1er jour; ; ; ; %1e jour\":  - %1er jour – для числа 1;  - %1e jour – для чисел, не подходящих под предыдущее правило.  - Для грузинского (ka) языка: \"; %1-ლი; ; ; მე-%1; %1-ე\":  - %1-ლი – для числа 1;  - მე-%1:  - для нуля,  - для чисел, оканчивающихся на 2..20, 40, 60, 80,  - %1-ე – для чисел, не подходящих под предыдущие правила.  - Для казахского (kk) языка: \"; ; ; ; Мен %1-шы сыныпта оқимын; Мен %1-ші сыныпта оқимын\":  - Мен %1-шы сыныпта оқимын:  - для чисел, оканчивающихся на 6, 9,  - для чисел, оканчивающихся на 0, кроме 0;  - Мен %1-ші сыныпта оқимын – для чисел, не подходящих под предыдущее правило.  - Для украинского (uk) языка: \"; ; ; %1-ій день; ; %1-ий день\":  - %1-ій день – для чисел, оканчивающихся на 3, но не оканчивающихся на 13,  - %1-ий день – для чисел, не подходящих под предыдущее правило.",
                    "Число": "Число, которое будет подставлено в строку вместо параметра \"%1\".",
                    "ВидЧисловогоЗначения": "Определяет вид числового значения, для которого формируется представление.",
                    "Параметры": "Строка параметров форматирования. Возможные параметры:  - Л (L) – Код локализации. По умолчанию используется код локализации, установленный в операционной системе. Примеры кодов локализации: ru_RU - Русский (Россия); en_US - Английский (США).   - ЧДЦ (NFD) - число десятичных разрядов в дробной части. Исходное число округляется при этом в соответствии с правилами округления Окр15как20. По умолчанию - Неопределено, исходное число не округляется.  Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "СтрПолучитьСтроку",
        "name_en": "StrGetLine",
        "description": "Получает строку многострочной строки по номеру.",
        "returns": "Тип: Строка. Полученная строка.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, НомерСтроки: Число): Строка",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "НомерСтроки": "Номер получаемой строки. Нумерация строк в многострочной строке начинается с 1."
                }
            }
        }
    },
    {
        "name": "СтрРазделить",
        "name_en": "StrSplit",
        "description": "Разделяет строку на части по указанным символам-разделителям.",
        "returns": "Тип: Массив. Массив со строками, которые получились в результате разделения исходной строки.",
        "ref": "classes.Массив",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, Разделитель: Строка, ВключатьПустые?: Булево): Массив",
                "Параметры": {
                    "Строка": "Разделяемая строка.",
                    "Разделитель": "Строка символов, каждый из которых является индивидуальным разделителем.",
                    "ВключатьПустые": "Указывает необходимость включать в результат пустые строки, которые могут образоваться в результате разделения исходной строки. Значение по умолчанию: Истина."
                }
            }
        }
    },
    {
        "name": "СтрСоединить",
        "name_en": "StrConcat",
        "description": "Соединяет массив переданных строк в одну строку с указанным разделителем.",
        "returns": "Тип: Строка. Строка, содержащая соединенные исходные строки с разделителем между ними.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строки: ФиксированныйМассив, Разделитель?: Строка): Строка",
                "Параметры": {
                    "Строки": "Массив, содержащий объединяемые строки.",
                    "Разделитель": "Строка, которая будет вставлена между объединяемыми строками. Если параметр не задан, строки будут объединены слитно друг с другом. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "СтрСравнить",
        "name_en": "StrCompare",
        "description": "Выполняет сравнение строк без учета регистра, аналогичное сравнению строк с помощью объекта",
        "returns": "Тип: Число. Возвращает:  - -1 - первая строка меньше второй.  - 1 - первая строка больше второй.  - 0 - первая строка равна второй.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка1: Строка, Строка2: Строка): Число",
                "Параметры": {
                    "Строка1": "Строка для сравнения",
                    "Строка2": "Строка для сравнения."
                }
            }
        }
    },
    {
        "name": "СтрЧислоВхождений",
        "name_en": "StrOccurrenceCount",
        "description": "Вычисляет число вхождений подстроки поиска в исходной строке.",
        "returns": "Тип: Число. Число вхождений.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка, ПодстрокаПоиска: Строка): Число",
                "Параметры": {
                    "Строка": "Исходная строка.",
                    "ПодстрокаПоиска": "Искомая подстрока."
                }
            }
        }
    },
    {
        "name": "СтрЧислоСтрок",
        "name_en": "StrLineCount",
        "description": "Позволяет посчитать число строк в многострочной строке. Строки в многострочной строке разделены символами перевода строк (",
        "returns": "Тип: Число. Число строк.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Число",
                "Параметры": {
                    "Строка": "Исходная строка."
                }
            }
        }
    },
    {
        "name": "СтрШаблон",
        "name_en": "StrTemplate",
        "description": "Подставляет параметры в строку по номеру.  - Если в строке встречается символ % два раза подряд (%%), такая пара трактуется как одинарный процент, независимо от того, стоит ли сразу за ними цифра или не стоит.  - Если параметров недостаточно для заполнения в шаблоне параметра %N, генерируется исключительная ситуация \"Недостаточно фактических параметров\".  - Если параметров слишком много, чтобы подставить их все в шаблон, генерируется исключительная ситуация \"Очень много параметров\".",
        "returns": "Тип: Строка. Строка шаблона с подставленными параметрами.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Шаблон: Строка, Значение1_Значение10?: Произвольный): Строка",
                "Параметры": {
                    "Шаблон": "Строка, содержащая маркеры подстановки вида: \"%1..%N\". Нумерация маркеров начинается с 1. N не может быть больше 10.  Если требуется сразу после номера подстановки написать цифру, то номер подстановки должен быть указан в скобках. Тогда строка может иметь следующий вид: \"%(1)1cv8с.exe\"",
                    "Значение1_Значение10": "Параметры, содержащие произвольные значения, строковые представления которых должны быть подставлены в шаблон. Указываются через запятую. Количество значений должно совпадать с числом N из %N. Если количество значений не совпадает с числом N из %N, тогда генерируется исключительная ситуация \"Недостаточно фактических параметров\"."
                }
            }
        }
    },
    {
        "name": "ТекущаяДата",
        "name_en": "CurrentDate",
        "description": "Определяет текущую (системную) дату на компьютере.",
        "returns": "Тип: Дата. Текущая (системная) дата."
    },
    {
        "name": "ТекущаяДатаСеанса",
        "name_en": "CurrentSessionDate",
        "description": "Получает текущую дату сервера, приведенную к часовому поясу сеанса.",
        "returns": "Тип: Дата. "
    },
    {
        "name": "ТекущаяУниверсальнаяДата",
        "name_en": "CurrentUniversalDate",
        "description": "Получает текущую универсальную дату компьютера.",
        "returns": "Тип: Дата. "
    },
    {
        "name": "ТекущаяУниверсальнаяДатаВМиллисекундах",
        "name_en": "CurrentUniversalDateInMilliseconds",
        "description": "Получает текущую универсальную дату в миллисекундах (в UTC, начиная с 01.01.0001 00:00:00).",
        "returns": "Тип: Число. "
    },
    {
        "name": "ТекущийКодЛокализации",
        "name_en": "CurrentLocaleCode",
        "description": "Получает код локализации (язык, страна) текущего сеанса, который может быть ключом командной строки /VL или, при запуске из Конфигуратора, установкой параметров запуска.",
        "returns": "Тип: Строка. "
    },
    {
        "name": "ТекущийРежимЗапуска",
        "name_en": "CurrentRunMode",
        "description": "Получает режим запуска клиентского приложения текущего сеанса работы.",
        "returns": "Тип: РежимЗапускаКлиентскогоПриложения, Неопределено. Неопределено, если режим запуска не является ни обычным, ни управляемым - например, внешнее соединение."
    },
    {
        "name": "ТекущийЯзык",
        "name_en": "CurrentLanguage",
        "description": "Получает язык интерфейса, выбранный для текущего пользователя или основной язык, если нет текущего пользователя или для него не указан язык.",
        "returns": "Тип: ОбъектМетаданных: Язык, Строка. В режиме выполнения \"Сервер\", \"Толстый клиент\" и \"Внешнее соединение\" возвращается ОбъектМетаданных: Язык.  В режиме выполнения \"Тонкий клиент, \"Веб-клиент\", \"Мобильный клиент\", \"Мобильное приложение (клиент)\", и \"Мобильное приложение (сервер)\" возвращается значение свойства КодЯзыка."
    },
    {
        "name": "ТекущийЯзыкСистемы",
        "name_en": "CurrentSystemLanguage",
        "description": "Возвращает используемый системой язык.",
        "returns": "Тип: Строка. "
    },
    {
        "name": "Тип",
        "name_en": "Type",
        "description": "Получает тип по его строковому имени.",
        "returns": "Тип: Тип. Полученный тип значения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяТипа: Строка): Тип",
                "Параметры": {
                    "ИмяТипа": "Имя получаемого типа."
                }
            }
        }
    },
    {
        "name": "ТипЗнч",
        "name_en": "TypeOf",
        "description": "Получает тип значения.",
        "returns": "Тип: Тип. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Произвольный): Тип",
                "Параметры": {
                    "Значение": "Значение, тип которого необходимо получить."
                }
            }
        }
    },
    {
        "name": "ТранзакцияАктивна",
        "name_en": "TransactionActive",
        "description": "Получить текущее состояние транзакции.",
        "returns": "Тип: Булево. Истина - в системе имеется активная транзакция, Ложь - в текущий момент в системе не имеется активных транзакций."
    },
    {
        "name": "ТРег",
        "name_en": "Title",
        "description": "Преобразует строку следующим образом: у каждого слова строки первый символ преобразуется к верхнему регистру. Все остальные символы преобразуются к нижнему регистру.",
        "returns": "Тип: Строка. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Строка: Строка): Строка",
                "Параметры": {
                    "Строка": "Преобразуемая строка."
                }
            }
        }
    },
    {
        "name": "УдалитьДанныеИнформационнойБазы",
        "name_en": "EraseInfoBaseData",
        "description": "Выполняет удаление данных информационной базы:  - Из таблиц, определяемых структурой метаданных;  - Из хранилищ настроек;  - Из истории;  - Из истории изменения данных;  - Из списка пользователей;  - Административных параметров информационной базы;  - Расширений конфигурации;  - Данные регистрации информационной базы на сервере системы взаимодействия."
    },
    {
        "name": "УдалитьИзВременногоХранилища",
        "name_en": "DeleteFromTempStorage",
        "description": "Удаляет ранее помещенное значение из временного хранилища.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Адрес: Строка)",
                "Параметры": {
                    "Адрес": "Адрес файла во временном хранилище, который необходимо удалить."
                }
            }
        }
    },
    {
        "name": "УдалитьОбъекты",
        "name_en": "DeleteObjects",
        "description": "Удаляет объекты, ссылки на которые переданы в параметре СписокСсылок.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СписокСсылок: Массив, Проверять?: Булево, НайденныеДанные?: ТаблицаЗначений, ОбластьПоиска?: Массив, ВключитьОбъекты?: Массив, ИсключитьОбъекты?: Массив)",
                "Параметры": {
                    "СписокСсылок": "Список ссылок на объекты, которые нужно удалить.",
                    "Проверять": "Определяет, выполнять ли контроль ссылочной целостности при выполнении процедуры. Истина - перед удалением проверяется, нет ли ссылок на удаляемый объект. Если есть, то объект не удаляется, а ссылки помещаются в таблицу значений <НайденныеДанные>. Ложь - проверка не выполняется. Значение по умолчанию: Ложь.",
                    "НайденныеДанные": "Содержит ссылки на найденные объекты в виде ТаблицаЗначений, состоящей из колонок с индексами: 0 - искомая ссылка; 1 - ссылка на объект, если найденная ссылка соответствует объектной таблице или значение, идентифицирующее запись необъектной таблицы; 2 - объект метаданных, которому соответствуют данные, в которых найдена ссылка. В таблицу выводятся только непосредственно препятствующие удалению объекты (без рекурсии).",
                    "ОбластьПоиска": "Определяет область поиска объектов, которые следует удалить. Область устанавливается комбинацией разделителей, в состав которых включены объекты метаданных, среди данных которых следует выполнять поиск. Элемент массива имеет тип Массив. Элемент вложенного массива имеет тип:  - Объект метаданных – Общий реквизит, разделяющий данные.  - Строка – имя общего реквизита, разделяющего данные. По умолчанию имеет значение Неопределено. Допустимые значения:  - Неопределено,  - Массив с комбинациями разделителей, определяющий область поиска,  - Пустой массив - область поиска определяется параметрами метода <ВключитьОбъекты> и <ИсключитьОбъекты>. Примечание. Если комбинация разделителей содержит повторы, то вызывается исключение, т.к. в конфигурации не может быть объектов метаданных, дважды включенных в состав одного разделителя. Значение по умолчанию: Неопределено.",
                    "ВключитьОбъекты": "Позволяет явно указать объекты метаданных, которые должны присутствовать в области поиска ссылок на объекты. Элементом массива могут быть:  - Объект метаданных.  - Строка – полное имя объекта метаданных. Допустимые значения:  - Неопределено,  - Пустой массив,  - Массив объектов метаданных.  Значение по умолчанию: Неопределено.",
                    "ИсключитьОбъекты": "В качестве элементов массива могут выступать:  - Объект метаданных,  - Строка – полное имя объекта метаданных. Свойство позволяет явно указать объекты метаданных, которые следует исключить из области поиска ссылок на объекты. Допустимые значения:  - Неопределено  - Пустой массив (нет объектов, которые необходимо дополнительно включить в область поиска).  - Массив объектов метаданных.  Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "УдалитьФайлы",
        "name_en": "DeleteFiles",
        "description": "Удаляет указанные файлы.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Путь: Строка, Маска?: Строка)",
                "Параметры": {
                    "Путь": "Путь к удаляемым файлам.",
                    "Маска": "Маска для выбора удаляемых файлов.  Если <Маска> не указана, то удаляются все файлы и каталог <Путь>. Для операционной системы MS Windows:  В строке маски, помимо обычных символов, допускается использование символа \"*\" (звездочка), обозначающего любое число произвольных символов, и \"?\" (знак вопроса), обозначающего один произвольный символ.  Для операционных систем Linux, macOS:  В строке маски допускается использование следующих последовательностей:  - любой символ, допустимый в имени файла. Сопоставление указанных символов производится с учетом регистра;  - \"*\" (звездочка) - любая последовательность символов;  - \"?\" (знак вопроса) - любой символ;  - \"[\" - класс символов. После открывающей квадратной скобки указывается последовательность символов. Паттерн соответствует любому из указанных символов. Можно указывать диапазон, используя \"-\". Описание класса символов завершается \"]\". Для указания \"-\" в качестве символа класса нужно указать его первым или последним символом. Если после \"[\" указан знак \"!\", то класс описывает все символы, кроме указанных."
                }
            }
        }
    },
    {
        "name": "УниверсальноеВремя",
        "name_en": "ToUniversalTime",
        "description": "Преобразует местное время в заданном часовом поясе в универсальное время.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(МестноеВремя: Дата, ЧасовойПояс?: Строка)",
                "Параметры": {
                    "МестноеВремя": "Локальное время.",
                    "ЧасовойПояс": "Может быть задан только в коде, исполняемом на сервере, режиме запуска \"Толстый клиент\" и во внешнем соединении. Идентификатор часового пояса, к которому относится местное время. Если не задан (Неопределено), то часовой пояс компьютера. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "УстановитьБезопасныйРежим",
        "name_en": "SetSafeMode",
        "description": "В файловом варианте информационной базы или на сервере в клиент-серверном варианте информационной базы включает или выключает безопасный режим исполнения кода. В безопасном режиме:  - игнорируется привилегированный режим;  - запрещены внешние по отношению к платформе 1С:Предприятие действия:  - операции с COM-объектами;  - загрузка и подключение внешних компонентов;  - запуск внешних приложений и команд операционной системы;  - доступ к файловой системе;  - доступ к Интернету. В клиент-серверном варианте при выполнении на клиенте данный метод не выполняет никаких действий. Первое выполнение метода с любомым значением параметра, кроме Ложь, в файловом варианте информационной базы или на сервере в клиент-серверном варианте информационной базы включает безопасный режим. Для явного выключения безопасного режима необходимо внутри процедуры или функции, в которой он был включен, вызвать метод с параметром Ложь столько же раз, сколько раз в этой же процедуре или функции был вызван метод с параметром Истина или Строка. Если этого сделано не было, то при возврате из процедуры/функции, в которой был включен безопасный режим, он будет выключен автоматически (неявно). Если в процедуре или функции вызовов метода с параметром Ложь сделано больше, чем вызовов с параметром Истина или Строка, то будет вызвано исключение.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(БезопасныйРежим: Булево)",
                "Параметры": {
                    "БезопасныйРежим": "Определяет, будет ли включен безопасный режим:  - Строка - имя профиля безопасности. Включить режим и назначить профиль безопасности. Может быть использовано имя только того профиля, у которого свойство SafeModeProfile установлено в значение Истина. Если безопасный режим уже включен, то повторный вызов метода с именем другого профиля не изменит текущий профиль безопасности;  - Истина - включить режим без указания конкретного профиля безопасности;  - Ложь - выключить режим. Строка - имя профиля безопасности. Включить режим и назначить профиль безопасности. Может быть использовано имя только того профиля, у которого свойство SafeModeProfile установлено в значение Истина. Если безопасный режим уже включен, то повторный вызов метода с именем другого профиля не изменит текущий профиль безопасности; Истина - включить режим без указания конкретного профиля безопасности; Ложь - выключить режим.  -"
                }
            }
        }
    },
    {
        "name": "УстановитьБезопасныйРежимРазделенияДанных",
        "name_en": "SetDataSeparationSafeMode",
        "description": "Устанавливает или отменяет безопасный режим разделения данных по заданному общему реквизиту.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбщийРеквизит: Строка, Режим: Булево)",
                "Параметры": {
                    "ОбщийРеквизит": "Имя общего реквизита со значением \"Использовать\" свойства \"Разделение данных\", для которого должен быть установлен или отменен безопасный режим.",
                    "Режим": "Истина – установить безопасный режим разделения данных по заданному общему реквизиту; Ложь – отменить безопасный режим разделения данных по заданному общему реквизиту."
                }
            }
        }
    },
    {
        "name": "УстановитьБит",
        "name_en": "SetBit",
        "description": "Устанавливает заданный бит заданного числа в указанное значение.",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, НомерБита: Число, Значение: Булево): Число",
                "Параметры": {
                    "Число": "Число, у которого требуется изменить значение бита. Значение должно быть целым числом в диапазоне от 0 до 2^32-1. Если число не целое или не укладывается в данный диапазон - генерируется исключение.",
                    "НомерБита": "Номер бита, значение которого необходимо изменить. Значение должно быть целым числом в дипазоне от 0 до 31. Если число не является целым или не укладывается в данный диапазон, генерируется исключение.",
                    "Значение": "Новое значение бита:  - Истина - 1.  - Ложь - 0."
                }
            }
        }
    },
    {
        "name": "УстановитьБлокировкуСеансов",
        "name_en": "SetSessionsLock",
        "description": "Устанавливает режим блокировки сеансов.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Блокировка: БлокировкаСеансов)",
                "Параметры": {
                    "Блокировка": "Новое описание блокировки сеансов."
                }
            }
        }
    },
    {
        "name": "УстановитьВнешнююКомпоненту",
        "name_en": "InstallAddIn",
        "description": "Доставляет объект внешнего компонента с сервера на клиент, после чего он становится доступен для метода",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Местоположение: Строка)",
                "Параметры": {
                    "Местоположение": "Строка, определяющая местоположение внешнего компонента. В качестве строки может использоваться:  - полное имя макета, в котором хранится внешний компонент в архиве;  - URL к внешнему компоненту, упакованному в ZIP-архив, в формате, аналогичном ПолучитьНавигационнуюСсылку()."
                }
            }
        }
    },
    {
        "name": "УстановитьВремяЗавершенияСпящегоСеанса",
        "name_en": "SetHibernateSessionTerminateTime",
        "description": "Установить интервал времени в секундах, по истечении которого спящий сеанс будет завершен.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Таймаут?: Число)",
                "Параметры": {
                    "Таймаут": "Интервал времени в секундах, по истечении которого спящий сеанс завершается. Значение по умолчанию: 86400."
                }
            }
        }
    },
    {
        "name": "УстановитьВремяЗасыпанияПассивногоСеанса",
        "name_en": "SetPassiveSessionHibernateTime",
        "description": "Устанавливает интервал времени в секундах, по истечении которого неактивный сеанс переводится в спящий режим.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Таймаут?: Число)",
                "Параметры": {
                    "Таймаут": "Интервал времени в секундах, по истечении которого неактивный сеанс переводится в спящий режим. Значение по умолчанию: 1200."
                }
            }
        }
    },
    {
        "name": "УстановитьВремяОжиданияБлокировкиДанных",
        "name_en": "SetLockWaitTime",
        "description": "Устанавливает время ожидания блокировки данных (в секундах).",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Таймаут?: Число)",
                "Параметры": {
                    "Таймаут": "Время ожидания блокировки данных (в секундах). Значение по умолчанию: 20."
                }
            }
        }
    },
    {
        "name": "УстановитьЗапретЗасыпанияКомпьютера",
        "name_en": "SetComputerSleepModeProhibition",
        "description": "Устанавливает режим, при котором мобильное устройство не переходит в спящий режим.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Включить: Булево)",
                "Параметры": {
                    "Включить": "Определяет, будет ли установлен запрет засыпания компьютера:  - Истина - запрет установлен;  - Ложь - запрет снят."
                }
            }
        }
    },
    {
        "name": "УстановитьИспользованиеЖурналаРегистрации",
        "name_en": "SetEventLogUsing",
        "description": "Метод устанавливает, какие события (по уровню важности) должны регистрироваться в журнале.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Уровни: Массив)",
                "Параметры": {
                    "Уровни": "Массив уровней важности регистрируемых событий. Состоит из значений типа УровеньЖурналаРегистрации. Пустой массив означает, что никакие события регистрировать не надо. Помимо пустого массива, допускаются следующие наборы значений:  - Ошибка;  - Ошибка, Предупреждение;  - Ошибка, Предупреждение, Информация;  - Ошибка, Предупреждение, Информация, Примечание. Порядок значений в массиве несущественен."
                }
            }
        }
    },
    {
        "name": "УстановитьИспользованиеСобытияЖурналаРегистрации",
        "name_en": "SetEventLogEventUse",
        "description": "Управляет регистрацией событий в журнале регистрации.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяСобытия: Строка, Использование: ИспользованиеСобытияЖурналаРегистрации)",
                "Параметры": {
                    "ИмяСобытия": "Имя регистрируемого события.  - _$Access$_.Access - Доступ. Доступ; Записывается при следующих обстоятельствах:   - при регистрации фактов успешного доступа пользователей информационной базы к тем или иным данным,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка.  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) в этом случае имеет следующий состав:   - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались. Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Access$_.AccessDenied - Доступ. Отказ в доступе; Записывается в следующих случаях:   - при регистрации фактов отказа в доступе к тем или иным данным пользователям информационной базы,  - при попытке чтения/изменения параметров информационной базы в конфигураторе и из встроенного языка,  - при попытке чтения/изменения информации о блокировках аутентификации пользователя.  - Поле журнала регистрации Данные (Структура) имеет следующий состав:    - Для ошибки доступа к объекту (не ограничение доступа к данным):    - Право (Right) - имя нарушенного права;  - Для ошибки ограничения доступа к данным:    - Действие (Action) - Действие, которое выполнялось с данными, для объектных таблиц: Чтение (Read), Добавление (Insert), Изменение (Update), Удаление (Delete); для не объектных таблиц, все что не Чтение, то Изменение;  - Данные (Data) - скомпонованный результат выборки, поля регистрации данных, к которым обращались.Таблица значений, в которой содержатся данные из результата исполнения запроса. Все вложенные таблицы развернуты. Одинаковые значения пишутся один раз.  - _$Data$_.Delete - Данные. Удаление;  - _$Data$_.DeletePredefinedData - Данные. Удаление предопределенных данных;  - _$Data$_.DeleteVersions - Данные. Удаление версий;  - _$Data$_.New - Данные. Добавление;  - _$Data$_.NewPredefinedData - Данные. Добавление предопределенных данных;  - _$Data$_.NewVersion - Данные. Добавление версии;  - _$Data$_.Post - Данные. Проведение;  - _$Data$_.PredefinedDataInitialization - Данные. Инициализация предопределенных данных;  - _$Data$_.PredefinedDataInitializationDataNotFound - Данные. Инициализация предопределенных данных. Данные не найдены;  - _$Data$_.SetPredefinedDataInitialization - Данные. Установка инициализации предопределенных данных;  - _$Data$_.SetStandardODataInterfaceContent - Данные. Изменение состава стандартного интерфейса OData;  - _$Data$_.TotalsMaxPeriodUpdate - Данные. Изменение максимального периода рассчитанных итогов;  - _$Data$_.TotalsMinPeriodUpdate - Данные. Изменение минимального периода рассчитанных итогов;  - _$Data$_.Unpost - Данные. Отмена проведения;  - _$Data$_.Update - Данные. Изменение;  - _$Data$_.UpdatePredefinedData - Данные. Изменение предопределенных данных;  - _$Data$_.VersionCommentUpdate - Данные. Изменение комментария версии;  - _$InfoBase$_.ConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.ConfigUpdate - Информационная база. Изменение конфигурации;  - _$InfoBase$_.DBConfigBackgroundUpdateCancel - Информационная база. Отмена фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateFinish - Информационная база. Завершение фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateResume - Информационная база. Продолжение (после приостановки) процесса фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateStart - Информационная база. Запуск фонового обновления;  - _$InfoBase$_.DBConfigBackgroundUpdateSuspend - Информационная база. Приостановка (пауза) процесса фонового обновления;  - _$InfoBase$_.DBConfigExtensionUpdate - Информационная база. Изменение расширения конфигурации; Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения.  - Версия (Version) - Строка. Версия расширения.  - _$InfoBase$_.DBConfigExtensionUpdateError  - Информационная база. Ошибка изменения расширения конфигурации; Поле Данные заполняется аналогично событию _$InfoBase$_.DBConfigExtensionUpdate (при возможности вывода этих данных);  - _$InfoBase$_.DBConfigUpdate - Информационная база. Изменение конфигурации базы данных;  - _$InfoBase$_.DBConfigUpdateStart - Информационная база. Запуск обновления конфигурации базы данных;  - _$InfoBase$_.DumpError - Информационная база. Ошибка выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpFinish - Информационная база. Окончание выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.DumpStart - Информационная база. Начало выгрузки в файл; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.EraseData - Информационная база. Удаление данных информационной баз;  - _$InfoBase$_.EventLogReduce - Информационная база. Сокращение журнала регистрации; записываются при сокращении журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Дата (Date) - Дата;  - _$InfoBase$_.EventLogReduceError - Информационная база. Ошибка сокращения журнала регистрации; записываются при ошибках сокращения журнала регистрации из конфигуратора. Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.EventLogReduce (при возможности вывода этих данных);  - _$InfoBase$_.EventLogSettingsUpdate - Информационная база. Изменение параметров журнала регистрации;  - _$InfoBase$_.EventLogSettingsUpdateError - Информационная база. Изменение настроек журнала регистрации; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные (Структура) заполняется структурой со следующим составом свойств:  - При изменении уровня событий и/или периода разделения журнала регистрации(записываются только измененные параметры):  - Уровни (Levels): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При изменении формата журнала регистрации:  - ФорматЖурналаРегистрации (EventLogStructure): Строка;   - ПериодРазделения (SplitPeriod): Строка;   - При настройке использования событий журнала регистрации (с помощью метода УстановитьИспользованиеСобытияЖурналаРегистрации):  - ИмяСобытия (EventName) - Строка;   - СобытиеРегистрируется (EventIsLogged) - Булево;  - _$InfoBase$_.InfoBaseAdmParamsUpdate - Информационная база. Изменение параметров информационной базы;  - _$InfoBase$_.InfoBaseAdmParamsUpdateError - Информационная база. Ошибка изменения параметров информационной базы; Событие доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$InfoBase$_.InfoBaseAdmParamsUpdate (при возможности вывода этих данных);  - _$InfoBase$_.IntegrationServiceActiveUpdate - Информационная база. Изменение активности сервиса интеграции;  - _$InfoBase$_.IntegrationServiceSettingsUpdate - Информационная база. Изменение настроек сервиса интеграции;  - _$InfoBase$_.MasterNodeUpdate - Информационная база. Изменение главного узла;  - _$InfoBase$_.PredefinedDataUpdate - Информационная база. Обновление предопределенных данных;  - _$InfoBase$_.RegionalSettingsUpdate - Информационная база. Изменение региональных установок;  - _$InfoBase$_.RestoreError - Информационная база. Ошибка загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreFinish - Информационная база. Окончание загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.RestoreStart - Информационная база. Начало загрузки из файла; событие доступно при выгрузке и просмотре только для администратора;  - _$InfoBase$_.SecondFactorAuthTemplateDelete - Информационная база. УдалениеШаблонаВторгоФактораАутентификации; записывается при удалении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateNew - Информационная база. ДобавлениеШаблонаВторгоФактораАутентификации; записывается при создании шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SecondFactorAuthTemplateUpdate - Информационная база. ИзменениеШаблонаВторгоФактораАутентификации; записывается при изменении шаблона второго фактора аутентификации. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя шаблона с которым произведено действие.  - _$InfoBase$_.SetPredefinedDataUpdate - Информационная база. Установить обновление предопределенных данных;  - _$InfoBase$_.TARImportant - Тестирование и исправление. Ошибка;  - _$InfoBase$_.TARInfo - Тестирование и исправление. Сообщение;  - _$InfoBase$_.TARMess - Тестирование и исправление. Предупреждение;  - _$Job$_.Cancel - Фоновое задание. Отмена;  - _$Job$_.Fail - Фоновое задание. Ошибка выполнения;  - _$Job$_.Start - Фоновое задание. Запуск;  - _$Job$_.Succeed - Фоновое задание. Успешное завершение;  - _$Job$_.Terminate - Фоновое задание. Принудительное завершение;  - _$OpenIDProvider$_.NegativeAssertion - Провайдер OpenID. Отклонено; записывается базой, выступающей в роли провайдера OpenID, при отправке отрицательного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию.  - _$OpenIDProvider$_.PositiveAssertion - Провайдер OpenID. Подтверждено; записывается базой, выступающей в роли провайдера OpenID, при отправке положительного ответа на запрос аутентификации. Поле Комментарий события не заполняется. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - URLДоверяющейСтороны (RelyingPartyURL) - URL доверяющей стороны OpenID, запросившей аутентификацию;  - _$PerformError$_ - Ошибка выполнения;  - _$Session$_.Authentication - Сеанс. Аутентификация; выполняется только при удачной аутентификации. Для события Аутентификация записываются поля Пользователь и ИмяПользователя. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - КодДополненияИмениПользователя (UserNameAdditionCode)- Строка. Код дополнения имения пользователя. При наличии дополнения имени пользователя при вводе имени пользователя в процессе аутентификации.  - В случае аутентификации при помощи OpenID поле Данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID;  - ИдентификаторПользователяПровайдераOpenID (OpenIDProviderUserID) - идентификатор пользователя на провайдере.  - _$Session$_.AuthenticationError - Сеанс. Ошибка аутентификации; выполняется только при ошибке аутентификации. Поле Комментарий события не заполняется. В случае аутентификации 1С:Предприятия или аутентификации операционной системы поле Данные заполняется структурой со следующим составом свойств:   - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - В случае аутентификации при помощи OpenID поле данные заполняется структурой со следующим составом свойств:   - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы;  - URLПровайдераOpenID (OpenIDProviderURL) - URL использованного провайдера OpenID  - _$Session$_.AuthenticationFirstFactor - Сеанс. Аутентификация первый фактор; Записывается только если у пользователя включена двухфакторная аутентифкация. Для события Аутентификация первый фактор поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя;  - ТекущийПользовательОС (CurrentOSUser) - Строка. Источник данных - средства операционной системы.  - _$Session$_.ConfigExtensionApplyError - Сеанс. Ошибка применения расширения конфигурации; записывается, если в процессе применений расширения произошла ошибка. Совпадает с текстом выводимого сообщения при невозможности подключить расширение. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Имя расширения  - _$Session$_.Finish - Сеанс. Завершение;  - _$Session$_.Start - Сеанс. Начало;  - _$Transaction$_.Begin - Транзакция. Начало;  - _$Transaction$_.Commit - Транзакция. Фиксация;  - _$Transaction$_.Rollback - Транзакция. Отмена;  - _$User$_.AuthenticationLock - Пользователи. Блокировка аутентификации. Поле Данные заполняется структурой со следующим составом свойств:  - Имя (Name) – Строка. Имя пользователя, аутентификация которого блокируется. ; _$User$_.AuthenticationUnlock - Пользователи. Разблокировка аутентификации. Записывается при изменении блокировки аутентификации пользователя  (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структорой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ;  _$User$_.AuthenticationUnlockError (_$User$_.AuthenticationUnlockError) - Пользователи. Ошибка разблокировки аутентификации; записываются при отказе в ручном изменении блокировки аутентификации пользователя (в Конфигураторе или методами встроенного языка). Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) – Строка. Имя пользователя, для которого выполняется разблокировка аутентификации. ; _$User$_.Delete - Пользователи. Удаление; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - Имя (Name) - Строка. Выбирается из Имя _$User$_.DeleteError - Пользователи. Ошибка удаления; записываются как при редактировании списка пользователей в Конфигураторе, так и при удалении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Delete (при возможности вывода этих данных); _$User$_.New - Пользователи. Добавление; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево.  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево.  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык. _$User$_.NewError - Пользователи. Ошибка добавления; записываются как при создании пользователей в Конфигураторе, так и методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.New (при возможности вывода этих данных); _$User$_.Update - Пользователи. Изменение; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется структурой со следующим составом свойств:   - АутентификацияОС (OSAuthentication) - Булево. Выбирается из АутентификацияОС;  - АутентификацияСтандартная (StandardAuthentication) - Булево. Выбирается из АутентификацияСтандартная;  - АутентификацияOpenID (OpenIDAuthentication) -  Булево;  - ЗащитаОтОпасныхДействий (UnsafeOperationProtection) -  Булево;  - ЗапрещеноИзменятьПароль (CannotChangePassword) - Булево. Выбирается из ЗапрещеноИзменятьПароль;  - Имя (Name) - Строка. Выбирается из Имя;  - ОсновнойИнтерфейс (DefaultInterface) - ОсновнойИнтерфейс. Выбирается из имени интерфейса. Выводится, только если основной режим ОбычноеПриложение.  - ПарольИзменен (PasswordChanged) - Булево. Указывает, изменен ли пароль.  - ПарольУстановлен (PasswordIsSet) - Булево. Выбирается из ПарольУстановлен;  - ПоказыватьВСпискеВыбора (ShowInList) - Булево. Выбирается из ПоказыватьВСпискеВыбора;  - ПолноеИмя (FullName) - Строка. Выбирается из ПолноеИмя  - ПользовательОС (OSUser) - Строка. Выбирается из ПользовательОС;  - РежимЗапуска (RunMode) - РежимЗапускаКлиентскогоПриложения. Выбирается из РежимЗапуска;  - Роли (Roles) - Массив полных имен объектов метаданных ОбъектМетаданных: Роль;  - Язык (Language) - Язык; _$User$_.UpdateError - Пользователи. Ошибка изменения; записываются как при редактировании списка пользователей в Конфигураторе, так и при изменении пользователей методами встроенного языка. Поле Данные доступно при выгрузке и просмотре только для администратора. Поле Данные заполняется аналогично событию _$User$_.Update (при возможности вывода этих данных);",
                    "Использование": "Задает использование и режим регистрации указанного в первом параметре события.  Режим регистрации управляется значением свойства ОписаниеИспользования, которое регламентировано для двух событий:  - _$Access$_.Access – массив значений типа ОписаниеИспользованияСобытияДоступЖурналаРегистрации;  - _$Access$_.AccessDenied – массив значений типа ОписаниеИспользованияСобытияОтказВДоступеЖурналаРегистрации."
                }
            }
        }
    },
    {
        "name": "УстановитьИспользуемыйСервер",
        "name_en": "SetUsedServer",
        "description": "Указывает, какой из серверов должен использоваться мобильным клиентом без явного указания сервера. Установка действует до выхода из области видимости локальных переменных.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИспользуемыйСервер: ИспользуемыйСервер)",
                "Параметры": {
                    "ИспользуемыйСервер": "Используемый сервер."
                }
            }
        }
    },
    {
        "name": "УстановитьМинимальнуюДлинуПаролейПользователей",
        "name_en": "SetUserPasswordMinLength",
        "description": "Устанавливает минимальную длину, которую должны иметь пароли пользователей информационной базы.  - при изменении пароля существующего пользователя или при создании нового пользователя, если включена АутентификацияСтандартная или новый пароль не пустой;  - при включении АутентификацияСтандартная у существующего пользователя, если пароль пустой. Метод доступен только из сеанса, в котором все разделители не используются.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Длина?: Число)",
                "Параметры": {
                    "Длина": "Минимально допустимое количество символов в паролях пользователей. Значение по умолчанию: 5."
                }
            }
        }
    },
    {
        "name": "УстановитьМонопольныйРежим",
        "name_en": "SetExclusiveMode",
        "description": "Устанавливает и отключает использование монопольного режима.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(МонопольныйРежим: Булево)",
                "Параметры": {
                    "МонопольныйРежим": "Истина - устанавливает монопольную блокировку текущей области данных от имени сеанса; Ложь - если установлена монопольная блокировка текущей области от имени текущего сеанса, то удаляет монопольную блокировку текущей области. Снимает монопольный режим только текущей области, т.е. области, определяемой значениями установленных в сеансе разделитей. Не затрагивает монопольные блокировки подобластей;"
                }
            }
        }
    },
    {
        "name": "УстановитьНастройкиКлиентаЛицензирования",
        "name_en": "SetLicensingClientParameters",
        "description": "Предназначен для сохранения в информационной базе имени пользователя и пароля клиента лицензирования. Эти данные используются при проверке лицензионности конфигурации.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Имя?: Строка, Пароль?: Строка, ДополнительныйПараметр?: Строка)",
                "Параметры": {
                    "Имя": "Имя клиента лицензирования.",
                    "Пароль": "Пароль клиента лицензирования.",
                    "ДополнительныйПараметр": "Дополнительный параметр клиента лицензирования, используемый для технической поддержки конфигурации."
                }
            }
        }
    },
    {
        "name": "УстановитьНачалоСтолетияИнформационнойБазы",
        "name_en": "SetInfoBaseBeginningOfCentury",
        "description": "Устанавливает новое значение начала столетия для информационной базы и сохраняет его в базе данных. Если параметр имеет значение",
        "signature": {
            "default": {
                "СтрокаПараметров": "(НачалоСтолетия?: Число)",
                "Параметры": {
                    "НачалоСтолетия": "Устанавливаемое значение года начала столетия: число в диапазоне [1..9900] или Неопределено. Значение по умолчанию: Неопределено."
                }
            }
        }
    },
    {
        "name": "УстановитьОбновлениеПредопределенныхДанныхИнформационнойБазы",
        "name_en": "SetInfoBasePredefinedDataUpdate",
        "description": "Устанавливает новое значение режима обновления предопределенных данных для информационной базы. Для выполнения требуются права администратора информационной базы.  - Если для объекта метаданных в данных установлен режим обновления, отличный от Авто, то используется это значение.  - Иначе, если для объекта метаданных в конфигурации установлен режим обновления, отличный от Авто, то используется это значение.  - Иначе, если для информационной базы установлен режим обновления, отличный от Авто, то используется это значение.  - Иначе, если это периферийный узел РИБ, то предопределенные данные не будут обновлены. Если проверка выполняется для центрального узла РИБ, или для базы не являющейся РИБ, обновление предопределенных данных будет выполнено. Метод доступен только из сеанса, в котором не используется ни один разделитель.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбновлениеПредопределенныхДанных?: ОбновлениеПредопределенныхДанных)",
                "Параметры": {
                    "ОбновлениеПредопределенныхДанных": "Новый режим обновления предопределенных данных. Значение по умолчанию: Авто."
                }
            }
        }
    },
    {
        "name": "УстановитьОтключениеБезопасногоРежима",
        "name_en": "SetSafeModeDisabled",
        "description": "Выключает текущий режим безопасности.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Отключить?: Булево)",
                "Параметры": {
                    "Отключить": "Устанавливает состояние безопасного режима:  - Истина - режим будет отключен;  - Ложь - режим будет включен."
                }
            }
        }
    },
    {
        "name": "УстановитьПараметрыФункциональныхОпцийИнтерфейса",
        "name_en": "SetInterfaceFunctionalOptionParameters",
        "description": "Устанавливает параметры функциональных опций, действие которых будет распространяться на командный интерфейс и рабочий стол. Вызывает автоматическое обновление интерфейса (включая рабочий стол).",
        "signature": {
            "default": {
                "СтрокаПараметров": "(УстанавливаемыеПараметры: Структура, СбрасываемыеПараметры?: Массив)",
                "Параметры": {
                    "УстанавливаемыеПараметры": "Структура, определяющая значения параметров. Ключ элемента структуры задает имя параметра, соответствующее имени одному из объектов метаданных типа ПараметрФункциональныхОпций. Значение элемента структуры содержит значение параметра.",
                    "СбрасываемыеПараметры": "Сбрасываемые параметры функциональных опций.  Могут задаваться строкой (имена опций указываются через запятую) или массивом строк имен параметров функциональных опции, значения которых необходимо сбросить."
                }
            }
        }
    },
    {
        "name": "УстановитьПреимущественноеИспользованиеОсновногоСервера",
        "name_en": "SetPreferableMainServerUse",
        "description": "После вызова данного метода мобильный клиент с автономным режимом использует основной сервер, вне зависимости от приоритета установленного в конфигурации.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Включить: Булево)",
                "Параметры": {
                    "Включить": "Определяет, будет ли включен режим преимущественного использования основного сервера:  - Истина - режим включен;  - Ложь - режим выключен."
                }
            }
        }
    },
    {
        "name": "УстановитьПривилегированныйРежим",
        "name_en": "SetPrivilegedMode",
        "description": "В файловом варианте информационной базы или на сервере в клиент-серверном варианте информационной базы управляет (включает или выключает) привилегированным режимом исполнения кода, аналогичным режиму работы кода привилегированных модулей. В привилегированном режиме никакие проверки прав не выполняются и разрешены любые операции. В клиент-серверном варианте при выполнении на клиенте данный метод не выполняет никаких действий.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Включить: Булево)",
                "Параметры": {
                    "Включить": "Определяет, будет ли включен привилегированный режим:  - Истина - включить режим;  - Ложь - выключить режим."
                }
            }
        }
    },
    {
        "name": "УстановитьПроверкуСложностиПаролейПользователей",
        "name_en": "SetUserPasswordStrengthCheck",
        "description": "Устанавливает или отключает следующие ограничения на сложность паролей пользователей информационной базы:  - Длина не менее 7 символов;  - Содержит не менее 3-х типов символов из перечисленных ниже:   - заглавные буквы;  - строчные буквы;  - цифры;  - спец. символы.   - Не совпадает с именем пользователя;  - Не является последовательностью символов. Действует только:  - при изменении пароля существующего пользователя или при создании нового пользователя, если включена АутентификацияСтандартная или новый пароль не пустой;  - при включении АутентификацияСтандартная у существующего пользователя, если пароль пустой. Метод доступен только из сеанса, в котором все разделители не используются.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(СложныйПароль: Булево)",
                "Параметры": {
                    "СложныйПароль": "Истина - установить; Ложь - снять."
                }
            }
        }
    },
    {
        "name": "УстановитьРасширениеРаботыСКриптографией",
        "name_en": "InstallCryptoExtension",
        "description": "Устанавливает расширение для работы с криптографией в браузер."
    },
    {
        "name": "УстановитьРасширениеРаботыСФайлами",
        "name_en": "InstallFileSystemExtension",
        "description": "Устанавливает расширение работы с файлами."
    },
    {
        "name": "УстановитьСоединениеСВнешнимИсточникомДанных",
        "name_en": "ConnectExternalDataSource",
        "description": "Устанавливает соединение с внешним источником данных.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ИмяВнешнегоИсточникаДанных?: Строка)",
                "Параметры": {
                    "ИмяВнешнегоИсточникаДанных": "Имя внешнего источника данных, с которым нужно установить соединение."
                }
            }
        }
    },
    {
        "name": "УстановитьСоответствиеОбъектаИРеквизитаФормы",
        "name_en": "SetObjectAndFormAttributeConformity",
        "description": "Метод автоматически устанавливает соответствие между реквизитами формы клиентского приложения и объектами вида",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Объект: СправочникОбъект.<Имя справочника>, ИмяРеквизита: Строка)",
                "Параметры": {
                    "Объект": "Прикладной объект, преобразованный из данных формы в значение, для которого необходимо установить соответствие с именем реквизита формы.",
                    "ИмяРеквизита": "Имя существующего реквизита формы."
                }
            }
        }
    },
    {
        "name": "УстановитьСоответствиеОбъектаИФормы",
        "name_en": "SetObjectAndFormConformity",
        "description": "Устанавливает соответствие формы клиентского приложения и объектов вида",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Объект: СправочникОбъект.<Имя справочника>, ИдентификаторФормыИИмяРеквизита: Структура)",
                "Параметры": {
                    "Объект": "Прикладной объект, преобразованный из универсального объекта в значение, для которого необходимо установить соответствие с именем реквизита формы.",
                    "ИдентификаторФормыИИмяРеквизита": "Содержит идентификатор формы и имя реквизита элемента управления, для которых выполняется установка соответствия.  Структура, передаваемая в параметр, может содержать два элемента с именами ключей: 1. \"ИдентификаторФормы\" (\"FormID\") – уникальный идентификатор формы (тип УникальныйИдентификатор); 2. \"ИмяРеквизита\" (\"AttributeName\") – имя реквизита в форме (тип Строка). Этот элемент может не указываться."
                }
            }
        }
    },
    {
        "name": "УстановитьСоставСтандартногоИнтерфейсаOData",
        "name_en": "SetStandardODataInterfaceContent",
        "description": "Устанавливает состав объектов метаданных, доступных через стандартный сервис OData API.  - Справочник.ИмяСправочника  - Документ.ИмяДокумента  - ПланОбмена.ИмяПланаОбмена  - ПланСчетов.ИмяПланаСчетов  - ПланВидовРасчета.ИмяПланаВидовРасчета  - ПланВидовХарактеристик.ИмяПланаВидовХарактеристик  - РегистрБухгалтерии.ИмяРегистраБухгалтерии  - РегистрСведений.ИмяРегистраСведений  - РегистрРасчета.ИмяРегистраРасчета  - РегистрНакопления.ИмяРегистраНакопления  - ЖурналДокументов.ИмяЖурналаДокументов  - Перечисление.ИмяПеречисления  - Задача.ИмяЗадачи  - БизнесПроцесс.ИмяБизнесПроцесса  - Константа.ИмяКонстанты",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ОбъектыМетаданных: Массив)",
                "Параметры": {
                    "ОбъектыМетаданных": "Массив объектов метаданных и/или имен объектов метаданных."
                }
            }
        }
    },
    {
        "name": "УстановитьЧасовойПоясИнформационнойБазы",
        "name_en": "SetInfoBaseTimeZone",
        "description": "Устанавливает новый часовой пояс информационной базы и сохраняет его в базе данных. Если параметр не задан, то установка часового пояса информационной базы отменяется. В этом случае часовой пояс информационной базы совпадает с часовым поясом сервера.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧасовойПояс?: Строка)",
                "Параметры": {
                    "ЧасовойПояс": "Идентификатор часового пояса. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59."
                }
            }
        }
    },
    {
        "name": "УстановитьЧасовойПоясСеанса",
        "name_en": "SetSessionTimeZone",
        "description": "Устанавливает часовой пояс текущего сеанса. Если параметр не задан, то часовым поясом сеанса становится часовой пояс информационной базы, если он определен, или часовой пояс компьютера сервера, если часовой пояс информационной базы не определен.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ЧасовойПояс?: Строка)",
                "Параметры": {
                    "ЧасовойПояс": "Идентификатор часового пояса. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59."
                }
            }
        }
    },
    {
        "name": "Формат",
        "name_en": "Format",
        "description": "Формирует удобное для чтения представление значений. Полезно использование в отчетах и при прочем визуальном отображении значений.",
        "returns": "Тип: Строка. Строка, полученная в результате форматирования переданного значения.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Число, ФорматнаяСтрока?: Строка): Строка",
                "Параметры": {
                    "Значение": "Форматируемое значение.",
                    "ФорматнаяСтрока": "Форматная строка представляет собой строковое значение, включающее параметры форматирования.  Параметры форматирования перечисляются через символ \";\". Наличие параметра означает отличие форматирования от стандартного.  Если параметр не задан, то применяется стандартное форматирование, которое в основном соответствует преобразованию значения к строке. Однако для значений типа Число и Дата по умолчанию (0 и 01.01.0001 00:00:00 соответственно) будет выдаваться пустая строка. Каждый параметр задается именем параметра, символом \"=\" и значением параметра. Значение параметра может указываться в одинарных или двойных кавычках. Это необходимо, если значение параметра содержит символы, используемые в синтаксисе форматной строки. Внутри значения параметра могут указываться произвольные символы, которые при формировании результирующей строки будут отображаться как есть. Таким образом, например, можно указывать разделители часов, минут и секунд при форматировании времени. Если эти символы совпадают со значениями форматной строки, их необходимо заключать в одинарные кавычки. Имена и значения параметров форматной строки:  - Л (L) - имя языка, страны, для которых будет выполняться стандартное форматирование. Доступные имена языков:   - af Африкаанс  - af_NA (af_NA) Африкаанс (Намибия)  - af_ZA Африкаанс (Южная Африка)  - am Амхарский  - am_ET Амхарский (Эфиопия)  - ar Арабский  - ar_AE Арабский (Объединенные Арабские Эмираты)  - ar_BH Арабский (Бахрейн)  - ar_DZ Арабский (Алжир)  - ar_EG Арабский (Египет)  - ar_IQ Арабский (Ирак)  - ar_JO Арабский (Иордания)  - ar_KW Арабский (Кувейт)  - ar_LB Арабский (Ливан)  - ar_LY Арабский (Ливия)  - ar_MA Арабский (Марокко)  - ar_OM Арабский (Оман)  - ar_QA Арабский (Катар)  - ar_SA Арабский (Саудовская Аравия)  - ar_SD Арабский (Судан)  - ar_SY Арабский (Сирия)  - ar_TN Арабский (Тунис)  - ar_YE Арабский (Йемен)  - as Ассамский  - as_IN Ассамский (Индия)  - az Азербайджанский  - az_AZ Азербайджанский (Азербайджан)  - az_Cyrl Азербайджанский (Кириллица)  - az_Cyrl_AZ Азербайджанский (Кириллица, Азербайджан)  - az_Latn Азербайджанский (Латиница)  - az_Latn_AZ Азербайджанский (Латиница, Азербайджан)  - be Белорусский  - be_BY Белорусский (Беларусь)  - bg Болгарский  - bg_BG Болгарский (Болгария)  - bn Бенгальский  - bn_IN Бенгальский (Индия)  - ca Каталанский  - ca_ES Каталанский (Испания)  - cs Чешский  - cs_CZ Чешский (Чешская Республика)  - cy Валлийский  - cy_GB Валлийский (Великобритания)  - da Датский  - da_DK Датский (Дания)  - de Немецкий  - de_AT Немецкий (Австрия)  - de_BE Немецкий (Бельгия)  - de_CH Немецкий (Швейцария)  - de_DE Немецкий (Германия)  - de_LI (de_LI) Немецкий (Лихтенштейн)  - de_LU Немецкий (Люксембург)  - el Греческий  - el_CY (el_CY) Греческий (Кипр)  - el_GR Греческий (Греция)  - en Английский  - en_AU Английский (Австралия)  - en_BE Английский (Бельгия)  - en_BW Английский (Ботсвана)  - en_BZ (en_BZ) Английский (Белиз)  - en_CA Английский (Канада)  - en_GB Английский (Великобритания)  - en_HK Английский (Гонконг, (Область с Особым Административным Управлением, Китай))  - en_IE Английский (Ирландия)  - en_IN Английский (Индия)  - en_JM (en_JM) Английский (Ямайка)  - en_MH (en_MH) Английский (Маршалловы Острова)  - en_MT Английский (Мальта)  - en_NA (en_NA) Английский (Намибия)  - en_NZ Английский (Новая Зеландия)  - en_PH Английский (Филиппины)  - en_PK Английский (Пакистан)  - en_SG Английский (Сингапур)  - en_TT (en_TT) Английский (Тринидад и Тобаго)  - en_US Английский (Соединенные Штаты Америки)  - en_VI Английский (Американские Виргинские Острова)  - en_ZA Английский (Южная Африка)  - en_ZW Английский (Зимбабве)  - es Испанский  - es_AR Испанский (Аргентина)  - es_BO Испанский (Боливия)  - es_CL Испанский (Чили)  - es_CO Испанский (Колумбия)  - es_CR Испанский (Коста-Рика)  - es_DO Испанский (Доминиканская Республика )  - es_EC Испанский (Эквадор)  - es_ES Испанский (Испания)  - es_GT Испанский (Гватемала)  - es_HN Испанский (Гондурас)  - es_MX Испанский (Мексика)  - es_NI Испанский (Никарагуа)  - es_PA Испанский (Панама)  - es_PE Испанский (Перу)  - es_PR Испанский (Пуэрто-Рико)  - es_PY Испанский (Парагвай)  - es_SV Испанский (Сальвадор)  - es_US Испанский (Соединенные Штаты Америки)  - es_UY Испанский (Уругвай)  - es_VE Испанский (Венесуэлла)  - et Эстонский  - et_EE Эстонский (Эстония)  - eu Баскский  - eu_ES Баскский (Испания)  - fa Персидский  - fa_AF Персидский (Афганистан)  - fa_IR Персидский (Иран)  - fi Финский  - fi_FI Финский (Финляндия)  - fo Фарерский  - fo_FO Фарерский (Фарерские острова)  - fr Французский  - fr_BE Французский (Бельгия)  - fr_CA Французский (Канада)  - fr_CH Французский (Швейцария)  - fr_FR Французский (Франция)  - fr_LU Французский (Люксембург)  - fr_MC (fr_MC) Французский (Монако)  - fr_SN (fr_SN) Французский (Сенегал)  - ga Ирландский  - ga_IE Ирландский (Ирландия)  - gl Галисийский  - gl_ES, Галисийский (Испания)  - gu Гуярати  - gu_IN Гуярати (Индия)  - he Иврит  - he_IL Иврит (Израиль)  - hi Хинди  - hi_IN Хинди (Индия)  - hr Хорватский  - hr_HR Хорватский (Хорватия)  - hu Венгерский  - hu_HU Венгерский (Венгрия)  - hy Армянский  - hy_AM Армянский (Армения)  - hy_AM_REVISED Армянский (Армения, REVISED)  - id Индонезийский  - id_ID Индонезийский (Индонезия)  - is Исландский  - is_IS Исландский (Исландия)  - it Итальянский  - it_CH, Итальянский (Швейцария)  - it_IT Итальянский (Италия)  - ja Японский  - ja_JP Японский (Япония)  - ka Грузинский  - ka_GE Грузинский (Грузия)  - kk Казахский  - kk_KZ Казахский (Казахстан)  - kl Гренландский  - kl_GL Гренландский (Гренландия)  - kn Каннада  - kn_IN Каннада (Индия)  - ko Корейский  - ko_KR Корейский (Южная Корея)  - kok Конкани  - kok_IN Конкани (Индия)  - ky Киргизский  - ky_KY Киргизский (Киргизия)  - lt Литовский  - lt_LT Литовский (Литва)  - lv Латышский  - lv_LV Латышский (Латвия)  - mk Македонский  - mk_MK Македонский (Македония)  - ml Малаялам  - ml_IN Малаялам (Индия)  - mr Маратийский  - mr_IN Маратийский (Индия)  - ms Малайский  - ms_BN Малайский (Бруней)  - ms_MY Малайский (Малайзия)  - mt Мальтийский  - mt_MT Мальтийский (Мальта)  - nb Норвежский букмол  - nb_NO Норвежский букмол (Норвегия)  - nl Голландский  - nl_BE Голландский (Бельгия)  - nl_NL Голландский (Нидерланды)  - nn Норвежский нюнорск  - nn_NO Норвежский нюнорск (Норвегия)  - om Оромо (Афан)  - om_ET Оромо (Афан) (Эфиопия)  - om_KE Оромо (Афан) (Кения)  - or Ория  - or_IN Ория (Индия)  - pa Панджабский  - pa_IN Панджабский (Индия)  - pl Польский  - pl_PL Польский (Польша)  - ps Пашто (Пушто)  - ps_AF Пашто (Пушто) (Афганистан)  - pt Португальский  - pt_BR Португальский (Бразилия)  - pt_PT Португальский (Португалия)  - ro Румынский  - ro_RO Румынский (Румыния)  - ru Русский  - ru_RU Русский (Россия)  - ru_UA Русский (Украина)  - sk Словацкий  - sk_SK Словацкий (Словакия)  - sl Словенский  - sl_SI Словенский (Словения)  - so Сомали  - so_DJ Сомали (Джибути)  - so_ET Сомали (Эфиопия)  - so_KE Сомали (Кения)  - so_SO Сомали (Сомали)  - sq Албанский  - sq_AL Албанский (Албания)  - sr Сербский  - sr_BA (sr_BA) Сербский (Босния и Герцеговина)  - sr_CS Сербский (Сербия и Черногория)  - sr_Cyrl Сербский (Кириллица)  - sr_Cyrl_BA (sr_Cyrl_BA) Сербский (Кириллица, Босния и Герцеговина)  - sr_Cyrl_CS Сербский (Кириллица, Сербия и Черногория)  - sr_Cyrl_ME (sr_Cyrl_ME) Сербский (Кириллица, Черногория)  - sr_Cyrl_RS (sr_Cyrl_RS) Сербский (Кириллица, Сербия)  - sr_Latn Сербский (Латиница)  - sr_Latn_BA (sr_Latn_BA) Сербский (Латиница, Босния и Герцеговина)  - sr_Latn_CS Сербский (Латиница, Сербия и Черногория)  - sr_Latn_ME (sr_Latn_ME) Сербский (Латиница, Черногория)  - sr_Latn_RS (sr_Latn_RS) Сербский (Латиница, Сербия)  - sr_ME (sr_ME) Сербский (Черногория)  - sr_RS (sr_RS) Сербский (Сербия)  - sv Шведский  - sv_FI Шведский (Финляндия)  - sv_SE Шведский (Швеция)  - sw Суахили  - sw_KE Суахили (Суахили)  - sw_TZ Суахили (Танзания)  - ta Тамильский  - ta_IN Тамильский (Индия)  - te Телугу  - te_IN Телугу (Индия)  - th Тайский  - th_TH Тайский (Таиланд)  - ti Тигриниа  - ti_ER Тигриниа (Эритрея)  - ti_ET Тигриниа (Эфиопия)  - tr Турецкий  - tr_TR Турецкий (Турция)  - uk Украинский  - uk_UA Украинский (Украина)  - ur Урду  - ur_PK Урду (Пакистан)  - uz Узбекский  - uz_Cyrl Узбекский (Кириллица)  - uz_Cyrl_UZ Узбекский (Кириллица, Узбекистан)  - uz_Latn Узбекский (Латиница)  - uz_Latn_UZ Узбекский (Латиница, Узбекистан)  - uz_UZ Узбекский (Узбекистан)  - vi Вьетнамский  - vi_VN Вьетнамский (Вьетнам)  - zh Китайский  - zh_CN Китайский (Китай)  - zh_Hans Китайский (Hans)  - zh_Hans_CN Китайский (Hans, Китай)  - zh_Hans_SG Китайский (Hans, Сингапур)  - zh_Hant Китайский (Hant)  - zh_Hant_HK Китайский (Hant, Гонконг (Область с Особым Административным Управлением, Китай))  - zh_Hant_MO Китайский (Hant, Макао (Область с Особым Административным Управлением, Китай))  - zh_Hant_TW Китайский (Hant, Тайвань)  - zh_HK Китайский (Гонконг (Область с Особым Административным Управлением, Китай))  - zh_MO Китайский (Макао (Область с Особым Административным Управлением, Китай))  - zh_SG Китайский (Сингапур)  - zh_TW Китайский (Тайвань)  - ЧЦ (ND) - общее число отображаемых десятичных разрядов целой и дробной частей. Исходное число округляется при этом в соответствии с правилами округления Окр15как20. Если указан этот параметр, то для отображения дробной части числа обязательно указание параметра ЧДЦ, иначе дробная часть отображаться не будет.  - ЧДЦ (NFD) - число десятичных разрядов в дробной части. Исходное число округляется при этом в соответствии с правилами округления Окр15как20.  - ЧС (NS) - сдвиг разрядов: положительный - деление, отрицательный - умножение. Другими словами, это означает, что исходное число будет умножено или поделено на 10*С, где С - значение параметра по модулю.  - ЧРД (NDS) - символ-разделитель целой и дробной части.  - ЧРГ (NGS) - символ-разделитель групп целой части числа. Если в качестве разделителя использовать пустую строку, то в этом случае разделителем будет символ неразрывного пробела.  - ЧН (NZ) - строка, представляющая нулевое значение числа. Если не задано, то представление в виде пустой строки. Если задано \"ЧН=\", то в виде \"0\". Не используется для числовых полей ввода.  - ЧВН (NLZ) - если параметр указан, лидирующие нули выводятся. Если не указан - лидирующие нули не выводятся. Значение параметра игнорируется.  - ЧГ (NG) - порядок группировки разрядов числа. В качестве значения указываются числа, через запятую, обозначающие количество группируемых разрядов справа налево. Имеют смысл только два первых числа. Первое из них указывает первичную группировку, то есть ту, которая будет использована для наименее значимых разрядов целой части числа. Если второе число не указано, то будут сгруппированы только наименее значимые разряды. Если в качестве второго числа задан 0, то для всех разрядов целой части числа будет применено значение указанное для первичной группировки. Если в качестве второго числа используется значение, отличное от 0, то это значение будет использовано для группировки всех разрядов, кроме уже сгруппированных наименее значимых.  - ЧО (NN) - представление отрицательных чисел.   - 0 (0) - строка вида \"(1,1)\";  - 1 (1) - строка вида \"-1,1\";  - 2 (2) - строка вида \"- 1,1\";  - 3 (3) - строка вида \"1,1-\";  - 4 (4) - строка вида \"1,1 -\".  - ДФ (DF) - формат даты.   - д (d) - день месяца (цифрами) без лидирующего нуля;  - дд (dd) - день месяца (цифрами) с лидирующим нулем;  - ддд (ddd) - краткое название дня недели *);  - дддд (dddd) - полное название дня недели *);  - М (m) - минута без лидирующего нуля;  - ММ (mm) - минута с лидирующим нулем;  - МММ (MMM) - краткое название месяца *);  - ММММ (MMMM) - полное название месяца *);  - к (q) - номер квартала в году;  - г  (y) - номер года без века и лидирующего нуля;  - гг (yy) - номер года без века с лидирующим нулем;  - гггг (yyyy) - номер года с веком;  - ч (h) - час в 12-часовом варианте без лидирующих нулей;  - чч (hh) - час в 12-часовом варианте с лидирующим нулем;  - Ч (H) - час в 24-часовом варианте без лидирующих нулей;  - ЧЧ (HH) - час в 24-часовом варианте с лидирующим нулем;  - м (m) - минута без лидирующего нуля;  - мм (mm) - минута с лидирующим нулем;  - с (s) - секунда без лидирующего нуля;  - сс (ss) - секунда с лидирующим нулем;  - вв (tt) - отображение половины дня AM/PM (действительно только для языков конфигурирования, поддерживающих 12 часовой вариант представления времени).  - Примечание: *) - не используется для форматной строки поля ввода даты.  - ДЛФ (DLF) - локальный формат даты. Указывается вариант отображения частей даты.   - Д (D) - дата (цифрами);  - ДД (DD) - длинная дата (месяц прописью);  - В (T) - полное время, дата может объединяться со временем;  - ДВ (DT) - дата время.  - Пример: выражение Формат('20051120140323',\"ДЛФ=ДДВ\") имеет значение \"20 ноября 2005 г. 14:03:23\".  - Важно! Порядок следования опций форматной строки для ДЛФ <дата + время> (ДВ или ДДВ) не может быть изменен.  - ДП (DE) - строка, представляющая пустую дату (например, Формат('00010101000000' ,\"ДП=\"\"пустая дата\"\"\") вернет строку \"пустая дата\").  - БЛ (BF) - строка, представляющая логическое значение Ложь.  - БИ (BT) - строка, представляющая логическое значение Истина.  - ЧФ (NF) - шаблон форматирования числа. В строке можно использовать символ Ч(N) для указания позиции, в которую нужно вывести число. Число выводится с учетом остальных параметров, заданных в форматной строке. Остальные символы выводятся как есть. Символы, находящиеся между двойными или одинарными кавычками выводятся как есть. Шаблон форматирования не применяется к числу 0 (за исключением случая наличия в формате строки параметра \"ЧН=\"). Примечание. Использование параметров для поля ввода: параметр ДП (DE) не используется; параметр ДЛФ (DLF) используется только со значениями Д (D), В(T) и ДВ (DT)."
                }
            }
        }
    },
    {
        "name": "Цел",
        "name_en": "Int",
        "description": "Вычисляет целую часть переданного числа, полностью отсекая дробную часть.",
        "returns": "Тип: Число. Результат выделения целой части.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число): Число",
                "Параметры": {
                    "Число": "Исходное число."
                }
            }
        }
    },
    {
        "name": "Час",
        "name_en": "Hour",
        "description": "Определяет час в указанной дате.",
        "returns": "Тип: Число. Час в указанной дате.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Дата: Дата): Число",
                "Параметры": {
                    "Дата": "Исходная дата."
                }
            }
        }
    },
    {
        "name": "ЧасовойПояс",
        "name_en": "TimeZone",
        "description": "Получает идентификатор часового пояса компьютера.",
        "returns": "Тип: Строка. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59."
    },
    {
        "name": "ЧасовойПоясСеанса",
        "name_en": "SessionTimeZone",
        "description": "Получает идентификатор часового пояса текущего сеанса.",
        "returns": "Тип: Строка. Список допустимых часовых поясов может быть получен методом ПолучитьДопустимыеЧасовыеПояса.  Кроме того, возможно задание часовых поясов смещением от универсального времени (часовые пояса GMT) в формате: GMT{+/-}h[h][:mm] где hh=0:23, mm=0:59."
    },
    {
        "name": "Число",
        "name_en": "Number",
        "description": "Преобразует полученный параметр в значение типа   - Ложь преобразуется в 0;  - Истина преобразуется в 1.",
        "returns": "Тип: Число. Полученное значение.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Значение: Строка): Число",
                "Параметры": {
                    "Значение": "Исходное значение."
                }
            }
        }
    },
    {
        "name": "ЧислоИзДвоичнойСтроки",
        "name_en": "NumberFromBinaryString",
        "description": "Преобразует двоичную строку в значение типа",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ДвоичнаяСтрока: Строка): Число",
                "Параметры": {
                    "ДвоичнаяСтрока": "Двоичная строка."
                }
            }
        }
    },
    {
        "name": "ЧислоИзШестнадцатеричнойСтроки",
        "name_en": "NumberFromHexString",
        "description": "Преобразует шестнадцатеричную строку в значение типа",
        "returns": "Тип: Число. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(ШестнадцатеричнаяСтрока: Строка): Число",
                "Параметры": {
                    "ШестнадцатеричнаяСтрока": "Шестнадцатеричная строка."
                }
            }
        }
    },
    {
        "name": "ЧислоПрописью",
        "name_en": "NumberInWords",
        "description": "Формирует представление числа прописью в соответствии с заданными форматной строкой и параметрами предмета исчисления.",
        "returns": "Тип: Строка. Представление числа прописью.",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Число: Число, ФорматнаяСтрока?: Строка, ПараметрыПредметаИсчисления?: Строка): Строка",
                "Параметры": {
                    "Число": "Число, которое необходимо преобразовать в строку прописью.",
                    "ФорматнаяСтрока": "Форматная строка представляет собой строковое значение, включающее параметры форматирования. Параметры форматирования перечисляются через символ \";\" (точка с запятой). Если параметр не указывается, используется значение параметра по умолчанию. Каждый параметр задается именем параметра, символом \"=\" (равно) и значением параметра. Значение параметра может указываться в одинарных или двойных кавычках. Это необходимо, если значение параметра содержит символы, используемые в синтаксисе форматной строки.  - Л (L) - Код локализации. По умолчанию используется код локализации, установленный в операционной системе. Примеры кодов локализации: ru_RU - Русский (Россия); en_US - Английский (США).  - НП (SN) - Включать/не включать название предмета исчисления (Булево), по умолчанию - Истина.  - НД (FN) - Включать/не включать название десятичных частей предмета исчисления (Булево), по умолчанию - Истина.  - ДП (FS) - Дробную часть выводить прописью/числом (Булево), по умолчанию - Ложь;  - ИИ (AU) - Определяет формирование классической (с использованием союза and перед прописью десятков и/или единиц внутри прописи триады) или упрощенной (без использования союза and) прописи числа. Имеет смысл и анализируется только при англоязычной локализации (en, en_XX). Возможные значения параметра:   - НеИспользовать (DontUse) - формировать упрощенную пропись числа (используется по умолчанию);  - Использовать (Use) - формировать классическую пропись числа.",
                    "ПараметрыПредметаИсчисления": "Представляет собой строковое значение, определяющее параметры предмета исчисления. Параметры предмета исчисления перечисляются через запятую. Формат строки зависит от кода локализации. Для русского и белорусского языков (ru_RU, be_BY): \"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2\", где: \"рубль, рубля, рублей, м\" – предмет исчисления:   - рубль – единственное число именительный падеж;  - рубля – единственное число родительный падеж;  - рублей – множественное число родительный падеж;  - м – мужской род (ж – женский род, с - средний род);  - \"копейка, копейки, копеек, ж\" – дробная часть, аналогично предмету исчисления (может отсутствовать);  - \"2\" – количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Для украинского языка (uk_UA):  \"гривна, гривны, гривен, м, копейка, копейки, копеек, ж, 2\", где: \"гривна, гривны, гривен, м\" – предмет исчисления:   - \"гривна – единственное число именительный падеж;  - гривны – единственное число родительный падеж;  - гривен – множественное число родительный падеж;  - м – мужской род (ж – женский род, с - средний род);  - \"копейка, копейки, копеек, ж\" – дробная часть, аналогично предмету исчисления (может отсутствовать);  - \"2\" – количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Для польского языка (pl_PL):  \"złoty, złote, złotych, m, grosz, grosze, groszy, m, 2\" где: \"złoty, złote, złotych, m \" - предмет исчисления (m - мужской род, ż - женский род, ń - средний род, mo – личностный мужской род).  - złoty - единственное число именительный падеж;  - złote - единственное число винительный падеж;  - złotych - множественное число винительный падеж;  - m - мужской род (ż - женский род, ń - средний род, mo – личностный мужской род);  - \"grosz, grosze, groszy, m \" - дробная часть (может отсутствовать) (аналогично целой части);  - 2 - количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Пример: Пропись = ЧислоПрописью(1832, “L=pl_PL;SN=true;FN=true;FS=true”, “złoty, złote, złotych, m, grosz, grosze, groszy, m, 2”); Для английского, французского, финского и казахского языков (en_US, fr_CA,fi_FI, kk_KZ): \"dollar, dollars, cent, cents, 2\", где:  - \"dollar, dollars\" – предмет исчисления в единственном и множественном числе;  - \"cent, cents\" – дробная часть в единственном и множественном числе (может отсутствовать);  - \"2\" – количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Для немецкого языка (de_DE): \"EURO, EURO, М, Cent, Cent, M, 2\", где: \"EURO, EURO, М\" – предмет исчисления:   - EURO, EURO – предмет исчисления в единственном и множественном числе;  - М – мужской род (F – женский род, N - средний род); \"Cent, Cent, M\" – дробная часть, аналогично предмету исчисления (может отсутствовать); \"2\" – количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Для латышского языка (lv_LV): \"lats, lati, latu, V, santīms, santīmi, santīmu, V, 2, J, J\", где: \"lats, lati, latu, v\" – предмет исчисления:   - lats – для чисел заканчивающихся на 1, кроме 11;  - lati – для чисел заканчивающихся на 2-9 и 11;  - latu – множественное число (родительный падеж) используется после числительных 0, 10, 20,..., 90, 100, 200, ..., 1000, ..., 100000;  - v – мужской род (s – женский род); \"santīms, santīmi, santīmu, V\" – дробная часть, аналогично предмету исчисления (может отсутствовать); \"2\" – количество разрядов дробной части (может отсутствовать, по умолчанию равно 2); \"J\" - число 100 выводится как \"Одна сотня\" для предмета исчисления (N - как \"Сто\"); может отсутствовать, по умолчанию равно \"J\"; \"J\" - число 100 выводится как \"Одна сотня\" для дробной части (N - как \"Сто\"); может отсутствовать, по умолчанию равно \"J\". Для литовского языка (lt_LT): \"litas, litai, litų, М, centas, centai, centų, М, 2\", где: \"litas, litai, litų, М\" – предмет исчисления:  - litas - единственное число целой части;  - litai - множественное число целой части от 2 до 9;  - litų - множественное число целой части прочие;  - m - род целой части (f - женский род), \"centas, centai, centų, М\" – дробная часть, аналогично предмету исчисления (может отсутствовать); \"2\" - количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Для эстонского языка (et_EE): \"kroon, krooni, sent, senti, 2\", где: \"kroon, krooni\" – – предмет исчисления в единственном и множественном числе;  - \"sent, senti\" – дробная часть в единственном и множественном числе (может отсутствовать);  - 2 – количество разрядов дробной части (может отсутствовать, по умолчанию равно 2). Для болгарского языка (bg_BG): \"лев, лева, м, стотинка, стотинки, ж, 2\", где: \"лев, лева, м\" – предмет исчисления:  - лев - единственное число целой части;  - лева - множественное число целой части;  - м - род целой части, \"стотинка, стотинки, ж\" - дробная часть:  - стотинка - единственное число дробной части;  - стотинки - множественное число дробной части;  - ж - род дробной части, \"2\" - количество разрядов дробной части. Для румынского языка (ro_RO): \"leu, lei, M, ban, bani, W, 2\"; \"leu, lei, M\" – предмет исчисления:  - leu - единственное число целой части;  - lei - множественное число целой части;  - M - род целой части; \"ban, bani, W\" - дробная часть:  - ban - единственное число дробной части;  - bani - множественное число дробной части;  - W - род дробной части; \"2\" - количество разрядов дробной части. Для грузинского языка (ka_GE): \"ლარი, თეთრი, 2\";  - ლარი - целая часть;  - თეთრი - дробная часть;  - \"2\" - количество разрядов дробной части. Для азербайджанского(az) и туркменского языков(tk): \"TL,Kr,2 \" , где  - \"TL\" - предмет исчисления;  - \"Kr\" - дробная часть (может отсутствовать);  - 2 - количество разрядов дробной части (может отсутствовать, по умолчанию - 2) Для вьетнамского языка (vi_VN): \"dong, xu, 2\";  - dong, - целая часть;  - xu, - дробная часть;  - 2 - количество разрядов дробной части. Для турецкого языка (tr_TR): \"TL,Kr,2,Separate\", где:  - TL - целая часть;  - Kr - дробная часть (может отсутствовать);  - 2 - количество разрядов дробной части (может отсутсвовать, значение по умолчанию - 2);  - \"Separate\" - признак написания прописи раздельно, \"Solid\" - слитно (может отсутствовать, по умолчанию слитно). Для венгерского языка (hu): \"Forint, fillér, 2\", где  - Forint - целая часть;  - fillér - дробная часть;  - \"2\" - количество разрядов дробной части.  Значение по умолчанию: Пустая строка."
                }
            }
        }
    },
    {
        "name": "ЭтоАдресВременногоХранилища",
        "name_en": "IsTempStorageURL",
        "description": "Проверяет, является ли переданный адрес адресом файла во временном хранилище.",
        "returns": "Тип: Булево. ",
        "signature": {
            "default": {
                "СтрокаПараметров": "(Адрес: Строка): Булево",
                "Параметры": {
                    "Адрес": "Адрес файла во временном хранилище, который необходимо проверить."
                }
            }
        }
    }
]

GlobalScope.registerGlobalSymbols(definition.map(d => {
    return {
        name: d.name,
        kind: SymbolType.function,
        type: d.returns
    }
}))